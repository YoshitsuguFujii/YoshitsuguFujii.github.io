<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

    <title><![CDATA[Category: ruby | なんとなく日々徒然と]]></title>
    <link href="http://yoshitsugufujii.github.io/blog/categories/ruby/atom.xml" rel="self"/>
    <link href="http://yoshitsugufujii.github.io/"/>
    <updated>2021-11-16T14:15:29+09:00</updated>
    <id>http://yoshitsugufujii.github.io/</id>
    <author>
        <name><![CDATA[Yoshitsugu Fujii]]></name>
        
      </author>
    <generator uri="http://octopress.org/">Octopress</generator>

    
    <entry>
        <title type="html"><![CDATA[grapeでrender_to_string]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2021/11/16/render-jbuilder-text-in-grape/"/>
        <updated>2021-11-16T14:08:41+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2021/11/16/render-jbuilder-text-in-grape</id>
        <content type="html"><![CDATA[<p>すっかり存在を忘れていたような、あえて忘れていたような。<br/>
お久しぶりです。藤井です。</p>

<p>最近は横須賀のボートばっかり行ってます。カヤックもはじめました。<br/>
プロフィッシュ45にのっています。<br/>
舘山で３回浮かびました。<br/>
出艇ポイントを知らないのでこれから勉強します。</p>

<p>メモを整理していたら走り書きのようなコードがいくつかあって有意義そうなのをのせようかと</p>

<!-- more -->  




<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>
<ins class="adsbygoogle"
     style="display:block; text-align:center;"
     data-ad-layout="in-article"
     data-ad-format="fluid"
     data-ad-client="ca-pub-7039502723411845"
     data-ad-slot="8206045005"></ins></p>

<script>  
     (adsbygoogle = window.adsbygoogle || []).push({});  
</script>


<p></p>

<pre><code class="ruby  ">def render_jbuilder(file_path)  
  root_path =  Rails.root.join 'app', 'views', 'api'  
  engine = ::Tilt.new(root_path / file_path, nil, view_path: root_path)  
  JSON.parse(engine.render(self))  
end  
</code></pre>

<p>root_path取得のところは</p>

<pre><code class="">env['api.tilt.root'] = Rails.root.join 'app', 'views', 'api'  
</code></pre>

<p>の設定をconfig/application.rbとかでやっているのであれば</p>

<pre><code class="">root_path = env['api.tilt.root']  
</code></pre>

<p>でも取れます。</p>

<p>現場からは以上です。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[includeしたmoduleでextendとprepend]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2020/04/10/include-extend-prepend/"/>
        <updated>2020-04-10T16:50:31+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2020/04/10/include-extend-prepend</id>
        <content type="html"><![CDATA[<p>既存の処理を書き換えつつ、さらに機能追加する。
includeとprependとextendを一個のmoduleで実現するサンプル。</p>

<!-- more -->




<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>
<ins class="adsbygoogle"
     style="display:block; text-align:center;"
     data-ad-layout="in-article"
     data-ad-format="fluid"
     data-ad-client="ca-pub-7039502723411845"
     data-ad-slot="8206045005"></ins></p>

<script>  
     (adsbygoogle = window.adsbygoogle || []).push({});  
</script>


<p></p>

<pre><code class="ruby"># frozen_string_literal: true

module Hoge
  extend ActiveSupport::Concern

  included do
    singleton_class.send(:prepend, Module.new do
      def override
      end
    end
  end

  module ClassMethods
    def class_method
    end
  end

  def instance_method
  end
end
</code></pre>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[jbuilderのtemplateを使ってhashを取得]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2019/12/19/jbuilder-export-hash/"/>
        <updated>2019-12-19T12:26:18+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2019/12/19/jbuilder-export-hash</id>
        <content type="html"><![CDATA[<p>grape-jbuilderの環境でapi/view/api/users/index.jbuilderを使ってjsonを返しているエンドポイントがある。<br/>
これをcontrollerでhashで取得したい場合。</p>

<p>またapi/view/api/users/index.jbuilderでは@usersを使って値を取り出している。</p>

<p>config/application.rbに以下の設定を想定</p>

<pre><code>class Application &lt; Rails::Application
  config.middleware.use(Rack::Config) do |env|
    env['api.tilt.root'] = Rails.root.join 'app', 'views', 'api'
  end
end
</code></pre>

<!-- more -->




<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>
<ins class="adsbygoogle"
     style="display:block; text-align:center;"
     data-ad-layout="in-article"
     data-ad-format="fluid"
     data-ad-client="ca-pub-7039502723411845"
     data-ad-slot="8206045005"></ins></p>

<script>  
     (adsbygoogle = window.adsbygoogle || []).push({});  
</script>


<p></p>

<p>コントローラーでの取り出し例</p>

<pre><code>@users = User.all
engine = ::Tilt.new(request.env['api.tilt.root'] / 'users/index.jbuilder', nil, view_path: request.env['api.tilt.root'])
hash = JSON.parse(engine.render(self))
</code></pre>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[ActiveStorageのDirectUploadでGCSでCORS]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2019/07/12/gcs-cors/"/>
        <updated>2019-07-12T10:55:48+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2019/07/12/gcs-cors</id>
        <content type="html"><![CDATA[<p>GCP上で動かしたらエラーになったのでメモ。</p>

<!-- more -->




<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"
     style="display:block; text-align:center;"
     data-ad-layout="in-article"
     data-ad-format="fluid"
     data-ad-client="ca-pub-7039502723411845"
     data-ad-slot="8206045005"></ins></p>

<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<p>GCSにアップしようとしたら、こんなエラーがでました。</p>

<p>Access to XMLHttpRequest at &lsquo;<a href="https://storage.googleapis.com/">https://storage.googleapis.com/</a><BUCKET NAME>/&lt;ずらずらとcredentialやexpireの情報>&rsquo; from origin &lsquo;<a href="https://hogehoge.com">https://hogehoge.com</a>&rsquo; has been blocked by CORS policy: Response to preflight request doesn&rsquo;t pass access control check: No &lsquo;Access-Control-Allow-Origin&rsquo; header is present on the requested resource.</p>

<p>いくつか設定の仕方があるらしいですがgsutilを使ったやり方でGCSのBucketにCORS対応します。<br/>
(AWSみたいにWEBからは設定できないようです)</p>

<p>まずjsonファイルを作ります。</p>

<pre><code>[
  {
    "origin": ["https://hogehoge.com"],
    "responseHeader": ["Content-Type", "Content-Md5"],
    "method": ["*"],
    "maxAgeSeconds": 3600
  }
]
</code></pre>

<p>originは全部許可する場合はアスタリスクでも可です。<br/>
<code>
[
  {
    "origin": ["*"],
    "responseHeader": ["Content-Type", "Content-Md5"],
    "method": ["*"],
    "maxAgeSeconds": 3600
  }
]
</code></p>

<p>これを設定します。<br/>
<code>
gsutil cors set &lt;上記作成したjson&gt; gs://&lt;bucket name&gt;  
</code></p>

<p>確認<br/>
<code>
gsutil cors get gs://&lt;bucket name&gt;  
</code></p>

<p>で通るようになります。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[Railsでお手軽にメールを送る]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2019/07/08/simple-email-send/"/>
        <updated>2019-07-08T11:15:30+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2019/07/08/simple-email-send</id>
        <content type="html"><![CDATA[<p>お手軽にある特定のエラーなどの情報を簡単なワンメッセージを関係者に送りたい場合、</p>

<pre><code>rails generate mailer UserMailer
</code></pre>

<p>とかやってテンプレートつかってってやると重厚すぎてつらい。</p>

<!-- more -->




<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>
<ins class="adsbygoogle"
     style="display:block; text-align:center;"
     data-ad-layout="in-article"
     data-ad-format="fluid"
     data-ad-client="ca-pub-7039502723411845"
     data-ad-slot="8206045005"></ins></p>

<script>  
     (adsbygoogle = window.adsbygoogle || []).push({});  
</script>


<p></p>

<p>ワンライナーでメールを送るにはこうやればいい。</p>

<pre><code>ActionMailer::Base.mail(from: 'error@example.com', to: 'admin@example.com', subject: '何かエラーが発生しました', body: '設定を見直してください').deliver
</code></pre>

<p>現場からは以上です。</p>
]]></content>
    </entry>
    
</feed>
