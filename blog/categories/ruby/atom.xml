<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

    <title><![CDATA[Category: ruby | なんとなく日々徒然と]]></title>
    <link href="http://yoshitsugufujii.github.io/blog/categories/ruby/atom.xml" rel="self"/>
    <link href="http://yoshitsugufujii.github.io/"/>
    <updated>2017-09-29T12:13:02+09:00</updated>
    <id>http://yoshitsugufujii.github.io/</id>
    <author>
        <name><![CDATA[Yoshitsugu Fujii]]></name>
        
      </author>
    <generator uri="http://octopress.org/">Octopress</generator>

    
    <entry>
        <title type="html"><![CDATA[Railsでtextとhtmlのviewを用意するもmultipart/alternativeにならない問題]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2017/09/12/alternative-not-working/"/>
        <updated>2017-09-12T18:36:54+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2017/09/12/alternative-not-working</id>
        <content type="html"><![CDATA[<p>Ruby: 2.4.1<br/>
Rails: 4.2.8</p>

<p>ActionMailerでhogehoge.html.hamlとhogehoge.text.hamlを用意しているのにtext/htmlの形式でしか送信されなくてはまりかけた。<br/>
hogehoge.text.hamlをhogehoge.text.erbに直したらmultipart/alternativeになってくれた。</p>

<p>textの方はerbじゃないとダメっぽい。</p>

<p>そしてletter_openerってalternativeなメールの時って右上にHTMLメールとプレーンテキストメールの切り替えリンクが付いているんですね。<br/>
めっちゃ便利！</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[S3からRailsを介して大きなファイルをストリーミングダウンロードさせる]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2017/06/29/large-s3-file-relay/"/>
        <updated>2017-06-29T15:25:15+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2017/06/29/large-s3-file-relay</id>
        <content type="html"><![CDATA[<h3>近況とか</h3>

<p>最近の藤井は月〜木は新橋の方面で働き金曜日は在宅で仕事させてもらっています。<br/>
言語は相変わらずRubyでFWはRubyOnRailsですね。<br/>
Firebase触ったり、WebRTCに触ったり、はじめてガチでHeroku使ったりしています。</p>

<p>自分が業界に入りたての頃はこういったサービスがなかったので1からどう作るかって感じでしたが、<br/>
最近はどうやってサービスを組み合わせて作るかって感じに変化したように思います。<br/>
サービスの学習コストの方が高めですかね。</p>

<p>Macbook Airの日本語キーボードから英字配列のhhkbに移行しました。<br/>
:が打ちにくくて最初文句ブーブーでしたが、慣れるとたしかに英字配列の方がやりやすい気がします。<br/>
職場と自宅で持ち運びがめんどくさかったので二台買いました。<br/>
hhkbの墨とtype-sです。<br/>
お金使いすぎで鼻血出そうです。</p>

<p>帰宅ランは続けていて調子いいときは10キロぐらい走ります。<br/>
だいたい7、8キロぐらいを目安に走っています。<br/>
江戸川沿い走るの最高に気持ちいいです。</p>

<!-- more -->


<p></p>

<h3>表題の件</h3>

<p>S3のファイルをRailsを中継してクライアントにストリーミングダウンロードする処理書きました。<br/>
Httparty使ってます。Httpartyでstreaming download楽ですねー。</p>

<pre><code class="ruby">class AttachmentController &lt; ApplicationController
  include ActionController::Live

  def download
    attachment = Attachment.find(params[:id])
    begin
      self.response.headers["Content-Type"] = attachment.content_type
      self.response.headers["Content-Length"] = attachment.file_size
      self.response.headers["Content-Disposition"] = "attachment; filename=#{attachment.file_before_type_cast}"
      self.response.headers["Content-Transfer-Encoding"] = "binary"
      self.response.headers["Last-Modified"] = attachment.updated_at.ctime.to_s
      HTTParty.get(attachment.url, stream_body: true) do |fragment|
        self.response.stream.write fragment
      end
    rescue ActionController::Live::ClientDisconnected  # キャンセルされた場合
      # nop
    ensure
      response.stream.close
    end
  end
end
</code></pre>

<p>Puma使いましょう。webrickとかthinは対応していません。</p>

<p>config/environments/development.rbに以下の設定を追加。</p>

<pre><code class="ruby">config.cache_classes = true
config.eager_load = true
</code></pre>

<p>あとは<code>bundle exec rails s Puma</code>して試してみてください。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[postgres使っていてridgepoleで文字列から数値型への変換エラー]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2017/04/13/ridgepole-postgres-change-type-cast/"/>
        <updated>2017-04-13T11:19:54+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2017/04/13/ridgepole-postgres-change-type-cast</id>
        <content type="html"><![CDATA[<p>表題のことをやろうとしたらエラーがでた。</p>

<pre><code>[ERROR] PG::DatatypeMismatch: ERROR:  column "count" cannot be cast automatically to type integer
HINT:  You might need to specify "USING count::integer".
</code></pre>

<p>Schemafileをこうすればいけました。</p>

<pre><code>create_table "products", force: :cascade do |t|
  t.integer  'count',             using: 'count::integer'
end
</code></pre>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[Ransackのデフォルトオーダーを変える方法]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2017/04/11/ransack-default-order/"/>
        <updated>2017-04-11T18:26:06+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2017/04/11/ransack-default-order</id>
        <content type="html"><![CDATA[<p><a href="http://www.logiclogic.jp/">ロジックロジック</a>を辞めました。<br/>
そして意識低い系なのにフリーランスになりました。<br/>
頑張っていきます。そしてお仕事ください。ペロペロ(靴を舐める音)</p>

<p>ransackのsort_linkで昇順降順のデフォルトを変える方法です。</p>

<pre><code class="ruby">= sort_link(@q, :created_at, '作成日', default_order: :desc)
</code></pre>

<p>最近は週２ぐらいで3キロ〜5キロぐらいの帰宅ランにはまっています。<br/>
わざわざ時間をとったりしなくていいのでオススメですよ。</p>

<p>これトレイルラン用ですが、体にピタと密着して走っても鞄がぶれないのでオススメです。<br/>
MacBook Airの13インチとちょっとしたものが入るので便利！<br/>
PCとお弁当と水筒と着替えをいれて走ってます。</p>

<p><a href="https://www.amazon.co.jp/%E3%82%B5%E3%83%AD%E3%83%A2%E3%83%B3-%E3%83%90%E3%83%83%E3%82%AF%E3%83%91%E3%83%83%E3%82%AF-TRAIL-L37998300-GRANNY/dp/B014EBRLQG/ref=as_li_ss_il?ie=UTF8&qid=1491903304&sr=8-1&keywords=salomon+trail+20&linkCode=li3&tag=gogosakura-22&linkId=3bf38265c9d616b2ab28731fe38d0e44" target="_blank"><img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&ASIN=B014EBRLQG&Format=_SL250_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=gogosakura-22" ></a><img src="https://ir-jp.amazon-adsystem.com/e/ir?t=gogosakura-22&l=li3&o=9&a=B014EBRLQG" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></p>

<p><a href="http://amzn.to/2nzWzof">[サロモン] バックパック TRAIL 20</a></p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[csvなどで多重配列を縦横を入れ替える(行列切り替え)]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2016/05/09/ruby-transpose/"/>
        <updated>2016-05-09T10:51:15+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2016/05/09/ruby-transpose</id>
        <content type="html"><![CDATA[<p>小ネタです。<br/>
Csvファイルなどで行列を切り替えて出力したい場合はtransposeが便利です。</p>

<!-- more -->


<p></p>

<pre><code class="ruby  ">csv.each{|row| p row.join(",") }  
csv = [["user_name", "age", "gender"], ["藤井", "36", "men"]]  
csv.each{|row| p row.join(",") }  
# =&gt; "user_name,age,gender"  
# =&gt; "藤井,36,men"  

csv.transpose.each{|row| p row.join(",") }  
# =&gt; "user_name,藤井"  
# =&gt; "age,36"  
# =&gt; "gender,men"  
</code></pre>
]]></content>
    </entry>
    
</feed>
