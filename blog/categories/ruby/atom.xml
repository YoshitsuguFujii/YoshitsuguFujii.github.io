<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

    <title><![CDATA[Category: ruby | なんとなく日々徒然と]]></title>
    <link href="http://yoshitsugufujii.github.io/blog/categories/ruby/atom.xml" rel="self"/>
    <link href="http://yoshitsugufujii.github.io/"/>
    <updated>2016-04-28T11:41:15+09:00</updated>
    <id>http://yoshitsugufujii.github.io/</id>
    <author>
        <name><![CDATA[Yoshitsugu Fujii]]></name>
        
      </author>
    <generator uri="http://octopress.org/">Octopress</generator>

    
    <entry>
        <title type="html"><![CDATA[model.changesで強制的に変更したことにする方法]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2016/04/11/rails-dirty-mark-changed/"/>
        <updated>2016-04-11T18:26:43+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2016/04/11/rails-dirty-mark-changed</id>
        <content type="html"><![CDATA[<p>RailsのActiveModelのDirtyでは変更前、変更後、変更したかなどモデルクラスの新旧状態が取れる。<br/>
<a href="http://qiita.com/kakkunpakkun/items/b286f789ca8590104ad1">http://qiita.com/kakkunpakkun/items/b286f789ca8590104ad1</a></p>

<p>このdirtyを使って変更してないけど変更したことにしたい(observerを再実行したい時とか)に使える技</p>

<pre><code class="ruby">user = User.first
user.changes # =&gt; {}
user.created_at_will_change! # =&gt; =&gt; 2015-01-16 20:09:59 +0900
user.changes 
# =&gt; {
#  "created_at" =&gt; [
#    [0] 2015-01-16 20:09:59 +0900,
#    [1] 2015-01-16 20:09:59 +0900
#   ]
# }
</code></pre>

<p>属性名_will_change!で新旧に同じ値が設定される。</p>

<p>なんでこんなことやりたかったかっていうとobserverでuserのnameの値が変更されたらapiを叩く処理を書いていたのだけど、急遽全件apiを再実行する必要があり強制的にnameが変更されたことにしたかったため調べたらあったというお話</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[[小ネタ]Railsを使っていてAngularのform validationだけしたい時]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2016/03/23/angular-with-rails-name-convention/"/>
        <updated>2016-03-23T12:36:53+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2016/03/23/angular-with-rails-name-convention</id>
        <content type="html"><![CDATA[<p>railsでシステムを作っていて、ここはゴリゴリ書くようなところじゃないけどformのvalidationだけangularの機能使いたくなったんですが。
railsはname属性に[]を使うので、この場合のng-show内部の指定がわからなかったので備忘録も兼ねて。</p>

<pre><code class="erb">form name="new_form"
  input name="price[hoge]" ng-model="price" ng-pattern="/^([1-9]\\d*|0)(\\.\\d+)?$/" required="" type="text" /
  span.text-error ng-show="newForm['price[hoge]'].$error.required"  ※
  span.text-error ng-show="newForm['price[hoge]'].$error.pattern"  This is not a valid dollar.
</code></pre>

<p>formのnameに指定されいるものを[]とシングルクォートで囲むといけます。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[Rails 便利なテクニック その１]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2016/02/18/rails-tips-1/"/>
        <updated>2016-02-18T11:33:58+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2016/02/18/rails-tips-1</id>
        <content type="html"><![CDATA[<p>日常コード書いてて便利だなぁと思った技とかを思い出したら不定期に書いていきます。</p>

<p>よくメニューをulとliを使ってタブで表示することがあると思います。<br/>
例えばタブは以下の条件で表示されます</p>

<ul>
<li>ユーザの年齢が20歳以上なら表示するタブA</li>
<li>ユーザの性別が男性なら表示するタブB</li>
<li>ユーザの性別が女性なら表示するタブC</li>
<li>ユーザの性別が男性でかつ20歳以上なら表示するタブD</li>
</ul>


<p>実装が終わって総合テストがはじまります。</p>

<p>ここでチケットがあがってきます。</p>

<p><strong>『タブが一つしか出力されない場合はタブを非表示にしてください。』</strong></p>

<p>さてどうしましょう？</p>

<!-- more -->


<p>複雑なif文を組み合わせてタブが１つかでない条件を見つけ出して非表示にしますか？<br/>
タブが増えたり条件が増えたりしたら大変な上に可読性悪そうですね。</p>

<p>Railsには便利なcaptureというメソッドがあります。<br/>
これはcaptureメソッドに与えられたブロックの出力内容を返すメソッドです。<br/>
これを使うとシンプルに問題を解決できます。</p>

<pre><code class="erb app/views/layout/tab.html.erb">&lt;% tab = capture do %&gt;
  &lt;ul&gt;
    &lt;% if user.age &gt;= 20 %&gt; 
      &lt;li&gt;タブA&lt;/li&gt;
    &lt;% end %&gt;

    &lt;% if user.male? %&gt; 
      &lt;li&gt;タブB&lt;/li&gt;
    &lt;% end %&gt;

    &lt;% if user.female? %&gt; 
      &lt;li&gt;タブC&lt;/li&gt;
    &lt;% end %&gt;

    &lt;% if user.male? &amp;&amp; user.age &gt;= 20 %&gt; 
      &lt;li&gt;タブD&lt;/li&gt;
    &lt;% end %&gt;
  &lt;/ul&gt;
&lt;% end %&gt;

&lt;% # tabが一個ならば表示しない %&gt;
&lt;%= tab.scan("&lt;/li&gt;").count &gt; 1 ? tab : "" %&gt;
</code></pre>

<p>htmlを動的に組み立てる際にあれこれするよりも、出力されたhtmlをもとに処理するというケースの方が圧倒的にスマートなケースがあるので積極的に使っていきたいですね。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[RailsConfig(現Config)で読み込んでいるファイルのパスを得る]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2016/02/02/rails-config-check-load-files-path/"/>
        <updated>2016-02-02T11:13:32+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2016/02/02/rails-config-check-load-files-path</id>
        <content type="html"><![CDATA[<p>内部的にrails_envを書き換えたりしていて、rails_configの値がただしくRAILS_ENVの設定通りにファイルを読み込んでくれない事象が発生したので。</p>

<p>rails_config (0.4.2)</p>

<pre><code class="ruby">irb(main):014:0&gt; Settings.instance_variable_get(:@config_sources)
=&gt; [#&lt;RailsConfig::Sources::YAMLSource:0x0055a28d40ab48 @path="Rails_rootへのパス/current/config/settings.yml"&gt;, #&lt;RailsConfig::Sources::YAMLSource:0x0055a28d40aa30 @path="Rails_rootへのパス/current/config/settings/hoge.yml"&gt;, #&lt;RailsConfig::Sources::YAMLSource:0x0055a28d40a9e0 @path="Rails_rootへのパス/current/config/environments/hoge.yml"&gt;]
</code></pre>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[jpmobileでPCでスマートフォンのビューを表示する場合]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2016/01/22/jpmobile-enforce-sp-view-for-pc/"/>
        <updated>2016-01-22T18:51:27+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2016/01/22/jpmobile-enforce-sp-view-for-pc</id>
        <content type="html"><![CDATA[<p>なんらかの条件で強制的にスマートフォンのviewを使いたい時。
アプリのwebviewとか？</p>

<pre><code class="ruby">before_filter :hoge
def hoge
  if true # 条件
    env["rack.jpmobile"] = Jpmobile::Mobile::SmartPhone.new(env, request)
    register_mobile
  end
end
</code></pre>
]]></content>
    </entry>
    
</feed>
