<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

    <title><![CDATA[Category: axlsx | なんとなく日々徒然と]]></title>
    <link href="http://yoshitsugufujii.github.io/blog/categories/axlsx/atom.xml" rel="self"/>
    <link href="http://yoshitsugufujii.github.io/"/>
    <updated>2015-07-17T14:01:39+09:00</updated>
    <id>http://yoshitsugufujii.github.io/</id>
    <author>
        <name><![CDATA[Yoshitsugu Fujii]]></name>
        
      </author>
    <generator uri="http://octopress.org/">Octopress</generator>

    
    <entry>
        <title type="html"><![CDATA[Axlsxでセルのなかのテキストに部分的にスタイルを当てる]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/07/14/partially-change-string-style-in-cell-with-axlsx/"/>
        <updated>2015-07-14T20:28:04+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/07/14/partially-change-string-style-in-cell-with-axlsx</id>
        <content type="html"><![CDATA[<p>Axlsxでセルの中の文字にスタイルをあてる方法です 。<br/>
Axlsx::RichTextを使います。<br/>
太字、斜体、打ち消し戦、アンダーライン、色変更に対応しております。</p>

<!-- more -->


<pre><code class="ruby">p = Axlsx::Package.new
p.use_shared_strings = true
wb = p.workbook
wrap_text = wb.styles.add_style({:alignment =&gt; {:horizontal =&gt; :center, :vertical =&gt; :center, :wrap_text =&gt; true}}  )
rt = Axlsx::RichText.new
rt.add_run('I\'m bold, ', :b =&gt; true)
rt.add_run('I\'m italic, ', :i =&gt; true)
rt.add_run('I\'m strike' + "\n", :strike =&gt; true)
rt.add_run('I\'m bold, italic and strike' + "\n", :b =&gt; true, :i =&gt; true, :strike =&gt; true)
rt.add_run('I\'m style-less :D')
rt.add_run('underlined and red.', :u =&gt; :double, :color =&gt; 'FF0000')
wb.add_worksheet(:name =&gt; "RichText") do | sheet |
sheet.add_row [rt], :style =&gt; wrap_text
end
p.serialize 'rich_text.xlsx'
</code></pre>

<p><img src="/images/blog/2015-07-14%2020.30.19.png" alt="完成イメージ" /></p>

<p>Axlsxなんでもできますね！</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[Axlsxでエクセルのセルを折り返して全体を表示]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/02/24/20150224142535/"/>
        <updated>2015-02-24T14:25:12+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/02/24/20150224142535</id>
        <content type="html"><![CDATA[<pre><code class="ruby">require 'axlsx'

package = Axlsx::Package.new
sheet = package.workbook.add_worksheet(name: 'lists')

wrap_text = sheet.styles.add_style(
                              {
                               :fg_color=&gt; "FFFFFF",                           # 文字色
                               :b =&gt; true,                                     # 太字
                               :bg_color =&gt; "004586",                          # 背景色
                               :sz =&gt; 12,                                      # フォントサイズ
                               :border =&gt; { :style =&gt; :thin, :color =&gt; "00" }, # 罫線
                               :alignment =&gt; { :horizontal =&gt; :center,         # 配置
                                               :vertical =&gt; :center ,
                                               :wrap_text =&gt; true}
                              }
                            )

sheet.add_row(['とっても長いテキスト', '短いテキスト'], style: wrap_text)

sheet.column_info.first.width = 5
package.serialize('test.xlsx')
</code></pre>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[Axlsxでウィンドウ枠の固定]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/02/23/20150223110642/"/>
        <updated>2015-02-23T11:06:00+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/02/23/20150223110642</id>
        <content type="html"><![CDATA[<p>エクセルのウィンドウ枠の固定をAxlsxで行う方法</p>

<pre><code class="ruby">require 'axlsx'

package = Axlsx::Package.new
sheet = package.workbook.add_worksheet(name: 'lists')

sheet.add_row(['品名', '単価', '数量', '計'] )
sheet.add_row(['にんじん',    80, 1,      '=B2*C2'])

sheet.sheet_view.pane do |pane|
  pane.top_left_cell = "B2"
  pane.state = :frozen_split
  pane.y_split = 1
  pane.x_split = 1
  pane.active_pane = :bottom_right
end

package.serialize('test.xlsx')
</code></pre>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[Axlsxでエクセルファイル作成時に注意する点とかはまりどころとか]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/02/21/20150221171638/"/>
        <updated>2015-02-21T17:16:00+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/02/21/20150221171638</id>
        <content type="html"><![CDATA[<p>最近Railsを使う会社が増えてきて、2年前にRailsを扱う会社をエージェントに探してもらった時はなかなか見つからなかったんですが、今は楽に見つかりそうですね。
そもそも登録した転職サイトがダメだったのかもしれないと思いますが。
千葉でRuby、Railsメインでやってる会社ないかな。</p>

<p>さてさて、ここのところずっと触っているAxlsxです。</p>

<h3>型に気をつける</h3>

<p>エクセルのセルが数値か文字列かで挙動が変わったりします。
文字列型のカラムに&#8221;1000&#8221;とか入っていた場合、エクセルでは数値として認識されてしまってvloolupなどの関数が反応しないことがあります。
その場合は明示的にtypeを指定しましょう。</p>

<pre><code class="ruby">sheet.add_row(
  [
    "1000",
    1000,
  ], types: [:string, :float])
)

# もしくは
sheet.rows[0].cells[0].type = [:string]
</code></pre>

<p>typesに設定できるシンボル
<a href="http://www.rubydoc.info/github/randym/axlsx/master/Axlsx/Cell:type">Method: Axlsx::Cell  #type — Documentation for randym/axlsx
(master)</a>
[:date, :time, :float, :integer, :string, :boolean]</p>

<h3>エクセルの関数を設定してダウンロード</h3>

<p>そのままアップロードすると関数による値の設定が行われません。
おそらく数式はエクセルを開いた時にエクセル側で計算されるので、エクセルを一回も開かずにアップロードすると値が設定されていないことになるのかと思います
fomula  _valueを設定しましょう</p>

<pre><code class="ruby">sheet.add_row [1, 2, '=A1+B1'], :formula_values =&gt; [nil, nil, 3]

#_もしくは
sheet.rows[0].cells[0].value         = "=A1+B1"
sheet.rows[0].cells[0].formula_value = "3"
</code></pre>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[Axlxsを使って新規ファイルを作って、RubyXLで読み出す話]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2014/12/18/20141218200736/"/>
        <updated>2014-12-18T20:07:00+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2014/12/18/20141218200736</id>
        <content type="html"><![CDATA[<p>どんどんtipsがニッチになっていきますね。</p>

<p>Axlxsで作ったファイルがRubyXLで読み取れませんでした。<br/>
一度エクセルで開いて保存すると読み取れるようになる。</p>

<p>RubyXLでAxlxsで作成したファイルを読み込むと数値とかは辛うじて所々取れていたので文字コードかと思って色々やってみましたが、このページで解決</p>

<p><a href="https://github.com/randym/axlsx/issues/349">Strings outputted not seen by rubyXL ? Issue   #349 ? randym/axlsx ?
GitHub</a></p>

<p>pkg = Package.create<br/>
したら<br/>
pkg.use  <em>shared  </em>strings = true<br/>
する必要があるみたいでした。</p>

<p>これで無事に読みだすことができました。</p>
]]></content>
    </entry>
    
</feed>
