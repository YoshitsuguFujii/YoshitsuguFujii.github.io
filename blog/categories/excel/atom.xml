<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

    <title><![CDATA[Category: excel | なんとなく日々徒然と]]></title>
    <link href="http://yoshitsugufujii.github.io/blog/categories/excel/atom.xml" rel="self"/>
    <link href="http://yoshitsugufujii.github.io/"/>
    <updated>2020-02-12T16:48:56+09:00</updated>
    <id>http://yoshitsugufujii.github.io/</id>
    <author>
        <name><![CDATA[Yoshitsugu Fujii]]></name>
        
      </author>
    <generator uri="http://octopress.org/">Octopress</generator>

    
    <entry>
        <title type="html"><![CDATA[Axlsxでコメント表示]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2016/04/29/axlsx-comment/"/>
        <updated>2016-04-29T14:50:47+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2016/04/29/axlsx-comment</id>
        <content type="html"><![CDATA[<p>Axlsxで常に表示されているコメントとマウスオーバーで表示されるコメント</p>

<p><img src="/images/blog/2016-04-29%2014.53.19.png" alt="Axlsxコメント" /></p>

<!-- more -->


<pre><code class="ruby">require 'axlsx'
package = Axlsx::Package.new
package.use_shared_strings = true
sheet = package.workbook.add_worksheet(name: 'lists')

sheet.add_row(['品名', '単価', '数量', '計'])
sheet.add_row(['にんじん',    80, 1,      '=B2*C2'])
sheet.add_row(['たまねぎ',    50, 2,      '=B3*C3'])
sheet.add_row(['じゃがいも',  40, 2,      '=B4*C4'])
sheet.add_row(['牛肉',       200, 1,      '=B5*C5'])
sheet.add_row(['カレー粉',   150, 1,      '=B6*C6'])
sheet.add_row(['',            '', '総計', '=SUM(D2:D6)'])

#sheet.add_comment :ref =&gt; 'A1', :text =&gt; 'penut machine', :author =&gt; 'crank', :visible =&gt; true
sheet.add_comment(:ref =&gt; 'A1', :author =&gt; 'Bob', :text =&gt; 'Yes We Can!').tap do |comment|
  comment.vml_shape.top_row = 2      # 位置調整用
  comment.vml_shape.left_column = 2  # 位置調整用
  comment.vml_shape.bottom_row = 2   # 位置調整用
  comment.vml_shape.right_column = 4 # 位置調整用
end
sheet.add_comment :ref =&gt; 'A6', :text =&gt; 'rust bucket', :author =&gt; 'PO', :visible =&gt; false

package.serialize('test.xlsx')
</code></pre>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[Axlsxでセルの中の斜線を引く]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/07/28/axlsx-diagonal-border/"/>
        <updated>2015-07-28T18:55:24+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/07/28/axlsx-diagonal-border</id>
        <content type="html"><![CDATA[<p>またまた中々見つけられなかったテクニック。<br/>
セルの内部に斜線をひくです。</p>

<p>連日の調査で疲れます。</p>

<!-- more -->


<p>さくっと結論です。<br/>
edgesにdiagonalを指定して、diagonal_upかdiagonal_downにtrueを指定するです。<br/>
edgesにdiagonalを指定しろなんてどこにも書いてなかったので大変でした。</p>

<p>コードにするとこうです。</p>

<pre><code class="ruby">require 'axlsx'

package = Axlsx::Package.new
sheet = package.workbook.add_worksheet(name: 'lists')

diagonal_up = sheet.styles.add_style(
                              {
                               :border =&gt; {
                                 :edges =&gt; [:diagonal],
                                 :color =&gt; "000000",
                                 :style =&gt; :thin,
                                 diagonal_up: true
                               }
                              }
                            )
diagonal_down = sheet.styles.add_style(
                              {
                               :border =&gt; {
                                 :edges =&gt; [:diagonal],
                                 :color =&gt; "000000",
                                 :style =&gt; :thin,
                                 diagonal_down: true
                                }
                              }
                            )

diagonal_both = sheet.styles.add_style(
                              {
                               :border =&gt; {
                                 :edges =&gt; [:diagonal],
                                 :color =&gt; "000000",
                                 :style =&gt; :thin,
                                 diagonal_down: true,
                                 diagonal_up: true
                               }
                              }
                            )


sheet.add_row(['斜線1'], style: diagonal_up)
sheet.add_row([''])
sheet.add_row(['斜線2'], style: diagonal_down)
sheet.add_row([''])
sheet.add_row(['斜線3'], style: diagonal_both)

package.serialize('test.xlsx')
</code></pre>

<p><img src="/images/blog/2015-07-28.png" alt="Axlsx border diagonal" /></p>

<p>もしくはこれでもいけます。</p>

<pre><code class="ruby">require 'axlsx'

package = Axlsx::Package.new
sheet = package.workbook.add_worksheet(name: 'lists')

diagonal_style = sheet.styles.add_style(
                              {
                               :border =&gt; {
                                 :edges =&gt; [:left, :right],
                                 :color =&gt; "000000",
                                 :style =&gt; :thin 
                               }
                              }
                            )

br = package.workbook.styles.borders[package.workbook.styles.cellXfs[diagonal_style].borderId]
br.diagonalUp = true
br.diagonalDown = true
br.prs &lt;&lt; Axlsx::BorderPr.new(
  name: :diagonal,
  color: Axlsx::Color.new(rgb: '000000'),
  style: :thin,
)


sheet.add_row(['斜め線をひく'], style: diagonal_style)

package.serialize('test.xlsx')
</code></pre>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[Axlsxで縦書き]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/07/27/orientation-xlvertical-with-axlsx/"/>
        <updated>2015-07-27T18:19:53+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/07/27/orientation-xlvertical-with-axlsx</id>
        <content type="html"><![CDATA[<p>Axlsxでセルの内容を縦書きにする方法がわかったので日記に記します。<br/>
セルに角度を付ける方法は見つかったんですが、縦書きにする方法が全然見つからずかなりはまりました。</p>

<!-- more -->


<p>VBAだと縦書きはこう設定できますね。</p>

<pre><code class="vbnet">Range("D2").Orientation = xlVertical  
</code></pre>

<p>色々と調べて、xlVerticalの値である-4166をセットしていしてみたりしましたがなかなかうまくゆかず。<br/>
色々と検索して、最終的にcellXfsというキーワードからなぜか<a href="http://bbs.wankuma.com/index.cgi?mode=al2&amp;namber=5358&amp;KLOG=15">C# vb.netの質問掲示板</a>で発見しましした(圧倒的感謝!)<br/>
textRotationを255を指定すればいけるそうです。</p>

<pre><code class="ruby">require 'axlsx'

package = Axlsx::Package.new
sheet = package.workbook.add_worksheet(name: 'lists')

vertical_text = sheet.styles.add_style(
    {
      alignment: { 
        horizontal: :center,
        vertical: :center ,
        textRotation: 255
      }
    }
)

sheet.add_row(['とっても長いテキスト', '短いテキスト'], style: vertical_text)

package.serialize('test.xlsx')
</code></pre>

<p>できないのかもと本気で諦めかけていたので出来た時には変な声がでてしまいました。</p>

<p><img src="/images/blog/2015-07-27.png" alt="Axlsx Orientaion xlVertical" /></p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[Axlsxでセルのなかのテキストに部分的にスタイルを当てる]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/07/14/partially-change-string-style-in-cell-with-axlsx/"/>
        <updated>2015-07-14T20:28:04+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/07/14/partially-change-string-style-in-cell-with-axlsx</id>
        <content type="html"><![CDATA[<p>Axlsxでセルの中の文字にスタイルをあてる方法です 。<br/>
Axlsx::RichTextを使います。<br/>
太字、斜体、打ち消し戦、アンダーライン、色変更に対応しております。</p>

<!-- more -->


<pre><code class="ruby">p = Axlsx::Package.new
p.use_shared_strings = true
wb = p.workbook
wrap_text = wb.styles.add_style({:alignment =&gt; {:horizontal =&gt; :center, :vertical =&gt; :center, :wrap_text =&gt; true}}  )
rt = Axlsx::RichText.new
rt.add_run('I\'m bold, ', :b =&gt; true)
rt.add_run('I\'m italic, ', :i =&gt; true)
rt.add_run('I\'m strike' + "\n", :strike =&gt; true)
rt.add_run('I\'m bold, italic and strike' + "\n", :b =&gt; true, :i =&gt; true, :strike =&gt; true)
rt.add_run('I\'m style-less :D')
rt.add_run('underlined and red.', :u =&gt; :double, :color =&gt; 'FF0000')
wb.add_worksheet(:name =&gt; "RichText") do | sheet |
sheet.add_row [rt], :style =&gt; wrap_text
end
p.serialize 'rich_text.xlsx'
</code></pre>

<p><img src="/images/blog/2015-07-14%2020.30.19.png" alt="完成イメージ" /></p>

<p>Axlsxなんでもできますね！</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[Axlxsを使って新規ファイルを作って、RubyXLで読み出す話]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2014/12/18/20141218200736/"/>
        <updated>2014-12-18T20:07:00+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2014/12/18/20141218200736</id>
        <content type="html"><![CDATA[<p>どんどんtipsがニッチになっていきますね。</p>

<p>Axlxsで作ったファイルがRubyXLで読み取れませんでした。<br/>
一度エクセルで開いて保存すると読み取れるようになる。</p>

<p>RubyXLでAxlxsで作成したファイルを読み込むと数値とかは辛うじて所々取れていたので文字コードかと思って色々やってみましたが、このページで解決</p>

<p><a href="https://github.com/randym/axlsx/issues/349">Strings outputted not seen by rubyXL ? Issue   #349 ? randym/axlsx ?
GitHub</a></p>

<p>pkg = Package.create<br/>
したら<br/>
pkg.use  <em>shared  </em>strings = true<br/>
する必要があるみたいでした。</p>

<p>これで無事に読みだすことができました。</p>
]]></content>
    </entry>
    
</feed>
