<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

    <title><![CDATA[Category: devise | なんとなく日々徒然と]]></title>
    <link href="http://yoshitsugufujii.github.io/blog/categories/devise/atom.xml" rel="self"/>
    <link href="http://yoshitsugufujii.github.io/"/>
    <updated>2016-05-06T19:09:39+09:00</updated>
    <id>http://yoshitsugufujii.github.io/</id>
    <author>
        <name><![CDATA[Yoshitsugu Fujii]]></name>
        
      </author>
    <generator uri="http://octopress.org/">Octopress</generator>

    
    <entry>
        <title type="html"><![CDATA[Deviseで特定の条件のみパスワードの検証をスキップする]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/06/08/devise-skip-password-check/"/>
        <updated>2015-06-08T12:35:01+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/06/08/devise-skip-password-check</id>
        <content type="html"><![CDATA[<pre><code class="ruby">#開発環境  
rails 4.2.1  
devise 3.4.1  
</code></pre>

<p>deviseを使っていて、ユーザモデルに仮登録状態を作りたいと思います。<br/>
仮登録の段階ではパスワードはまだ要求されず。<br/>
最後の最後でパスワードを設定して本会員登録完了といったフローです。</p>

<p>deviseでは対象モデルに<code>devise :validatable</code>に設定している場合はメールアドレスやパスワードの検証が走ります。<br/>
今回はパスワード以外のチェックはやってほしいため<code>:validatable</code>の宣言を外すだけではダメです。</p>

<!-- more -->


<p>deviseの以下のソースを見てみます</p>

<pre><code class="ruby lib/devise/models/validatable.rb">def self.included(base)
  base.extend ClassMethods
  assert_validations_api!(base)

  base.class_eval do
    validates_presence_of   :email, if: :email_required?
    validates_uniqueness_of :email, allow_blank: true, if: :email_changed?
    validates_format_of     :email, with: email_regexp, allow_blank: true, if: :email_changed?

    validates_presence_of     :password, if: :password_required?
    validates_confirmation_of :password, if: :password_required?
    validates_length_of       :password, within: password_length, allow_blank: true
  end
end
</code></pre>

<p>パスワードの検証をするかどうかはpassword_required?で判定しています。
判定メソッドはこんな感じです。</p>

<pre><code class="ruby">def password_required?
  !persisted? || !password.nil? || !password_confirmation.nil?
end
</code></pre>

<p>これを対象のモデルでオーバーライドします。</p>

<pre><code class="ruby">class User &lt; ActiveRecord::Base

  devise :database_authenticatable, :registerable,
         :recoverable, :rememberable, :trackable, :validatable

  def password_required?
    if member?
      !persisted? || !password.nil? || !password_confirmation.nil?
    else
      false
    end
  end
end
</code></pre>

<p>これでmember?がtrueを返さない(本登録前のユーザ)はパスワードの検証処理をスキップできるようになります。</p>
]]></content>
    </entry>
    
</feed>
