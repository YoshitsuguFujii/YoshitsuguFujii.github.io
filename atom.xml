<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

    <title><![CDATA[なんとなく日々徒然と]]></title>
    <link href="http://yoshitsugufujii.github.io/atom.xml" rel="self"/>
    <link href="http://yoshitsugufujii.github.io/"/>
    <updated>2018-04-03T12:26:59+09:00</updated>
    <id>http://yoshitsugufujii.github.io/</id>
    <author>
        <name><![CDATA[Yoshitsugu Fujii]]></name>
        
    </author>
    <generator uri="http://octopress.org/">Octopress</generator>

    
    <entry>
        <title type="html"><![CDATA[Heroku小ネタ]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2018/04/03/rack-attack/"/>
        <updated>2018-04-03T11:43:22+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2018/04/03/rack-attack</id>
        <content type="html"><![CDATA[<p>HerokuでRailsアプリ動かすときは<br/>
<a href="https://github.com/kickstarter/rack-attack">rack-attack</a><br/>
入れといたほうが良さそう。</p>

<p><a href="https://help.heroku.com/HCCDCDYY/does-heroku-offer-ddos-denial-of-service-mitigation">https://help.heroku.com/HCCDCDYY/does-heroku-offer-ddos-denial-of-service-mitigation</a></p>

<!-- more -->


<p></p>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>  <br/>
<ins class="adsbygoogle"  
     style="display:block; text-align:center;"  
     data-ad-layout="in-article"  
     data-ad-format="fluid"  
     data-ad-client="ca-pub-7039502723411845"  
     data-ad-slot="8206045005"></ins></p>

<script>    
     (adsbygoogle = window.adsbygoogle || []).push({});    
</script>


<p></p>

<p>ちなみにthrottleの機能を使ってみたんですが、cacheを使って試行回数を判定するのでcache storeをnull_storeとかにしちゃうといつまでもローカルではテストできません。</p>

<p>最近釣りに行き始めてますが連続坊主中。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[最後にサインアウトした時間が欲しい]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2018/03/12/current-sign-out-at/"/>
        <updated>2018-03-12T12:51:13+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2018/03/12/current-sign-out-at</id>
        <content type="html"><![CDATA[<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>  <br/>
<ins class="adsbygoogle"  
     style="display:block; text-align:center;"  
     data-ad-layout="in-article"  
     data-ad-format="fluid"  
     data-ad-client="ca-pub-7039502723411845"  
     data-ad-slot="8206045005"></ins></p>

<script>    
     (adsbygoogle = window.adsbygoogle || []).push({});    
</script>


<p></p>

<p>before_logoutというwardenのフックメソッドがあるのでそこに追加<br/>
自分はconfig/initializers/devise.rbに追加しちゃいました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Warden</span><span class="o">::</span><span class="no">Manager</span><span class="o">.</span><span class="n">before_logout</span> <span class="k">do</span> <span class="o">|</span><span class="n">user</span><span class="p">,</span><span class="n">auth</span><span class="p">,</span><span class="n">opts</span><span class="o">|</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">user</span><span class="o">.</span><span class="n">is_a?</span><span class="p">(</span><span class="no">User</span><span class="p">)</span>
</span><span class='line'>    <span class="n">user</span><span class="o">.</span><span class="n">update_column</span><span class="p">(</span><span class="ss">:current_sign_out_at</span><span class="p">,</span> <span class="no">Time</span><span class="o">.</span><span class="n">current</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[Railsでredirect_toが呼ばれたか判定]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2018/03/05/rails-redirect-called/"/>
        <updated>2018-03-05T11:34:15+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2018/03/05/rails-redirect-called</id>
        <content type="html"><![CDATA[<p>アクションメソッドから呼び出したメソッドで呼ばれているかどうか</p>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>  <br/>
<ins class="adsbygoogle"  
     style="display:block; text-align:center;"  
     data-ad-layout="in-article"  
     data-ad-format="fluid"  
     data-ad-client="ca-pub-7039502723411845"  
     data-ad-slot="8206045005"></ins></p>

<script>    
     (adsbygoogle = window.adsbygoogle || []).push({});    
</script>


<p></p>

<p><a href="http://www.rubydoc.info/gems/rack/Rack/Response/Helpers#redirect%2F-instance_method">#redirect?</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">response</span><span class="o">.</span><span class="n">redirect?</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[GrapeでCSRF対策]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2018/02/26/csrf-with-grape/"/>
        <updated>2018-02-26T17:38:51+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2018/02/26/csrf-with-grape</id>
        <content type="html"><![CDATA[<p>セキュリティ試験を受けたらapiでpostしている箇所がcsrf違反でレポートが上がってきました。<br/>
apiでcsrfって必要なの？<br/>
って感じでしたが実際にレポートあがってきてしまっているしよくよく考えたら必要じゃんってなったので実装します。</p>

<p>ググってみると情報が少ないですね。<br/>
みなさんgrapeでcsrfどうしているんでしょう。</p>

<!-- more -->


<p></p>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>  <br/>
<ins class="adsbygoogle"  
     style="display:block; text-align:center;"  
     data-ad-layout="in-article"  
     data-ad-format="fluid"  
     data-ad-client="ca-pub-7039502723411845"  
     data-ad-slot="8206045005"></ins></p>

<script>    
     (adsbygoogle = window.adsbygoogle || []).push({});    
</script>


<p></p>

<p>gistでサンプル見つけましたが、<br/>
<a href="https://gist.github.com/jandudulski/f3799ca67b7b08ded0c6">jandudulski/auth.rb</a><br/>
Rails5.1.4では動きません。</p>

<p><a href="https://github.com/rails/rails/blob/master/actionpack/lib/action_controller/metal/request_forgery_protection.rb">actionpackのcsrfの実装</a><br/>
をみながら実装してみます。</p>

<p>結果としてはこんな感じになりました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">V1</span>
</span><span class='line'>  <span class="k">module</span> <span class="nn">RequestForgeryProtectionHelper</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">session</span>
</span><span class='line'>      <span class="n">env</span><span class="o">[</span><span class="s1">&#39;rack.session&#39;</span><span class="o">]</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">protect_against_forgery</span>
</span><span class='line'>      <span class="k">unless</span> <span class="n">verified_request?</span>
</span><span class='line'>        <span class="no">Rails</span><span class="o">.</span><span class="n">logger</span><span class="o">.</span><span class="n">error</span><span class="p">(</span><span class="s2">&quot;[API] Can&#39;t verify CSRF token authenticity.&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="n">error!</span><span class="p">(</span>
</span><span class='line'>          <span class="p">{</span>
</span><span class='line'>            <span class="ss">result</span><span class="p">:</span> <span class="mi">401</span><span class="p">,</span>
</span><span class='line'>            <span class="ss">status</span><span class="p">:</span> <span class="s1">&#39;error&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="ss">type</span><span class="p">:</span> <span class="s1">&#39;csrf_error&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="ss">message</span><span class="p">:</span> <span class="s2">&quot;Can&#39;t verify CSRF token authenticity.&quot;</span>
</span><span class='line'>          <span class="p">},</span> <span class="mi">401</span>
</span><span class='line'>        <span class="p">)</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">verified_request?</span>
</span><span class='line'>      <span class="o">!</span><span class="n">protect_against_forgery?</span> <span class="o">||</span> <span class="n">request</span><span class="o">.</span><span class="n">get?</span> <span class="o">||</span> <span class="n">request</span><span class="o">.</span><span class="n">head?</span> <span class="o">||</span>
</span><span class='line'>        <span class="n">authenticity_token_valid?</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">authenticity_token_valid?</span>
</span><span class='line'>      <span class="n">encoded_masked_token</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">headers</span><span class="o">[</span><span class="s1">&#39;X-CSRF-Token&#39;</span><span class="o">]</span> <span class="o">||</span> <span class="n">request</span><span class="o">.</span><span class="n">headers</span><span class="o">[</span><span class="s1">&#39;X-Csrf-Token&#39;</span><span class="o">]</span>
</span><span class='line'>      <span class="k">return</span> <span class="kp">false</span> <span class="k">if</span> <span class="n">encoded_masked_token</span><span class="o">.</span><span class="n">blank?</span>
</span><span class='line'>      <span class="n">masked_token</span> <span class="o">=</span> <span class="no">Base64</span><span class="o">.</span><span class="n">strict_decode64</span><span class="p">(</span><span class="n">encoded_masked_token</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">anonymous_controller</span> <span class="o">=</span> <span class="no">ApplicationController</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">masked_token</span><span class="o">.</span><span class="n">length</span> <span class="o">==</span> <span class="no">ActionController</span><span class="o">::</span><span class="no">RequestForgeryProtection</span><span class="o">::</span><span class="no">AUTHENTICITY_TOKEN_LENGTH</span>
</span><span class='line'>        <span class="n">anonymous_controller</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="ss">:compare_with_real_token</span><span class="p">,</span> <span class="n">masked_token</span><span class="p">,</span> <span class="n">session</span><span class="p">)</span>
</span><span class='line'>      <span class="k">elsif</span> <span class="n">masked_token</span><span class="o">.</span><span class="n">length</span> <span class="o">==</span> <span class="no">ActionController</span><span class="o">::</span><span class="no">RequestForgeryProtection</span><span class="o">::</span><span class="no">AUTHENTICITY_TOKEN_LENGTH</span> <span class="o">*</span> <span class="mi">2</span>
</span><span class='line'>        <span class="n">csrf_token</span> <span class="o">=</span> <span class="n">anonymous_controller</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="ss">:unmask_token</span><span class="p">,</span> <span class="n">masked_token</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">anonymous_controller</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="ss">:compare_with_real_token</span><span class="p">,</span> <span class="n">csrf_token</span><span class="p">,</span> <span class="n">session</span><span class="p">)</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>        <span class="kp">false</span> <span class="c1"># Token is malformed.</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">protect_against_forgery?</span>
</span><span class='line'>      <span class="n">allow_forgery_protection</span> <span class="o">=</span> <span class="no">Rails</span><span class="o">.</span><span class="n">configuration</span><span class="o">.</span><span class="n">action_controller</span><span class="o">.</span><span class="n">allow_forgery_protection</span>
</span><span class='line'>      <span class="n">allow_forgery_protection</span><span class="o">.</span><span class="n">nil?</span> <span class="o">||</span> <span class="n">allow_forgery_protection</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">V1</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">Root</span> <span class="o">&lt;</span> <span class="no">Grape</span><span class="o">::</span><span class="no">API</span>
</span><span class='line'>    <span class="n">helpers</span> <span class="no">RequestForgeryProtectionHelper</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">before</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">protect_against_forgery</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>クライアント側</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">token</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span> <span class="s1">&#39;meta[name=&quot;csrf-token&quot;]&#39;</span> <span class="p">).</span><span class="nx">attr</span><span class="p">(</span> <span class="s1">&#39;content&#39;</span> <span class="p">);</span>
</span><span class='line'><span class="nx">$</span><span class="p">.</span><span class="nx">ajaxSetup</span><span class="p">({</span>
</span><span class='line'>  <span class="nx">beforeSend</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span> <span class="nx">xhr</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">xhr</span><span class="p">.</span><span class="nx">setRequestHeader</span><span class="p">(</span> <span class="s1">&#39;X-CSRF-Token&#39;</span><span class="p">,</span> <span class="nx">token</span> <span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[Doorkeeperの認証で使われるtokenを取得]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2018/02/15/get-doorkeeper-token/"/>
        <updated>2018-02-15T11:46:00+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2018/02/15/get-doorkeeper-token</id>
        <content type="html"><![CDATA[<p>doorkeeprの処理のなかで削除済のユーザのステータスが取りたくて、tokenを取得できるかやってみました。</p>

<p>イレギュラーアクセス -> tokenが取れない。<br/>
通常のアクセス -> tokenが取れる。ユーザがひける。<br/>
削除済または退会済みユーザへのアクセス -> tokenが取れる。ユーザがひけない。</p>

<p>って感じでしょうか？</p>

<!-- more -->


<p></p>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>  <br/>
<ins class="adsbygoogle"  
     style="display:block; text-align:center;"  
     data-ad-layout="in-article"  
     data-ad-format="fluid"  
     data-ad-client="ca-pub-7039502723411845"  
     data-ad-slot="8206045005"></ins></p>

<script>    
     (adsbygoogle = window.adsbygoogle || []).push({});    
</script>


<p></p>

<p>下記のようにしたら取れました。<br/>
あとはこれをうまくつかってerrorとかで削除済のレスポンスを返す感じですね。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># frozen_string_literal: true</span>
</span><span class='line'>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;doorkeeper/grape/helpers&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">module</span> <span class="nn">V1</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">Root</span> <span class="o">&lt;</span> <span class="no">Grape</span><span class="o">::</span><span class="no">API</span>
</span><span class='line'>    <span class="n">helpers</span> <span class="no">Doorkeeper</span><span class="o">::</span><span class="no">Grape</span><span class="o">::</span><span class="no">Helpers</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">before</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">authorization_request</span> <span class="o">=</span> <span class="no">Doorkeeper</span><span class="o">::</span><span class="no">Grape</span><span class="o">::</span><span class="no">AuthorizationDecorator</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">request</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># これでrequestからtokenが取れる</span>
</span><span class='line'>      <span class="n">token</span> <span class="o">=</span> <span class="no">Doorkeeper</span><span class="o">::</span><span class="no">OAuth</span><span class="o">::</span><span class="no">Token</span><span class="o">.</span><span class="n">from_request</span><span class="p">(</span><span class="n">authorization_request</span><span class="p">,</span> <span class="o">*</span><span class="no">Doorkeeper</span><span class="o">.</span><span class="n">configuration</span><span class="o">.</span><span class="n">access_token_methods</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># そのトークンを使ってユーザのトークンが取れる。</span>
</span><span class='line'>      <span class="n">access_token</span> <span class="o">=</span> <span class="no">Doorkeeper</span><span class="o">::</span><span class="no">AccessToken</span><span class="o">.</span><span class="n">by_token</span><span class="p">(</span><span class="n">token</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">doorkeeper_authorize!</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">mount</span> <span class="no">Users</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[S3に直接にファイルアップロード]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2018/02/14/direct-upload-to-s3-with-rails-and-carrierwave/"/>
        <updated>2018-02-14T18:35:13+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2018/02/14/direct-upload-to-s3-with-rails-and-carrierwave</id>
        <content type="html"><![CDATA[<p>Herokuでの大きいファイルアップロードはリクエストタイムアウトが30秒に設定されているのでやっかいです。</p>

<p>Herokuの公式でも4MBを超えるファイルをあげる場合はS3に直接あげてねって書いてあります。<br/>
<a href="https://devcenter.heroku.com/articles/s3#direct-upload">https://devcenter.heroku.com/articles/s3#direct-upload</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>This is the preferred approach if you’re working with file uploads bigger than 4MB. The idea is to skip the hop to your dyno, making a direct connection from the end user browser to S3. While this reduces the processing required by your application it is a more complex implementation and limits the ability to modify (transform, filter, resize etc…) the file before storing in S3.</span></code></pre></td></tr></table></div></figure>


<p>carriwaveを使っているのでcarriwave_directいいなと思いましたが、<br/>
<a href="https://github.com/dwilkie/carrierwave_direct">carrierwave_direct</a></p>

<p>最終更新日が結構前でメンテされていないのかな？ってのとgemを使いすぎるとわけわかめになるので自力でやることにしました。</p>

<!-- more -->


<p></p>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>  <br/>
<ins class="adsbygoogle"  
     style="display:block; text-align:center;"  
     data-ad-layout="in-article"  
     data-ad-format="fluid"  
     data-ad-client="ca-pub-7039502723411845"  
     data-ad-slot="8206045005"></ins></p>

<script>    
     (adsbygoogle = window.adsbygoogle || []).push({});    
</script>


<p></p>

<p>署名付きアップロード用のリンクを生成してjsに渡しjsでそのurlにアップロードする流れです。</p>

<p>Awsコンソールにログインしてs3からBucketを作成します。<br/>
作成したBucketを選択してアクセス権限タブからCORSの設定を開きます。<br/>
以下のように設定します。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
</span><span class='line'>&lt;CORSConfiguration xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;
</span><span class='line'>&lt;CORSRule&gt;
</span><span class='line'>    &lt;AllowedOrigin&gt;*&lt;/AllowedOrigin&gt;
</span><span class='line'>    &lt;AllowedMethod&gt;GET&lt;/AllowedMethod&gt;
</span><span class='line'>    &lt;AllowedMethod&gt;PUT&lt;/AllowedMethod&gt;
</span><span class='line'>    &lt;MaxAgeSeconds&gt;3000&lt;/MaxAgeSeconds&gt;
</span><span class='line'>    &lt;AllowedHeader&gt;*&lt;/AllowedHeader&gt;
</span><span class='line'>&lt;/CORSRule&gt;
</span><span class='line'>&lt;/CORSConfiguration&gt;</span></code></pre></td></tr></table></div></figure>


<p>次にGemfileに追記してbundle install</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Gemfile</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;aws-sdk&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>S3_BUCKETを操作できるようにします。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># config/initializers/aws.rb</span>
</span><span class='line'><span class="n">credentials</span> <span class="o">=</span> <span class="no">Aws</span><span class="o">::</span><span class="no">Credentials</span><span class="o">.</span><span class="n">new</span><span class="p">(</span>
</span><span class='line'>  <span class="no">ENV</span><span class="o">[</span><span class="ss">:aws_access_key</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>  <span class="no">ENV</span><span class="o">[</span><span class="ss">:aws_secret</span><span class="o">]</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">s3_resource</span> <span class="o">=</span> <span class="no">Aws</span><span class="o">::</span><span class="no">S3</span><span class="o">::</span><span class="no">Resource</span><span class="o">::</span><span class="kp">new</span><span class="p">(</span><span class="ss">region</span><span class="p">:</span> <span class="s1">&#39;bucketのregion&#39;</span><span class="p">,</span> <span class="ss">credentials</span><span class="p">:</span> <span class="n">credentials</span><span class="p">)</span>
</span><span class='line'><span class="no">S3_BUCKET</span> <span class="o">=</span> <span class="n">s3_resource</span><span class="o">.</span><span class="n">bucket</span><span class="p">(</span><span class="s1">&#39;bucket名&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>URL生成のメソッドはCarrierwaveのuploaderクラスにメソッド生やしました。<br/>
取得はそのままCarrierwaveを使うイメージです。<br/>
今のプロジェクトでは基底クラスを作ってそれを継承させてます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">ApplicationUploader</span> <span class="o">&lt;</span> <span class="no">CarrierWave</span><span class="o">::</span><span class="no">Uploader</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">store_dir</span>
</span><span class='line'>    <span class="s2">&quot;uploads/</span><span class="si">#{</span><span class="n">model</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">to_s</span><span class="o">.</span><span class="n">underscore</span><span class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="n">mounted_as</span><span class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="n">model</span><span class="o">.</span><span class="n">id</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">presigned_url</span><span class="p">(</span><span class="n">file_name</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">)</span>
</span><span class='line'>    <span class="n">file_name</span> <span class="o">||=</span> <span class="nb">self</span><span class="o">.</span><span class="n">model</span><span class="o">.</span><span class="n">attributes</span><span class="o">[</span><span class="n">mounted_as</span><span class="o">.</span><span class="n">to_s</span><span class="o">]</span>
</span><span class='line'>    <span class="n">object</span> <span class="o">=</span> <span class="no">S3_BUCKET</span><span class="o">.</span><span class="n">object</span><span class="p">(</span><span class="o">[</span><span class="n">store_dir</span><span class="p">,</span> <span class="n">file_name</span><span class="o">].</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39;/&#39;</span><span class="p">))</span>
</span><span class='line'>    <span class="n">object</span><span class="o">.</span><span class="n">presigned_url</span><span class="p">(</span><span class="ss">:put</span><span class="p">,</span> <span class="ss">expires_in</span><span class="p">:</span> <span class="mi">1</span><span class="o">.</span><span class="n">minutes</span><span class="o">.</span><span class="n">to_i</span><span class="p">,</span> <span class="ss">acl</span><span class="p">:</span> <span class="s1">&#39;private&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">ImageUploader</span> <span class="o">&lt;</span> <span class="no">ApplicationUploader</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>これで以下のように署名付きリンクを生成できます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="n">user</span><span class="o">.</span><span class="n">image</span><span class="o">.</span><span class="n">presigned_url</span> <span class="c1"># =&gt; 署名付きのs3直アップロードurl</span>
</span></code></pre></td></tr></table></div></figure>


<p>署名付きリンクはデフォルトで900秒（15分）で失効します(上記uploaderでは1分にしている)<br/>
そのためcontrollerに生成してhiddenとかgonで渡すのはやめたほうがいい気がします。</p>

<p>jsで署名付きリンク生成リクエストをもらってurlを返し、そのurlでs3にアップロードするようにします。</p>

<p>Grapeでapiを作ります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">params</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">requires</span> <span class="ss">:file_name</span><span class="p">,</span> <span class="ss">type</span><span class="p">:</span> <span class="nb">String</span><span class="p">,</span> <span class="ss">desc</span><span class="p">:</span> <span class="s1">&#39;ファイル名&#39;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="n">post</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">create</span>
</span><span class='line'>  <span class="n">user</span><span class="o">.</span><span class="n">update_column</span><span class="p">(</span><span class="s1">&#39;image&#39;</span><span class="p">,</span> <span class="n">params</span><span class="o">[</span><span class="ss">:file_name</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span><span class="nb">id</span><span class="p">:</span> <span class="n">user</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="ss">filename</span><span class="p">:</span> <span class="n">params</span><span class="o">[</span><span class="ss">:file_name</span><span class="o">]</span><span class="p">,</span> <span class="ss">url</span><span class="p">:</span> <span class="n">user</span><span class="o">.</span><span class="n">image</span><span class="o">.</span><span class="n">presigned_url</span><span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>carriwaveで処理させたいのですがstore先にidが必要なため保存しています。</p>

<p>以下リンク取得からアップロードまでのサンプルです。<br/>
ちょっと適当な部分があるので動かなかったらすいません。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">let</span> <span class="nx">fd</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">FormData</span><span class="p">();</span>
</span><span class='line'><span class="nx">fd</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s1">&#39;file&#39;</span><span class="p">,</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;.file&#39;</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'><span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span>
</span><span class='line'>  <span class="nx">url</span> <span class="o">:</span> <span class="s1">&#39;grapeのurl&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">data</span> <span class="o">:</span> <span class="p">{</span><span class="nx">file_name</span><span class="o">:</span> <span class="nx">fileData</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;file&#39;</span><span class="p">).</span><span class="nx">name</span><span class="p">},</span>
</span><span class='line'>  <span class="nx">type</span> <span class="o">:</span> <span class="s1">&#39;post&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">dataType</span> <span class="o">:</span> <span class="s1">&#39;json&#39;</span>
</span><span class='line'><span class="p">}).</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span>
</span><span class='line'>    <span class="nx">url</span> <span class="o">:</span> <span class="nx">data</span><span class="p">.</span><span class="nx">url</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">data</span> <span class="o">:</span> <span class="nx">fileData</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;file&#39;</span><span class="p">),</span>
</span><span class='line'>    <span class="nx">type</span> <span class="o">:</span> <span class="s1">&#39;put&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">dataType</span> <span class="o">:</span> <span class="s1">&#39;xml&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">processData</span> <span class="o">:</span> <span class="kc">false</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">contentType</span> <span class="o">:</span> <span class="kc">false</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">success</span> <span class="o">:</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;成功したよー&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nx">error</span> <span class="o">:</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;失敗。無念&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>carrierwave-attachmentscannerを使っていたんですが、これは直アップロードだと使えないので、保存と同時にafter_saveでsidekiqのキューに押し込んであとでウィルスチェックしています。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[carrierwaveのリンクの有効期間を個別に設定]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2018/02/09/carrierwave-expire-setting/"/>
        <updated>2018-02-09T19:27:03+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2018/02/09/carrierwave-expire-setting</id>
        <content type="html"><![CDATA[<p>全体でかける場合はこうですかね。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># config/initializers/carrierwave.rb</span>
</span><span class='line'><span class="no">CarrierWave</span><span class="o">::</span><span class="no">SanitizedFile</span><span class="o">.</span><span class="n">sanitize_regexp</span> <span class="o">=</span> <span class="sr">/[^[:word:]\.\-\+]/</span> <span class="c1"># for Japanese</span>
</span><span class='line'><span class="no">CarrierWave</span><span class="o">.</span><span class="n">configure</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">fog_credentials</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>    <span class="ss">provider</span><span class="p">:</span>              <span class="s1">&#39;AWS&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">aws_access_key_id</span><span class="p">:</span>     <span class="no">ENV</span><span class="o">[</span><span class="ss">:access_key</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">aws_secret_access_key</span><span class="p">:</span> <span class="no">ENV</span><span class="o">[</span><span class="ss">:secret</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">region</span><span class="p">:</span>                <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;s3_region&#39;</span><span class="o">]</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">fog_public</span> <span class="o">=</span> <span class="kp">false</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">fog_directory</span> <span class="o">=</span> <span class="no">Settings</span><span class="o">.</span><span class="n">aws</span><span class="o">[</span><span class="s1">&#39;s3_bucket&#39;</span><span class="o">]</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">cache_storage</span> <span class="o">=</span> <span class="ss">:fog</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">fog_authenticated_url_expiration</span> <span class="o">=</span> <span class="mi">1</span><span class="o">.</span><span class="n">minutes</span><span class="o">.</span><span class="n">to_i</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<p></p>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>  <br/>
<ins class="adsbygoogle"  
     style="display:block; text-align:center;"  
     data-ad-layout="in-article"  
     data-ad-format="fluid"  
     data-ad-client="ca-pub-7039502723411845"  
     data-ad-slot="8206045005"></ins></p>

<script>    
     (adsbygoogle = window.adsbygoogle || []).push({});    
</script>


<p></p>

<p>個々のアップローダークラスでかける場合</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">ImageUploader</span> <span class="o">&lt;</span> <span class="no">CarrierWave</span><span class="o">::</span><span class="no">Uploader</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">fog_authenticated_url_expiration</span>
</span><span class='line'>    <span class="mi">1</span><span class="o">.</span><span class="n">minutes</span><span class="o">.</span><span class="n">to_i</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>
uploader内ではmodelでモデル側のインスタンスを参照できるのでmodel側の条件で動的に有効期限を変えるとかもできそうですね。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[ruby2.5にあげたら例外発生時にstacktraceが吐き出されなくなった]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2018/01/31/no-backtrace/"/>
        <updated>2018-01-31T11:51:51+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2018/01/31/no-backtrace</id>
        <content type="html"><![CDATA[<p>Railsである日を境に例外発生時にスタックトレースがでなくなっちゃいました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>F, [2018-01-31T11:41:40.388898 #5662] FATAL -- : 
</span><span class='line'>NoMethodError - undefined method `company_users' for nil:NilClass:</span></code></pre></td></tr></table></div></figure>


<p>railsのlogにはこれしかでない。</p>

<!-- more -->


<p></p>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>  <br/>
<ins class="adsbygoogle"  
     style="display:block; text-align:center;"  
     data-ad-layout="in-article"  
     data-ad-format="fluid"  
     data-ad-client="ca-pub-7039502723411845"  
     data-ad-slot="8206045005"></ins></p>

<script>    
     (adsbygoogle = window.adsbygoogle || []).push({});    
</script>


<p></p>

<p>検索すると発見。</p>

<p><a href="https://stackoverflow.com/questions/48327987/why-does-ruby-2-5-0-not-show-a-stacktrace-in-rails-5-1-4">Why does Ruby 2.5.0 not show a stacktrace in Rails 5.1.4?</a></p>

<p>なるほどrubyを2.5にあげたからか。</p>

<p>手元の環境を見ると</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ruby (2.5)  
</span><span class='line'>rails (5.1.4)  
</span><span class='line'>binding_of_caller (0.7.2)</span></code></pre></td></tr></table></div></figure>


<p>0.8.0にbinding_of_callerにあげて解決です。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[国際化対応(お金関連)]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2018/01/30/money-localization/"/>
        <updated>2018-01-30T10:27:12+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2018/01/30/money-localization</id>
        <content type="html"><![CDATA[<p>国際化対応。<br/>
DBの日時はutcで保存して表示する時にユーザによって該当のタイムゾーンで表示とか色々な知見はあるかと思いますが。<br/>
お金の区切りもあるんですね。</p>

<!-- more -->


<p></p>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>  <br/>
<ins class="adsbygoogle"  
     style="display:block; text-align:center;"  
     data-ad-layout="in-article"  
     data-ad-format="fluid"  
     data-ad-client="ca-pub-7039502723411845"  
     data-ad-slot="8206045005"></ins></p>

<script>    
     (adsbygoogle = window.adsbygoogle || []).push({});    
</script>


<p></p>

<p>お金ってカンマ区切りだけかと思い込んでましたがそうじゃないらしいです。</p>

<p><a href="http://coliss.com/articles/build-websites/operation/writing/53.html">世界各国での数字の区切り方</a></p>

<p>数値がペリオドで送られてくる国やスペースで送ってくる国があるので注意が必要です。<br/>
カンマ一括で消して処理していたらバリデーションで特定の国入力エラーになっていた。</p>

<p>jsのtoLocaleStringとか使うとドイツのブラウザではカンマではなくペリオド入るらしいので気をつけるべし</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[Doorkeeperでパスワードが変更されたらクライアント側でログアウトさせる]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2018/01/29/logout-when-doorkeeper-password-change/"/>
        <updated>2018-01-29T14:26:19+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2018/01/29/logout-when-doorkeeper-password-change</id>
        <content type="html"><![CDATA[<p><a href="https://github.com/doorkeeper-gem/doorkeeper">Doorkeeper</a>を使ったoauthの仕組みでプラットフォーム側でパスワード変更の処理を書いててパスワード変更しても現在ログイン状態のユーザーがログアウトされなくて久しぶりにどっぷりハマったのでメモ。</p>

<!-- more -->


<p></p>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>  <br/>
<ins class="adsbygoogle"  
     style="display:block; text-align:center;"  
     data-ad-layout="in-article"  
     data-ad-format="fluid"  
     data-ad-client="ca-pub-7039502723411845"  
     data-ad-slot="8206045005"></ins></p>

<script>    
     (adsbygoogle = window.adsbygoogle || []).push({});    
</script>


<p></p>

<p>セッションストアであるredisを見ると同じユーザーで二つのブラウザでログインすると２つ違うsession keyで保持されている。<br/>
このセッションの中身は</p>

<p>一つ目はwarden key(そのままだとユーザID)<br/>
二つ目はencrypted_password</p>

<p>となっているようだ。</p>

<p><a href="https://stackoverflow.com/a/23683925/2223472">https://stackoverflow.com/a/23683925/2223472</a></p>

<p>Doorkeeperを使っているクライアントではoauth認証を使うのでパスワードを使っていない<br/>
そのため二つめencrypted_passwordの値は空になっている。</p>

<p>この二つの値を使って認証しているようだ。</p>

<p>プラットフォーム側でパスワードを変更しても二つ目の値は相変わらず空のためクライアント側ではセッションの状況に変化なしとなり<br/>
そのままログインが保持されてしまう。</p>

<p>tokenを使ったりパスワードを渡す等があったりしたがこうした。</p>

<p>まず、 パスワード変更時刻をプラットフォーム側にcolumnとして追加。<br/>
パスワード変更時にupdateするようにする。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>class User &lt; ApplicationRecord  
</span><span class='line'>  def reset_password(*args)  
</span><span class='line'>    self.password_changed_at = Time.current  
</span><span class='line'>    super  
</span><span class='line'>  end  
</span><span class='line'>end  </span></code></pre></td></tr></table></div></figure>


<p></p>

<p>そしてクライアントサイドでは連携されたpassword_changed_atを使うようにする。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>class User &lt; ApplicationRecord  
</span><span class='line'>  def authenticatable_salt  
</span><span class='line'>    password_changed_at  
</span><span class='line'>  end  
</span><span class='line'>end  </span></code></pre></td></tr></table></div></figure>


<p></p>

<p>これでパスワードが変更されるとクライアントのセッションの中身も変わり、<br/>
他のブラウザでログインしていても適切にログアウトされる。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[CircleCIでRuby2.5使おうとしたらbad interpreter]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2018/01/26/circle-ci-ver-one-ruby-two-five-bad-interpreter/"/>
        <updated>2018-01-26T18:51:07+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2018/01/26/circle-ci-ver-one-ruby-two-five-bad-interpreter</id>
        <content type="html"><![CDATA[<p>一度は成功していたのに急にCircleCI 1.0がこけるようになってしまいました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>set ruby version to 2.5.0  </span></code></pre></td></tr></table></div></figure>


<p></p>

<p>で</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ruby-2.5.0 - #generating default wrappers|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|.  
</span><span class='line'>Using /home/ubuntu/.rvm/gems/ruby-2.5.0  
</span><span class='line'>/home/ubuntu/.rvm/scripts/override_gem: /home/ubuntu/.rvm/rubies/ruby-2.5.0/bin/gem: /home/travis/.rvm/rubies/ruby-2.5.0/bin/ruby: bad interpreter: No such file or directory  </span></code></pre></td></tr></table></div></figure>


<p></p>

<p>のようなエラー。</p>

<!-- more -->


<p></p>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>  <br/>
<ins class="adsbygoogle"  
     style="display:block; text-align:center;"  
     data-ad-layout="in-article"  
     data-ad-format="fluid"  
     data-ad-client="ca-pub-7039502723411845"  
     data-ad-slot="8206045005"></ins></p>

<script>    
     (adsbygoogle = window.adsbygoogle || []).push({});    
</script>


<p></p>

<p>調べるとこんなツイートが&hellip;</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="en" dir="ltr"><a href="https://twitter.com/circleci?ref_src=twsrc%5Etfw">@circleci</a> I&#39;m getting build failures on ruby 2.5 - it looks like the `gem` command is using a shebang that references a non-existent `/home/travis` directory <a href="https://t.co/UcZREdK2Q8">pic.twitter.com/UcZREdK2Q8</a></p>&mdash; Justin Rhinesmith (@jerhinesmith) <a href="https://twitter.com/jerhinesmith/status/956311677426741248?ref_src=twsrc%5Etfw">2018年1月24日</a></blockquote>


<p></p>

<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>


<p></p>

<p>sshするとshebangでエラーになっている同じ現象でした。<br/>
そしてこんなチケットが&hellip;</p>

<p><a href="https://discuss.circleci.com/t/ruby-2-5-0-builds-failing-on-circleci-1-0-due-to-missing-home-travis/19620">Ruby 2.5.0 builds failing on CircleCI 1.0 due to missing <code>/home/travis</code></a></p>

<p>解決しているらしいのですが、普通にエラーでますがな&hellip;<br/>
マニュアルで</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>machine:  
</span><span class='line'>  pre:  
</span><span class='line'>    - sudo ln -s /opt/circleci /home/travis  </span></code></pre></td></tr></table></div></figure>


<p></p>

<p>を仕込もうとしたらもうありますエラー。<br/>
そして微妙にパスも違う。</p>

<p>結論。こうしてなおしました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>machine:  
</span><span class='line'>  pre:  
</span><span class='line'>    - sudo rm -rf /home/travis  
</span><span class='line'>    - sudo ln -s /home/ubuntu /home/travis  
</span><span class='line'>  ruby:  
</span><span class='line'>    version: 2.5.0  </span></code></pre></td></tr></table></div></figure>


<p></p>

<p>すぐなおってくれると思いますが、お困りの人がいたら上記で治ります。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[ridgepoleの部分インデックスで毎回createとdrop indexをさせない書き方]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2018/01/22/ridgepole-partial-uniq-index/"/>
        <updated>2018-01-22T14:44:35+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2018/01/22/ridgepole-partial-uniq-index</id>
        <content type="html"><![CDATA[<p>railsでparanoiaとか使っていて、<br/>
mysqlで論理削除にdeleted_atがnullかどうかで論理削除判定していると<br/>
dbのuniq indexで辛い感じになります。</p>

<p>postgresqlでは部分インデックスなるものがあり、deleted_atがnullのものをuniq制約の条件に含めないとかいうことができます。</p>

<p><a href="https://www.postgresql.jp/document/9.2/html/indexes-partial.html">部分インデックス</a></p>

<!-- more -->


<p></p>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>  <br/>
<ins class="adsbygoogle"  
     style="display:block; text-align:center;"  
     data-ad-layout="in-article"  
     data-ad-format="fluid"  
     data-ad-client="ca-pub-7039502723411845"  
     data-ad-slot="8206045005"></ins></p>

<script>    
     (adsbygoogle = window.adsbygoogle || []).push({});    
</script>


<p></p>

<p>ridgepoleではこう書くと毎回create index drop indexしません。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>add_index "users", ["email"], name: "uniq_email_idx", unique: true, where: '(deleted_at IS NULL)'  </span></code></pre></td></tr></table></div></figure>


<p></p>

<p>本日は大雪らしいので早く帰りましょう。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[テーブルで手軽に炙りを体験]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2017/12/26/soto-toach/"/>
        <updated>2017-12-26T10:15:14+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2017/12/26/soto-toach</id>
        <content type="html"><![CDATA[<p>みなさんはま寿司とか行きますか？<br/>
回る寿司屋ではあぶり系のネタが一番充実しているような気がします。</p>

<p>あぶりしめ鯖おいしいですね。</p>

<!-- more -->


<p></p>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>  <br/>
<ins class="adsbygoogle"  
     style="display:block; text-align:center;"  
     data-ad-layout="in-article"  
     data-ad-format="fluid"  
     data-ad-client="ca-pub-7039502723411845"  
     data-ad-slot="8206045005"></ins></p>

<script>    
     (adsbygoogle = window.adsbygoogle || []).push({});    
</script>


<p></p>

<p>我が家であぶりたい時にはこれを使っています。</p>

<table  border="0" cellpadding="5" style="border:none"><tr><td valign="top" style="border:none"><a href="https://hb.afl.rakuten.co.jp/hgc/g00r3jp6.4dryw726.g00r3jp6.4dryxab7/?pc=https%3A%2F%2Fitem.rakuten.co.jp%2Fhimaraya%2F0000000322484%2F&m=http%3A%2F%2Fm.rakuten.co.jp%2Fhimaraya%2Fi%2F10087427%2F" target="_blank" ><img src="https://thumbnail.image.rakuten.co.jp/@0_mall/himaraya/cabinet/tentou3bai_1/0000000322484_r1_01.jpg?_ex=128x128" border="0" style="margin-right:10px" /></a></td><td valign="top" style="border:none;text-align:left"><div class="kaerebalink-name" style="margin-bottom:10px;line-height:120%"><a href="https://hb.afl.rakuten.co.jp/hgc/g00r3jp6.4dryw726.g00r3jp6.4dryxab7/?pc=https%3A%2F%2Fitem.rakuten.co.jp%2Fhimaraya%2F0000000322484%2F&m=http%3A%2F%2Fm.rakuten.co.jp%2Fhimaraya%2Fi%2F10087427%2F" target="_blank" >ソト SOTO トーチ　チャッカ— ポケットサイズ バーナー ST-480</a></div><div class="kaerebalink-detail" style="margin-bottom:5px;"></div><table style="border:none;margin-top:10px"><tr><td style="border:none;text-align:left;"><div class="shoplinkrakuten" style="margin-right:5px"><a href="https://hb.afl.rakuten.co.jp/hgc/16102ad8.0804351d.16102ad9.09702e1c/?pc=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FSOTO%2520%25E3%2583%259D%25E3%2582%25B1%25E3%2583%2583%25E3%2583%2588%25E3%2583%2588%25E3%2583%25BC%25E3%2583%2581%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0%26scid%3Daf_ich_link_urltxt%26m%3Dhttp%3A%2F%2Fm.rakuten.co.jp%2F" target="_blank" >楽天市場</a></div><div class="shoplinkamazon" style="margin-right:5px"><a href="http://www.amazon.co.jp/gp/search?keywords=SOTO%20%E3%83%9D%E3%82%B1%E3%83%83%E3%83%88%E3%83%88%E3%83%BC%E3%83%81&__mk_ja_JP=%E3%82%AB%E3%82%BF%E3%82%AB%E3%83%8A&tag=gogosakura-22" target="_blank" >Amazon</a></div></td><td style="vertical-align:bottom;padding-left:10px;font-size:x-small;border:none">by <a href="http://kaereba.com" rel="nofollow" target="_blank">カエレバ</a></td></tr></table></font></td></tr></table>


<p></p>

<p>火力もそこそこで携帯性が良くて取り回しがいいです。<br/>
食卓においても邪魔にならない。</p>

<p>炙りしめ鯖<br/>
<a href="http://yoshitsugufujii.github.io/images/blog/20171226/IMG_3432.jpg" data-lightbox="aburi" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20171226/IMG_3432.jpg"><br/>
</a></p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20171226/IMG_3433.jpg" data-lightbox="aburi" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20171226/IMG_3433.jpg"><br/>
</a></p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20171226/IMG_3434.jpg" data-lightbox="aburi" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20171226/IMG_3434.jpg"><br/>
</a></p>

<p>炙りサーモンチーズ<br/>
<a href="http://yoshitsugufujii.github.io/images/blog/20171226/IMG_3437.jpg" data-lightbox="aburi" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20171226/IMG_3437.jpg"><br/>
</a></p>

<p>わさびの袋とかとっちらかっててすいません。<br/>
ほんと便利でテーブルで必要な時に必要な時にだけ炙れますし、<br/>
炙りたての暖かいうちに食べれます。</p>

<p>スルメとか炙ってもいいかもしれません。</p>

<p>本格的なガスバーナーに比べて火力がないのでお子様でも扱えると思います。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[HerokuのNewRelicでRoleがUserで何もできない]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2017/12/21/heroku-at-herokumanager-dot-com/"/>
        <updated>2017-12-21T13:55:13+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2017/12/21/heroku-at-herokumanager-dot-com</id>
        <content type="html"><![CDATA[<p>子供が生まれましたのでしばらく釣りはお休みです。<br/>
春ぐらいになったら行きたいなぁ。</p>

<p>妻が帝王切開で産んだので、12月は週１の無理のない時間での出社を混ぜつつ、フルリモートで働かせていただいております。<br/>
大変ありがたいことです。</p>

<p>育児と家事と仕事で目が回るようでテレビなんてほとんど見れません。<br/>
シングルで育てている人には頭があがりませんね。</p>

<!-- more -->


<p></p>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>  <br/>
<ins class="adsbygoogle"  
     style="display:block; text-align:center;"  
     data-ad-layout="in-article"  
     data-ad-format="fluid"  
     data-ad-client="ca-pub-7039502723411845"  
     data-ad-slot="8206045005"></ins></p>

<script>    
     (adsbygoogle = window.adsbygoogle || []).push({});    
</script>


<p></p>

<p>今の仕事ではHeroku上でアプリケーション動かしているんですが、AddonでNewRelic足したら<br/>
NewRelic上でAlertの設定や各種変更動作ができない。</p>

<p>Userの設定をみると</p>

<p>チーム名@herokumanager.com</p>

<p>という見慣れないOwner権限を持ったユーザとUserロールの自分のみ。<br/>
色々と調べて見ましたが、最初にAddonを入れた時に連携するのにユーザが必要で暫定的に上記のユーザが作られるっぽい。</p>

<p><a href="https://discuss.newrelic.com/t/authorization-for-heroku-users/52967">https://discuss.newrelic.com/t/authorization-for-heroku-users/52967</a><br/>
<a href="https://discuss.newrelic.com/t/heroku-user-authorization/53121">https://discuss.newrelic.com/t/heroku-user-authorization/53121</a></p>

<p>正しい方法はわかりませんがしばらく調べてもわからなかったので潔くチケットをオープンしてNewRelicのサポートに自分のユーザをAdminにしてくれと夕方お願いしたら夜にはAdminになりました。</p>

<p>何か詰まっている人がいればサポートに投げるといいです。<br/>
誰かの参考になれば。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[自転車用ロッドホルダー]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2017/12/07/cycle-lod-holder/"/>
        <updated>2017-12-07T09:40:05+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2017/12/07/cycle-lod-holder</id>
        <content type="html"><![CDATA[<p>自転車のチェーンが度々外れるようになってきてしまったので<br/>
これを機に電動アシスト付きの自転車の購入を検討しました。<br/>
どうせなら車をどこかに止めて、そこから釣り場まで自転車で行ったりできるように車に積載可能なサイズを探しました。</p>

<p>実際に購入して、ロッドケースにまとめて竿をいれて担いで自転車乗っていたんですが、<br/>
自転車漕ぐ時に邪魔だし車の横すり抜ける時にぶつけそうになるので何かいい持ち運び方ないかと探していましたらいいのがありました。</p>

<!-- more -->


<p></p>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>
<ins class="adsbygoogle"
     style="display:block; text-align:center;"
     data-ad-layout="in-article"
     data-ad-format="fluid"
     data-ad-client="ca-pub-7039502723411845"
     data-ad-slot="8206045005"></ins></p>

<script>  
     (adsbygoogle = window.adsbygoogle || []).push({});  
</script>


<p></p>

<p>100均に売っている傘ホルダーです。</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20171206/IMG_3184.jpg" data-lightbox="takasukaihinkouen" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20171206/IMG_3184.jpg"><br/>
</a></p>

<p>左右に取り付けるとこんな感じ。</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20171206/IMG_3185.jpg" data-lightbox="takasukaihinkouen" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20171206/IMG_3185.jpg"><br/>
</a></p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20171206/IMG_3186.jpg" data-lightbox="takasukaihinkouen" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20171206/IMG_3186.jpg"><br/>
</a></p>

<p>移動がめちゃめちゃ楽になりました。<br/>
投げ竿などの竿ジリが長いものも上の留めるところにリールをひっかければ持ち運び可能です。</p>

<p>ちなみに自転車はこれを購入しました。<br/>
座席を少し前に出せばVoxyとかであれば詰めます。<br/>
ただサドルが硬くてずっと乗ってると股間が痛くなりますね。</p>

<table  border="0" cellpadding="5" style="border:none"><tr><td valign="top" style="border:none"><a href="https://hb.afl.rakuten.co.jp/hgc/g00pm4a6.4dryw6dc.g00pm4a6.4dryx09f/?pc=https%3A%2F%2Fitem.rakuten.co.jp%2Fnextr%2Fpanasonic-jconcept%2F&m=http%3A%2F%2Fm.rakuten.co.jp%2Fnextr%2Fi%2F10003997%2F" target="_blank" ><img src="https://thumbnail.image.rakuten.co.jp/@0_mall/nextr/cabinet/05240708/imgrc0069940876.jpg?_ex=128x128" border="0" style="margin-right:10px" /></a></td><td valign="top" style="border:none;text-align:left"><div class="kaerebalink-name" style="margin-bottom:10px;line-height:120%"><a href="https://hb.afl.rakuten.co.jp/hgc/g00pm4a6.4dryw6dc.g00pm4a6.4dryx09f/?pc=https%3A%2F%2Fitem.rakuten.co.jp%2Fnextr%2Fpanasonic-jconcept%2F&m=http%3A%2F%2Fm.rakuten.co.jp%2Fnextr%2Fi%2F10003997%2F" target="_blank" >パナソニック　Jコンセプト　2017モデル 【送料無料】【電動自転車　自転車　電動アシスト自転車 20インチ】</a></div><div class="kaerebalink-detail" style="margin-bottom:5px;"></div><table style="border:none;margin-top:10px"><tr><td style="border:none;text-align:left;"><div class="shoplinkrakuten" style="margin-right:5px"><a href="https://hb.afl.rakuten.co.jp/hgc/16102ad8.0804351d.16102ad9.09702e1c/?pc=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FJ%25E3%2582%25B3%25E3%2583%25B3%25E3%2582%25BB%25E3%2583%2597%25E3%2583%2588%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0%26scid%3Daf_ich_link_urltxt%26m%3Dhttp%3A%2F%2Fm.rakuten.co.jp%2F" target="_blank" >楽天市場</a></div><div class="shoplinkamazon" style="margin-right:5px"><a href="http://www.amazon.co.jp/gp/search?keywords=J%E3%82%B3%E3%83%B3%E3%82%BB%E3%83%97%E3%83%88&__mk_ja_JP=%E3%82%AB%E3%82%BF%E3%82%AB%E3%83%8A&tag=gogosakura-22" target="_blank" >Amazon</a></div></td><td style="vertical-align:bottom;padding-left:10px;font-size:x-small;border:none">by <a href="http://kaereba.com" rel="nofollow" target="_blank">カエレバ</a></td></tr></table></font></td></tr></table>

]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[高須海浜公園]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2017/12/05/takasukaihinkouen/"/>
        <updated>2017-12-05T09:29:49+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2017/12/05/takasukaihinkouen</id>
        <content type="html"><![CDATA[<p>釣行日 2017年12月02日(土)<br/>
天気 晴<br/>
場所 高須海浜公園<br/>
釣行時間: 15:30 〜 16:15</p>

<p>ベビーが生まれる直前なので釣りは自粛かなぁ。<br/>
と、前から行ってみたいと思っていた高須海浜公園のことを思い出し、<br/>
妻に話すと短時間ならという話なので高須海浜公園に行ってみました。</p>

<!-- more -->


<p></p>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>
<ins class="adsbygoogle"
     style="display:block; text-align:center;"
     data-ad-layout="in-article"
     data-ad-format="fluid"
     data-ad-client="ca-pub-7039502723411845"
     data-ad-slot="8206045005"></ins></p>

<script>  
     (adsbygoogle = window.adsbygoogle || []).push({});  
</script>


<p></p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20171205/IMG_3158.jpg" data-lightbox="takasukaihinkouen" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20171205/IMG_3158.jpg"><br/>
</a></p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20171205/IMG_3159.jpg" data-lightbox="takasukaihinkouen" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20171205/IMG_3159.jpg"><br/>
</a></p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20171205/IMG_3160.jpg" data-lightbox="takasukaihinkouen" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20171205/IMG_3160.jpg"><br/>
</a></p>

<p>遊具もあって開放感もありいい公園ですね。<br/>
遮るものがないので風がでると寒いかな。<br/>
実際この日も相当寒かった。</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20171205/IMG_3157.jpg" data-lightbox="takasukaihinkouen" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20171205/IMG_3157.jpg"><br/>
</a></p>

<p>護岸の方だとバーベキューもできるようです。<br/>
釣りしながらバーベキューとか楽しそうですね。<br/>
ただあんまり釣れないらしいですが。</p>

<p>気になる釣り場です。</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20171205/IMG_3161.jpg" data-lightbox="takasukaihinkouen" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20171205/IMG_3161.jpg"><br/>
</a></p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20171205/IMG_3162.jpg" data-lightbox="takasukaihinkouen" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20171205/IMG_3162.jpg"><br/>
</a></p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20171205/IMG_3164.jpg" data-lightbox="takasukaihinkouen" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20171205/IMG_3164.jpg"><br/>
</a></p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20171205/IMG_3166.jpg" data-lightbox="takasukaihinkouen" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20171205/IMG_3166.jpg"><br/>
</a></p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20171205/IMG_3167.jpg" data-lightbox="takasukaihinkouen" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20171205/IMG_3167.jpg"><br/>
</a></p>

<p>手前にあるテトラが邪魔そうですね。<br/>
竿が長くないと厳しいです。</p>

<p>テトラからは遠浅の砂地が続いているらしいです。<br/>
数少ない釣り人(3人)はみんなサヨリ仕掛けです。</p>

<p>私もためしに投げてみました。</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20171205/IMG_3170.jpg" data-lightbox="takasukaihinkouen" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20171205/IMG_3170.jpg"><br/>
</a></p>

<p>カレイ仕掛けをぶっこみ。サヨリ狙いです。</p>

<p>全然釣れない&hellip;と思いきや隣で釣っていたおじさんがデカめのサヨリを釣りました。<br/>
おおっと思うが続かず。</p>

<p>結果坊主でした。</p>

<p>早く帰ろうよという犬たち。</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20171205/IMG_3168.jpg" data-lightbox="takasukaihinkouen" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20171205/IMG_3168.jpg"><br/>
</a></p>

<p>サヨリの季節かここしか来れない時にまた来よう。</p>

<p>そして投げ竿のリール。<br/>
放置してたら年少から年長さんぐらいの子供たち7、８人くらいに勝手にリールをまかれて<br/>
PEラインがぐちゃぐちゃになってしまいましたorz</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[市川->検見川浜突堤]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2017/11/25/ichikawa-kemigawahama/"/>
        <updated>2017-11-25T23:16:06+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2017/11/25/ichikawa-kemigawahama</id>
        <content type="html"><![CDATA[<p>釣行日 2017年11月25日(土)<br/>
天気 晴<br/>
場所 市川<br/>
釣行時間: 9:00 〜 11:00</p>

<p>釣行日 2017年11月25日(土)<br/>
天気 晴<br/>
場所 検見川浜突堤<br/>
釣行時間: 15:30 〜 17:00</p>

<!-- more -->


<p></p>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>
<ins class="adsbygoogle"
     style="display:block; text-align:center;"
     data-ad-layout="in-article"
     data-ad-format="fluid"
     data-ad-client="ca-pub-7039502723411845"
     data-ad-slot="8206045005"></ins></p>

<script>  
     (adsbygoogle = window.adsbygoogle || []).push({});  
</script>


<p></p>

<p>クーラーボックスにつけるロッドホルダーと竿受けを買いました。</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20171125/IMG_3088.jpg" data-lightbox="ichikawa_kemigawa" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20171125/IMG_3088.jpg" style="width: 80%;"><br/>
</a></p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20171125/IMG_3089.jpg" data-lightbox="ichikawa_kemigawa" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20171125/IMG_3089.jpg" style="width: 80%;"><br/>
</a></p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20171125/IMG_3092.jpg" data-lightbox="ichikawa_kemigawa" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20171125/IMG_3092.jpg" style="width: 80%;"><br/>
</a></p>

<p>風がなければ小さいクーラーボックスに投げ竿かけても倒れませんでした。</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20171125/IMG_3093.jpg" data-lightbox="ichikawa_kemigawa" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20171125/IMG_3093.jpg" style="width: 80%;"><br/>
</a></p>

<p>こりゃ便利だ！</p>

<table  border="0" cellpadding="5" style="border:none"><tr><td valign="top" style="border:none"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/B008AQMEJ6/gogosakura-22/" target="_blank" ><img src="https://images-fe.ssl-images-amazon.com/images/I/31fr9cNZrQL._SL160_.jpg" border="0" style="margin-right:10px" /></a></td><td valign="top" style="border:none;text-align:left"><div class="kaerebalink-name" style="margin-bottom:10px;line-height:120%"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/B008AQMEJ6/gogosakura-22/" target="_blank" >ダイワ(Daiwa) CPキーパー ホワイト</a></div><div class="kaerebalink-detail" style="margin-bottom:5px;"> ダイワ(Daiwa) </div><div class="kaerebalink-salesranking" style="margin-bottom:5px">売り上げランキング : 3900</div><table style="border:none;margin-top:10px"><tr><td style="border:none;text-align:left;"><div class="shoplinkamazon" style="margin-right:5px"><a href="http://www.amazon.co.jp/gp/search?keywords=%E3%83%80%E3%82%A4%E3%83%AF%20CP%E3%82%AD%E3%83%BC%E3%83%91%E3%83%BC&__mk_ja_JP=%E3%82%AB%E3%82%BF%E3%82%AB%E3%83%8A&tag=gogosakura-22" target="_blank" >Amazon</a></div><div class="shoplinkrakuten" style="margin-right:5px"><a href="https://hb.afl.rakuten.co.jp/hgc/16102ad8.0804351d.16102ad9.09702e1c/?pc=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2F%25E3%2583%2580%25E3%2582%25A4%25E3%2583%25AF%2520CP%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%2591%25E3%2583%25BC%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0%26scid%3Daf_ich_link_urltxt%26m%3Dhttp%3A%2F%2Fm.rakuten.co.jp%2F" target="_blank" >楽天市場</a></div></td><td style="vertical-align:bottom;padding-left:10px;font-size:x-small;border:none">by <a href="http://kaereba.com" rel="nofollow" target="_blank">カエレバ</a></td></tr></table></font></td></tr></table>


<p></p>

<table  border="0" cellpadding="5" style="border:none"><tr><td valign="top" style="border:none"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/B00EVBBKEY/gogosakura-22/" target="_blank" ><img src="https://images-fe.ssl-images-amazon.com/images/I/317TnxvqPML._SL160_.jpg" border="0" style="margin-right:10px" /></a></td><td valign="top" style="border:none;text-align:left"><div class="kaerebalink-name" style="margin-bottom:10px;line-height:120%"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/B00EVBBKEY/gogosakura-22/" target="_blank" >ダイワ(Daiwa) ロッドホルダー CPスタンド W レッド 925938</a></div><div class="kaerebalink-detail" style="margin-bottom:5px;"> ダイワ(Daiwa) 2013-09-24</div><table style="border:none;margin-top:10px"><tr><td style="border:none;text-align:left;"><div class="shoplinkamazon" style="margin-right:5px"><a href="http://www.amazon.co.jp/gp/search?keywords=%E3%83%80%E3%82%A4%E3%83%AF%20CP%E3%82%B9%E3%82%BF%E3%83%B3%E3%83%89&__mk_ja_JP=%E3%82%AB%E3%82%BF%E3%82%AB%E3%83%8A&tag=gogosakura-22" target="_blank" >Amazon</a></div><div class="shoplinkrakuten" style="margin-right:5px"><a href="https://hb.afl.rakuten.co.jp/hgc/16102ad8.0804351d.16102ad9.09702e1c/?pc=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2F%25E3%2583%2580%25E3%2582%25A4%25E3%2583%25AF%2520CP%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25B3%25E3%2583%2589%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0%26scid%3Daf_ich_link_urltxt%26m%3Dhttp%3A%2F%2Fm.rakuten.co.jp%2F" target="_blank" >楽天市場</a></div></td><td style="vertical-align:bottom;padding-left:10px;font-size:x-small;border:none">by <a href="http://kaereba.com" rel="nofollow" target="_blank">カエレバ</a></td></tr></table></font></td></tr></table>


<p></p>

<p>本日の娘スイミングプール待ち時間はカレイ狙いです。</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20171125/IMG_3096.jpg" data-lightbox="ichikawa_kemigawa" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20171125/IMG_3096.jpg" style="width: 80%;"><br/>
</a></p>

<p>サヨリはもう誰も狙ってませんね。<br/>
おじさまがたが10本ぐらい竿出しています。<br/>
私も唯一持っている投げ竿を出してやってみましたが坊主。</p>

<p>誰も連れてませんでした。</p>

<p>15時半からは検見川浜突堤で投げ竿を一本ぶっ込んでトリック。<br/>
相変わらずの混雑っぷり。</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20171125/IMG_3097.jpg" data-lightbox="ichikawa_kemigawa" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20171125/IMG_3097.jpg" style="width: 80%;"><br/>
</a></p>

<p>まだイナダ狙っている人がいます。<br/>
サヨリやってる人もいました。<br/>
あとはヒイカ狙いとサビキですかね。</p>

<p>しばらくやるもあたりなく。<br/>
夕まずめにイワシの大群が海面を泳ぐも3匹ゲットのみ。<br/>
10センチにも満たない群れだったのでちょっと針が大きすぎました。</p>

<p>暗くなると隣の人が発電機回して灯り照らしてましたが魚かかなり寄ってました。</p>

<p>いいですね。集魚灯欲しいな。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[平塚新港 ヒイラギ サッパ コノシロ イナッコ]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2017/11/24/hiratsuka/"/>
        <updated>2017-11-24T17:23:41+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2017/11/24/hiratsuka</id>
        <content type="html"><![CDATA[<p>釣行日 2017年11月23日(木)<br/>
天気 晴れ時々曇<br/>
場所 平塚新港<br/>
釣行時間: 14:00 〜 16:30</p>

<p>久しぶりの釣りです。<br/>
実家に帰ってきたので平塚新港。</p>

<p>夏に比べてだいぶ人が少ないです。<br/>
夏の3分の1もいないんじゃないでしょうか。</p>

<!-- more -->


<p></p>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>
<ins class="adsbygoogle"
     style="display:block; text-align:center;"
     data-ad-layout="in-article"
     data-ad-format="fluid"
     data-ad-client="ca-pub-7039502723411845"
     data-ad-slot="8206045005"></ins></p>

<script>  
     (adsbygoogle = window.adsbygoogle || []).push({});  
</script>


<p></p>

<p>今日もトリックサビキです。</p>

<p>開始直後からヒイラギの猛攻です。</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20171124/IMG_3071.jpg" data-lightbox="hiratuka" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20171124/IMG_3071.jpg" style="width: 80%;"><br/>
</a></p>

<p>３連がけ</p>

<p>終了までに15匹ぐらい釣りました。<br/>
オールリリース。<br/>
調べてみると唐揚げにすると美味しいようで。<br/>
持って帰れば良かったかな。</p>

<p>途中様子をみにきた鳥くんにあげます。</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20171124/IMG_3077.jpg" data-lightbox="hiratuka" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20171124/IMG_3077.jpg" style="width: 80%;"><br/>
</a></p>

<p>口にくわえて離れて行きましたが地面に置いてどこかに行ってしまいました。<br/>
お口に合わなかったようです(^_^;)</p>

<p>ヒイラギの他には浅い棚でサッパ（一瞬アジかと思った）とコノシロが連れました。</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20171124/IMG_3073.jpg" data-lightbox="hiratuka" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20171124/IMG_3073.jpg" style="width: 80%;"><br/>
</a></p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20171124/IMG_3074.jpg" data-lightbox="hiratuka" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20171124/IMG_3074.jpg" style="width: 80%;"><br/>
</a></p>

<p>そしてまたサッパかコノシロかなと思ったらボラ。</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20171124/IMG_3080.jpg" data-lightbox="hiratuka" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20171124/IMG_3080.jpg" style="width: 80%;"><br/>
</a></p>

<p>16時半にはトラックのおじさんに追い出され、雨も降ってきたので納竿です。</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20171124/IMG_3084.png" data-lightbox="hiratuka" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20171124/IMG_3084.png" style="width: 80%;"><br/>
</a></p>

<p>釣れたサッパとコノシロはママカリにしたいと思います。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[中級エンジニアになるためには]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2017/11/15/chuken-poem/"/>
        <updated>2017-11-15T10:30:40+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2017/11/15/chuken-poem</id>
        <content type="html"><![CDATA[<p>中堅エンジニア(多分)の藤井です。</p>

<p>今回はIT業界のエモい話。</p>

<!-- more -->


<p></p>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>
<ins class="adsbygoogle"
     style="display:block; text-align:center;"
     data-ad-layout="in-article"
     data-ad-format="fluid"
     data-ad-client="ca-pub-7039502723411845"
     data-ad-slot="8206045005"></ins></p>

<script>  
     (adsbygoogle = window.adsbygoogle || []).push({});  
</script>


<p></p>

<p>長いこと初級エンジニアをやっていたような気がします。</p>

<p>業界の経験年数は自動的に積まれていきましたが新人の時代から一人で作ることが多く、我流でやっていることが多かったため相対的に自己の判断ができなかったからだったと思います。</p>

<p>なので5年くらいたってもフワフワとした気持ちでしたし、まだ新人、まだ初心者なのだと思っていました。</p>

<p>と同時に客先常駐のSIerだったために周りに実はしょぼいことがバレないかいつもビクビクしていたような気がします。</p>

<p>SIerをやめて転職したwebの自社サービスの会社ではチームの中で動くことを覚え、またリーダーという役割を与えられて人に教えるという立場にもなりました。</p>

<p>それでも私よりもすごい人はたくさんいましたし、新人ではないにしろ、「うーん。初級は&hellip;脱したよね？人に教えてるし」というモヤモヤとした感じでした。</p>

<p>その後私にはリーダーには向いていなかったらしく、色々と迷惑をかけた上にやめて受託のweb製作会社に入りました。</p>

<p>そこでオフショアの方達と働く機会があったんですがその人たちのコードは飛び抜けているわけではないにしろ整然としていてとても綺麗にかかれていました。</p>

<p>そしてそのオフショアのリーダークラスの人のコードをみて初めてこう思いました。</p>

<p>「かっこいいなこの（人の）コード。」</p>

<p>綺麗に書いているなと思うことは何度もありました。こうやって書くんだなとか、うまくトンチをきかせてるかコードだな（だいたい汚いけど）とか、そういったコードもたくさん見てきました。</p>

<p>ただかっこいいなと思ったのはその時がはじめてのような気がします。</p>

<p>そして見た瞬間、「ああ、自分は初級から抜け出たのだな。」と思いました。</p>

<p>綺麗だなとか上手いこと書いているなというのは新人でも感じられます。</p>

<p>ただかっこいいなと感じるのは新人では無理ではないでしょうか。</p>

<p>それは過去の様々な経験、自分なりの流儀や見やすく心地よい書き方や設計方法が自分の中で蓄積されて熟成し、コピペではない自分のコードを書けるようになった人。<br/>
そういった人が持つフィルター。自分の世界観が出来て初めて思えるものではないしょうか。</p>

<p>そうやって作り上げた世界観が他の人が作った世界観(あるコード)に触れた時に綺麗だなとかうまくとか思うのではなくかっこいいなと思うのではないでしょうか。</p>

<p>なので新人エンジニアに聞かれたらこう答えます。</p>

<p>他人のソースを見てかっこいいと思えるようになりなさい。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[ロッドホルダーをDIY]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2017/11/12/rod-holder/"/>
        <updated>2017-11-12T18:23:08+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2017/11/12/rod-holder</id>
        <content type="html"><![CDATA[<p>娘が39.5分の熱が出てしまい、週末の予定全てキャンセルです。<br/>
釣りにいけない。どうしようかと思案の末。<br/>
前にスケートボードとサーフボードの棚をDIYしたことがありまして。<br/>
その時に残った木材があったのでロッドホルダー作りに図工2の私が挑戦です。</p>

<!-- more -->


<p></p>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>
<ins class="adsbygoogle"
     style="display:block; text-align:center;"
     data-ad-layout="in-article"
     data-ad-format="fluid"
     data-ad-client="ca-pub-7039502723411845"
     data-ad-slot="8206045005"></ins></p>

<script>  
     (adsbygoogle = window.adsbygoogle || []).push({});  
</script>


<p></p>

<p>２年前に作成したスケートボードホルダー<br/>
<a href="http://yoshitsugufujii.github.io/images/blog/20171112/IMG_3571.jpg" data-lightbox="rod-holder" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20171112/IMG_3571.jpg" style="width: 80%;"><br/>
</a></p>

<p>２年前に作成したサーフボードホルダー<br/>
<a href="http://yoshitsugufujii.github.io/images/blog/20171112/IMG_0446.jpg" data-lightbox="rod-holder" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20171112/IMG_0446.jpg" style="width: 80%;"><br/>
</a></p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20171112/IMG_0447.jpg" data-lightbox="rod-holder" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20171112/IMG_0447.jpg" style="width: 80%;"><br/>
</a></p>

<p>そして余った木材。</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20171112/IMG_2889.jpg" data-lightbox="rod-holder" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20171112/IMG_2889.jpg" style="width: 80%;"><br/>
</a></p>

<p>前回はメルカリに出品されている自作のホルダーを参考にしたので完成予想図がありましたが、今回はないです。<br/>
インパクトと折りたたみノコギリだけで3時間ぐらいかかって完成。<br/>
最初にまったく考えずに作り始めたのが敗因でした。</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20171112/IMG_2895.jpg" data-lightbox="rod-holder" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20171112/IMG_2895.jpg" style="width: 80%;"><br/>
</a></p>

<p>まぁ機能は満たしているかな。</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20171112/rod-holder.png" data-lightbox="rod-holder" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20171112/rod-holder.png" style="width: 80%;"><br/>
</a></p>

<p>塗り終わったらニスとハケは匂いがやばいのでジップロックにいれるといいです。</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20171112/IMG_2905.jpg" data-lightbox="rod-holder" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20171112/IMG_2905.jpg" style="width: 80%;"><br/>
</a></p>

<p>夜になってうまれてはじめて自分でリールにラインを巻いてみました。</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20171112/IMG_2902.jpg" data-lightbox="rod-holder" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20171112/IMG_2902.jpg" style="width: 80%;"><br/>
</a></p>

<p>スプールの上の方にばっかり片寄ってしまうのは何故なのか。</p>

<p>来週こそは釣りに行きたい。</p>
]]></content>
    </entry>
    
</feed>
