<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

    <title><![CDATA[なんとなく日々徒然と]]></title>
    <link href="http://yoshitsugufujii.github.io/atom.xml" rel="self"/>
    <link href="http://yoshitsugufujii.github.io/"/>
    <updated>2015-10-19T18:31:13+09:00</updated>
    <id>http://yoshitsugufujii.github.io/</id>
    <author>
        <name><![CDATA[Yoshitsugu Fujii]]></name>
        
    </author>
    <generator uri="http://octopress.org/">Octopress</generator>

    
    <entry>
        <title type="html"><![CDATA[FaradayとHttpartyでクッキーを付与したい場合]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/10/16/set-cookie-with-faraday-or-httparty/"/>
        <updated>2015-10-16T17:33:25+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/10/16/set-cookie-with-faraday-or-httparty</id>
        <content type="html"><![CDATA[<p>同一ドメインなんだけどホスト名が違うシステムがあり、WEBサーバーからApiサーバーへjsonを取得するべくgetリクエストを投げる。<br/>
その際にWEBサーバーでログイン時に発行されたクッキーをリクエストに付与してapiサーバーではそのクッキーからユーザを特定するような処理が必要になった。</p>

<p>FaradayとHttpartyでクッキーを付与する方法を調べた。</p>

<!-- more -->


<h2>Faraday</h2>

<p><a href="https://github.com/miyagawa/faraday-cookie_jar">miyagawa/faraday-cookie_jar</a>というクッキーをよしなに扱ってくれるみたいですが、特に使わなくてもいけました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">client</span> <span class="o">=</span> <span class="no">Faraday</span><span class="o">.</span><span class="n">new</span> <span class="s1">&#39;http://example.com/api/list&#39;</span> <span class="k">do</span> <span class="o">|</span><span class="n">b</span><span class="o">|</span>
</span><span class='line'>  <span class="n">b</span><span class="o">.</span><span class="n">request</span> <span class="ss">:json</span>
</span><span class='line'>  <span class="n">b</span><span class="o">.</span><span class="n">request</span> <span class="ss">:url_encoded</span>
</span><span class='line'>  <span class="n">b</span><span class="o">.</span><span class="n">adapter</span> <span class="no">Faraday</span><span class="o">.</span><span class="n">default_adapter</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">res</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="n">get</span> <span class="s1">&#39;&#39;</span> <span class="k">do</span> <span class="o">|</span><span class="n">req</span><span class="o">|</span>
</span><span class='line'>  <span class="n">req</span><span class="o">.</span><span class="n">headers</span><span class="o">[</span><span class="s1">&#39;Cookie&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">headers</span><span class="o">[</span><span class="s2">&quot;HTTP_COOKIE&quot;</span><span class="o">]</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="n">res</span><span class="o">.</span><span class="n">body</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Httparty</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="kp">include</span> <span class="no">HTTParty</span>
</span><span class='line'>
</span><span class='line'><span class="nb">self</span><span class="o">.</span><span class="n">default_cookies</span><span class="o">.</span><span class="n">add_cookies</span><span class="p">(</span><span class="n">cookies</span><span class="o">.</span><span class="n">to_h</span><span class="p">)</span>
</span><span class='line'><span class="n">res</span> <span class="o">=</span> <span class="nb">self</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;http://example.com/api/list&#39;</span><span class="p">)</span>
</span><span class='line'><span class="nb">p</span> <span class="n">res</span><span class="o">.</span><span class="n">inspect</span>
</span></code></pre></td></tr></table></div></figure>


<p>お手軽ですね!</p>

<h3>2015年10月19日追記</h3>

<p>Httpartyのヘッダに乗せるタイプ</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="kp">include</span> <span class="no">HTTParty</span>
</span><span class='line'>
</span><span class='line'><span class="n">res</span> <span class="o">=</span> <span class="nb">self</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;http://example.com/api/list&#39;</span><span class="p">,</span> <span class="ss">headers</span><span class="p">:</span> <span class="s2">&quot;Cookie&quot;</span> <span class="o">=&gt;</span> <span class="n">request</span><span class="o">.</span><span class="n">headers</span><span class="o">[</span><span class="s2">&quot;HTTP_COOKIE&quot;</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'><span class="nb">p</span> <span class="n">res</span><span class="o">.</span><span class="n">inspect</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[Go言語を使ってローカルマシンに簡易botを作ってSlackに投稿]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/09/04/golang-bot-for-slack/"/>
        <updated>2015-09-04T17:17:58+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/09/04/golang-bot-for-slack</id>
        <content type="html"><![CDATA[<p>Goを勉強がてら使いながら簡易slackbotを作ってみました。<br/>
slackにデフォルトで用意されているslackbotってお願いしますをキーに登録すると、「お願いします]
とか「お願いします。」(句読点入り)は反応してくれるけど。 「よろしくお願いします。」みたいに単語をつなげると反応してくれない。</p>

<p>単純に単語が含まれるかだけで反応してくれればいいのに・・・</p>

<p>ということもありお手製slackbotをつくってみました。<br/>
自分のPCでプログラムを動かし、slackで投稿があった際にはOutgoing WebHooksで投稿内容を取得してBotとして返信したいと思います。</p>

<p>slack → ローカルmacのbot → slack</p>

<p>の流れです。</p>

<!-- more -->


<p>まずは外から自分のmacを見つけてもらうためにngrokにトンネルしてもらいましょう。<br/>
ngrokの設定とか概要はこちらを見てださい。<br/>
<a href="http://qiita.com/kitaro729/items/44214f9f81d3ebda58bd">ngrokを使用してローカル環境を外部に公開する</a><br/>
普段から最高にお世話になっているサービスです。</p>

<p>Slackの設定です。WebでSlackを開き左のMenuからIntegrationsを選びAll Servicesタブの中からOutgoing WebHooksを選択します。<br/>
新規作成画面のURL(s)にngrokで接続できるurlを設定します。<br/>
channelは新規でtestを。<br/>
Customeize NameにはBotが発言した時の名前が、Cutomize IconにはBotが発言した時のアイコンが設定できます。</p>

<p>これでslackの設定は完了です。</p>

<p>次にgoのプロググラムを動かします。<br/>
もしgoがインストールされてなかったらここ見るといいです。<br/>
<a href="http://qiita.com/morisuke/items/ce04479c1b26d83f4fe3">Golang開発環境 3分クッキング</a><br/>
あとyamlを使うのでyamlのライブラリもいれます。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>go get gopkg.in/yaml.v2</span></code></pre></td></tr></table></div></figure>


<p>goのソースはこんな感じ</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>  <span class="s">&quot;gopkg.in/yaml.v2&quot;</span>
</span><span class='line'>  <span class="s">&quot;io/ioutil&quot;</span>
</span><span class='line'>  <span class="s">&quot;math/rand&quot;</span>
</span><span class='line'>  <span class="s">&quot;net/http&quot;</span>
</span><span class='line'>  <span class="s">&quot;strings&quot;</span>
</span><span class='line'>  <span class="s">&quot;time&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">const</span> <span class="nx">WordTable</span> <span class="p">=</span> <span class="s">&quot;word.yml&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">p</span> <span class="p">=</span> <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">Serve</span><span class="p">(</span><span class="nx">w</span> <span class="nx">http</span><span class="p">.</span><span class="nx">ResponseWriter</span><span class="p">,</span> <span class="nx">r</span> <span class="o">*</span><span class="nx">http</span><span class="p">.</span><span class="nx">Request</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">r</span><span class="p">.</span><span class="nx">Method</span> <span class="o">==</span> <span class="s">&quot;POST&quot;</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">text</span> <span class="o">:=</span> <span class="nx">r</span><span class="p">.</span><span class="nx">FormValue</span><span class="p">(</span><span class="s">&quot;text&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="nx">user_name</span> <span class="o">:=</span> <span class="nx">r</span><span class="p">.</span><span class="nx">FormValue</span><span class="p">(</span><span class="s">&quot;user_name&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">if</span> <span class="nx">user_name</span> <span class="o">!=</span> <span class="s">&quot;slackbot&quot;</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">p</span><span class="p">(</span><span class="s">&quot;user_name:&quot;</span><span class="p">,</span> <span class="nx">user_name</span><span class="p">)</span>
</span><span class='line'>          <span class="nx">return_text</span> <span class="o">:=</span> <span class="nx">detect_word</span><span class="p">(</span><span class="nx">text</span><span class="p">)</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Fprintf</span><span class="p">(</span><span class="nx">w</span><span class="p">,</span> <span class="s">&quot;{\&quot;text\&quot;: \&quot;%s\&quot;}&quot;</span><span class="p">,</span> <span class="nx">return_text</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">getWordTable</span><span class="p">()</span> <span class="kd">map</span><span class="p">[</span><span class="kt">string</span><span class="p">][]</span><span class="kt">string</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">buf</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">ioutil</span><span class="p">.</span><span class="nx">ReadFile</span><span class="p">(</span><span class="nx">WordTable</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>      <span class="nb">panic</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">m</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">map</span><span class="p">[</span><span class="kt">string</span><span class="p">][]</span><span class="kt">string</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">err</span> <span class="p">=</span> <span class="nx">yaml</span><span class="p">.</span><span class="nx">Unmarshal</span><span class="p">(</span><span class="nx">buf</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">m</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>      <span class="nb">panic</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="nx">m</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">keys</span><span class="p">(</span><span class="nx">words</span> <span class="kd">map</span><span class="p">[</span><span class="kt">string</span><span class="p">][]</span><span class="kt">string</span><span class="p">)</span> <span class="p">[]</span><span class="kt">string</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">keys</span> <span class="p">[]</span><span class="kt">string</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">for</span> <span class="nx">key</span><span class="p">,</span> <span class="nx">_</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">words</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">keys</span> <span class="p">=</span> <span class="nb">append</span><span class="p">(</span><span class="nx">keys</span><span class="p">,</span> <span class="nx">key</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">keys</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">detect_word</span><span class="p">(</span><span class="nx">post_text</span> <span class="kt">string</span><span class="p">)</span> <span class="p">(</span><span class="nx">bot_message</span> <span class="kt">string</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">dict</span> <span class="o">:=</span> <span class="nx">getWordTable</span><span class="p">()</span>  <span class="c1">// 設定を取得</span>
</span><span class='line'>  <span class="nx">word_keys</span> <span class="o">:=</span> <span class="nx">keys</span><span class="p">(</span><span class="nx">dict</span><span class="p">)</span> <span class="c1">// キーのみ抽出</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">suggestion</span> <span class="p">[]</span><span class="kt">string</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="nb">len</span><span class="p">(</span><span class="nx">word_keys</span><span class="p">);</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">strings</span><span class="p">.</span><span class="nx">Contains</span><span class="p">(</span><span class="nx">post_text</span><span class="p">,</span> <span class="nx">word_keys</span><span class="p">[</span><span class="nx">i</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">suggestion</span> <span class="p">=</span> <span class="nb">append</span><span class="p">(</span><span class="nx">suggestion</span><span class="p">,</span> <span class="nx">dict</span><span class="p">[</span><span class="nx">word_keys</span><span class="p">[</span><span class="nx">i</span><span class="p">]]</span><span class="o">...</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="nx">suggestion</span><span class="p">)</span> <span class="p">&gt;</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">rand</span><span class="p">.</span><span class="nx">Seed</span><span class="p">(</span><span class="nx">time</span><span class="p">.</span><span class="nx">Now</span><span class="p">().</span><span class="nx">UnixNano</span><span class="p">())</span>
</span><span class='line'>      <span class="nx">bot_message</span> <span class="p">=</span> <span class="nx">suggestion</span><span class="p">[</span><span class="nx">rand</span><span class="p">.</span><span class="nx">Intn</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="nx">suggestion</span><span class="p">))]</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">bot_message</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">http</span><span class="p">.</span><span class="nx">HandleFunc</span><span class="p">(</span><span class="s">&quot;/&quot;</span><span class="p">,</span> <span class="nx">Serve</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">http</span><span class="p">.</span><span class="nx">ListenAndServe</span><span class="p">(</span><span class="s">&quot;:8080&quot;</span><span class="p">,</span> <span class="kc">nil</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>プログラムの中でソースと同一ディレクトリにあるword.ymlを読み出しています。<br/>
これはslackでの発言と反応をまとめたyamlファイルです。<br/>
発言にひっかけたい文字列をキーに、反応を配列形式で設定します。<br/>
こんな感じです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">お願いします</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">こちらこそよろしく頼む</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">えーっ、やだよ</span>
</span><span class='line'><span class="l-Scalar-Plain">よろしいでしょうか</span><span class="p-Indicator">:</span> <span class="nl">&amp;yoro</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">許さん</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">金による</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">いいですか</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="nv">*yoro</span>
</span></code></pre></td></tr></table></div></figure>


<p>では<code>fresh</code>起動しましょう。<br/>
testチャンネルでつぶやいてみます。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/2015-09-04.png" alt="slackbot" /></p>

<p>おお、できました！<br/>
ゴルーチンとかチャネルとかまだあんまりよくわかってないので引き続き勉強していきたいと思います。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[VagrantとItamaeを使って5分でmysqlサーバー構築]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/08/27/vagrant-mysql/"/>
        <updated>2015-08-27T15:42:59+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/08/27/vagrant-mysql</id>
        <content type="html"><![CDATA[<p>普段はほぼモノシリックなサービスしか開発していないんだけど、去年の暮れぐらいからちょくちょく関わらせている案件がマイクロサービスで、新しい人が入るということで構築手順のまとめがてらVagrant + Itamaeで環境構築してみた。</p>

<p>複数サーバーインスタンスを立ち上げて、各サーバーから一つのmysqlに接続できたらいいな。 (この構成ならdockerでやれという話もあるけど。先にvagrantを勉強してみたかったので）</p>

<p>とりあえず192.168.55.55で接続可能なmysqlのvagrant(なんていうんだろう。dockerだとコンテナに相当するやつ)を作成してみます。</p>

<!-- more -->




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vagrant init
</span><span class='line'>vagrant plugin install vagrant-itamae</span></code></pre></td></tr></table></div></figure>


<p><code>vagrant init</code>して作成されたVagrantfileを編集します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># -*- mode: ruby -*-</span>
</span><span class='line'><span class="c1"># vi: set ft=ruby :</span>
</span><span class='line'>
</span><span class='line'><span class="no">Vagrant</span><span class="o">.</span><span class="n">configure</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">box</span> <span class="o">=</span> <span class="s2">&quot;centos65&quot;</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">box_url</span> <span class="o">=</span> <span class="s2">&quot;https://github.com/2creatives/vagrant-centos/releases/download/v6.5.3/centos65-x86_64-20140116.box&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">define</span> <span class="s2">&quot;db&quot;</span> <span class="k">do</span> <span class="o">|</span><span class="n">db</span><span class="o">|</span>
</span><span class='line'>    <span class="n">db</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">hostname</span> <span class="o">=</span> <span class="s2">&quot;db&quot;</span>
</span><span class='line'>    <span class="n">db</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">network</span> <span class="ss">:private_network</span><span class="p">,</span> <span class="ss">ip</span><span class="p">:</span> <span class="s2">&quot;192.168.55.55&quot;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provision</span> <span class="ss">:itamae</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>      <span class="n">config</span><span class="o">.</span><span class="n">sudo</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'>      <span class="n">config</span><span class="o">.</span><span class="n">recipes</span> <span class="o">=</span> <span class="o">[</span><span class="s1">&#39;./recipe.rb&#39;</span><span class="o">]</span>
</span><span class='line'>      <span class="n">config</span><span class="o">.</span><span class="n">json</span> <span class="o">=</span> <span class="s1">&#39;./node.json&#39;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">ssh</span><span class="o">.</span><span class="n">forward_agent</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Itameのレシピ<br/>
Vagrantfileと同じディレクトリにrecipe.rbという名称でおきます。</p>

<figure class='code'><figcaption><span>recipe.rb </span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">package</span> <span class="s2">&quot;epel-release&quot;</span>
</span><span class='line'><span class="n">package</span> <span class="s2">&quot;gcc&quot;</span>
</span><span class='line'><span class="n">package</span> <span class="s2">&quot;openssl-devel&quot;</span>
</span><span class='line'><span class="n">package</span> <span class="s2">&quot;libyaml-devel&quot;</span>
</span><span class='line'><span class="n">package</span> <span class="s2">&quot;readline-devel&quot;</span>
</span><span class='line'><span class="n">package</span> <span class="s2">&quot;zlib-devel&quot;</span>
</span><span class='line'><span class="n">package</span> <span class="s2">&quot;vim&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># mysql</span>
</span><span class='line'><span class="n">package</span> <span class="s1">&#39;http://dev.mysql.com/get/mysql-community-release-el6-5.noarch.rpm&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">not_if</span> <span class="s1">&#39;rpm -q mysql-community-release-el6-5&#39;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="sx">%w( mysql-community-server mysql-community-devel )</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">pkg</span><span class="o">|</span>
</span><span class='line'>  <span class="n">package</span> <span class="n">pkg</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">utf8mb4_settting</span> <span class="o">=</span> <span class="o">&lt;&lt;</span><span class="sh">&quot;</span><span class="no">EOS</span><span class="sh">&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="sh">[mysqld]</span>
</span><span class='line'><span class="sh">character-set-server = utf8mb4</span>
</span><span class='line'><span class="sh">character-set-client-handshake  = FALSE</span>
</span><span class='line'><span class="sh">character_set_server            = utf8mb4</span>
</span><span class='line'><span class="sh">collation_server                = utf8mb4_unicode_ci</span>
</span><span class='line'><span class="sh">innodb_file_format = Barracuda</span>
</span><span class='line'><span class="sh">innodb_file_per_table = 1</span>
</span><span class='line'><span class="sh">innodb_large_prefix</span>
</span><span class='line'>
</span><span class='line'><span class="sh">[client]</span>
</span><span class='line'><span class="sh">default-character-set=utf8mb4</span>
</span><span class='line'>
</span><span class='line'><span class="no">EOS</span>
</span><span class='line'>
</span><span class='line'><span class="n">execute</span> <span class="s2">&quot;set db charset to utf8mb4&quot;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">command</span> <span class="o">&lt;&lt;-</span><span class="no">EOF</span>
</span><span class='line'><span class="sh">    echo &#39;#{utf8mb4_settting}&#39; &gt;&gt; /etc/my.cnf</span>
</span><span class='line'><span class="no">  EOF</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">service</span> <span class="s1">&#39;mysqld&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">action</span> <span class="o">[</span><span class="ss">:start</span><span class="p">,</span> <span class="ss">:enable</span><span class="o">]</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">execute</span> <span class="s2">&quot;allow remote host access&quot;</span> <span class="k">do</span>
</span><span class='line'>  <span class="c1"># MySQLにリモートホストから接続できるようにする</span>
</span><span class='line'>  <span class="n">command</span> <span class="s2">&quot;mysql -e </span><span class="se">\&quot;</span><span class="s2">grant all privileges on *.* to root@&#39;192.168.%&#39;</span><span class="se">\&quot;</span><span class="s2">&quot;</span><span class="p">;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>レシピから参照するnode<br/>
これもVagrantfileと同じ場所にnode.jsonという名前でおきます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s2">&quot;mysql&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;password&quot;</span><span class="o">:</span> <span class="s2">&quot;&quot;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>そしたらvagrantを起動しましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vagrant up
</span></code></pre></td></tr></table></div></figure>


<p>無事に起動したらItamaeで環境構築です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vagrant provision
</span></code></pre></td></tr></table></div></figure>


<p>無事に終了したらホストから接続してみます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mysql -uroot -h 192.168.55.55
</span></code></pre></td></tr></table></div></figure>


<p>で繋がれば完成です。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[Axlsxでセルの中の斜線を引く]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/07/28/axlsx-diagonal-border/"/>
        <updated>2015-07-28T18:55:24+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/07/28/axlsx-diagonal-border</id>
        <content type="html"><![CDATA[<p>またまた中々見つけられなかったテクニック。<br/>
セルの内部に斜線をひくです。</p>

<p>連日の調査で疲れます。</p>

<!-- more -->


<p>さくっと結論です。<br/>
edgesにdiagonalを指定して、diagonal_upかdiagonal_downにtrueを指定するです。<br/>
edgesにdiagonalを指定しろなんてどこにも書いてなかったので大変でした。</p>

<p>コードにするとこうです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;axlsx&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">package</span> <span class="o">=</span> <span class="no">Axlsx</span><span class="o">::</span><span class="no">Package</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">sheet</span> <span class="o">=</span> <span class="n">package</span><span class="o">.</span><span class="n">workbook</span><span class="o">.</span><span class="n">add_worksheet</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s1">&#39;lists&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">diagonal_up</span> <span class="o">=</span> <span class="n">sheet</span><span class="o">.</span><span class="n">styles</span><span class="o">.</span><span class="n">add_style</span><span class="p">(</span>
</span><span class='line'>                              <span class="p">{</span>
</span><span class='line'>                               <span class="ss">:border</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>                                 <span class="ss">:edges</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="ss">:diagonal</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>                                 <span class="ss">:color</span> <span class="o">=&gt;</span> <span class="s2">&quot;000000&quot;</span><span class="p">,</span>
</span><span class='line'>                                 <span class="ss">:style</span> <span class="o">=&gt;</span> <span class="ss">:thin</span><span class="p">,</span>
</span><span class='line'>                                 <span class="ss">diagonal_up</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'>                               <span class="p">}</span>
</span><span class='line'>                              <span class="p">}</span>
</span><span class='line'>                            <span class="p">)</span>
</span><span class='line'><span class="n">diagonal_down</span> <span class="o">=</span> <span class="n">sheet</span><span class="o">.</span><span class="n">styles</span><span class="o">.</span><span class="n">add_style</span><span class="p">(</span>
</span><span class='line'>                              <span class="p">{</span>
</span><span class='line'>                               <span class="ss">:border</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>                                 <span class="ss">:edges</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="ss">:diagonal</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>                                 <span class="ss">:color</span> <span class="o">=&gt;</span> <span class="s2">&quot;000000&quot;</span><span class="p">,</span>
</span><span class='line'>                                 <span class="ss">:style</span> <span class="o">=&gt;</span> <span class="ss">:thin</span><span class="p">,</span>
</span><span class='line'>                                 <span class="ss">diagonal_down</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'>                                <span class="p">}</span>
</span><span class='line'>                              <span class="p">}</span>
</span><span class='line'>                            <span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">diagonal_both</span> <span class="o">=</span> <span class="n">sheet</span><span class="o">.</span><span class="n">styles</span><span class="o">.</span><span class="n">add_style</span><span class="p">(</span>
</span><span class='line'>                              <span class="p">{</span>
</span><span class='line'>                               <span class="ss">:border</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>                                 <span class="ss">:edges</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="ss">:diagonal</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>                                 <span class="ss">:color</span> <span class="o">=&gt;</span> <span class="s2">&quot;000000&quot;</span><span class="p">,</span>
</span><span class='line'>                                 <span class="ss">:style</span> <span class="o">=&gt;</span> <span class="ss">:thin</span><span class="p">,</span>
</span><span class='line'>                                 <span class="ss">diagonal_down</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span>
</span><span class='line'>                                 <span class="ss">diagonal_up</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'>                               <span class="p">}</span>
</span><span class='line'>                              <span class="p">}</span>
</span><span class='line'>                            <span class="p">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">add_row</span><span class="p">(</span><span class="o">[</span><span class="s1">&#39;斜線1&#39;</span><span class="o">]</span><span class="p">,</span> <span class="ss">style</span><span class="p">:</span> <span class="n">diagonal_up</span><span class="p">)</span>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">add_row</span><span class="p">(</span><span class="o">[</span><span class="s1">&#39;&#39;</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">add_row</span><span class="p">(</span><span class="o">[</span><span class="s1">&#39;斜線2&#39;</span><span class="o">]</span><span class="p">,</span> <span class="ss">style</span><span class="p">:</span> <span class="n">diagonal_down</span><span class="p">)</span>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">add_row</span><span class="p">(</span><span class="o">[</span><span class="s1">&#39;&#39;</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">add_row</span><span class="p">(</span><span class="o">[</span><span class="s1">&#39;斜線3&#39;</span><span class="o">]</span><span class="p">,</span> <span class="ss">style</span><span class="p">:</span> <span class="n">diagonal_both</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">package</span><span class="o">.</span><span class="n">serialize</span><span class="p">(</span><span class="s1">&#39;test.xlsx&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://yoshitsugufujii.github.io/images/blog/2015-07-28.png" alt="Axlsx border diagonal" /></p>

<p>もしくはこれでもいけます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;axlsx&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">package</span> <span class="o">=</span> <span class="no">Axlsx</span><span class="o">::</span><span class="no">Package</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">sheet</span> <span class="o">=</span> <span class="n">package</span><span class="o">.</span><span class="n">workbook</span><span class="o">.</span><span class="n">add_worksheet</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s1">&#39;lists&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">diagonal_style</span> <span class="o">=</span> <span class="n">sheet</span><span class="o">.</span><span class="n">styles</span><span class="o">.</span><span class="n">add_style</span><span class="p">(</span>
</span><span class='line'>                              <span class="p">{</span>
</span><span class='line'>                               <span class="ss">:border</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>                                 <span class="ss">:edges</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="ss">:left</span><span class="p">,</span> <span class="ss">:right</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>                                 <span class="ss">:color</span> <span class="o">=&gt;</span> <span class="s2">&quot;000000&quot;</span><span class="p">,</span>
</span><span class='line'>                                 <span class="ss">:style</span> <span class="o">=&gt;</span> <span class="ss">:thin</span>
</span><span class='line'>                               <span class="p">}</span>
</span><span class='line'>                              <span class="p">}</span>
</span><span class='line'>                            <span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">br</span> <span class="o">=</span> <span class="n">package</span><span class="o">.</span><span class="n">workbook</span><span class="o">.</span><span class="n">styles</span><span class="o">.</span><span class="n">borders</span><span class="o">[</span><span class="n">package</span><span class="o">.</span><span class="n">workbook</span><span class="o">.</span><span class="n">styles</span><span class="o">.</span><span class="n">cellXfs</span><span class="o">[</span><span class="n">diagonal_style</span><span class="o">].</span><span class="n">borderId</span><span class="o">]</span>
</span><span class='line'><span class="n">br</span><span class="o">.</span><span class="n">diagonalUp</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'><span class="n">br</span><span class="o">.</span><span class="n">diagonalDown</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'><span class="n">br</span><span class="o">.</span><span class="n">prs</span> <span class="o">&lt;&lt;</span> <span class="no">Axlsx</span><span class="o">::</span><span class="no">BorderPr</span><span class="o">.</span><span class="n">new</span><span class="p">(</span>
</span><span class='line'>  <span class="nb">name</span><span class="p">:</span> <span class="ss">:diagonal</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">color</span><span class="p">:</span> <span class="no">Axlsx</span><span class="o">::</span><span class="no">Color</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">rgb</span><span class="p">:</span> <span class="s1">&#39;000000&#39;</span><span class="p">),</span>
</span><span class='line'>  <span class="ss">style</span><span class="p">:</span> <span class="ss">:thin</span><span class="p">,</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">add_row</span><span class="p">(</span><span class="o">[</span><span class="s1">&#39;斜め線をひく&#39;</span><span class="o">]</span><span class="p">,</span> <span class="ss">style</span><span class="p">:</span> <span class="n">diagonal_style</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">package</span><span class="o">.</span><span class="n">serialize</span><span class="p">(</span><span class="s1">&#39;test.xlsx&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[Axlsxで縦書き]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/07/27/orientation-xlvertical-with-axlsx/"/>
        <updated>2015-07-27T18:19:53+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/07/27/orientation-xlvertical-with-axlsx</id>
        <content type="html"><![CDATA[<p>Axlsxでセルの内容を縦書きにする方法がわかったので日記に記します。<br/>
セルに角度を付ける方法は見つかったんですが、縦書きにする方法が全然見つからずかなりはまりました。</p>

<!-- more -->


<p>VBAだと縦書きはこう設定できますね。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='vbnet'><span class='line'><span class="n">Range</span><span class="p">(</span><span class="s">&quot;D2&quot;</span><span class="p">).</span><span class="n">Orientation</span> <span class="o">=</span> <span class="n">xlVertical</span>
</span></code></pre></td></tr></table></div></figure>


<p>色々と調べて、xlVerticalの値である-4166をセットしていしてみたりしましたがなかなかうまくゆかず。<br/>
色々と検索して、最終的にcellXfsというキーワードからなぜか<a href="http://bbs.wankuma.com/index.cgi?mode=al2&amp;namber=5358&amp;KLOG=15">C# vb.netの質問掲示板</a>で発見しましした(圧倒的感謝!)<br/>
textRotationを255を指定すればいけるそうです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;axlsx&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">package</span> <span class="o">=</span> <span class="no">Axlsx</span><span class="o">::</span><span class="no">Package</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">sheet</span> <span class="o">=</span> <span class="n">package</span><span class="o">.</span><span class="n">workbook</span><span class="o">.</span><span class="n">add_worksheet</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s1">&#39;lists&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">vertical_text</span> <span class="o">=</span> <span class="n">sheet</span><span class="o">.</span><span class="n">styles</span><span class="o">.</span><span class="n">add_style</span><span class="p">(</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="ss">alignment</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="ss">horizontal</span><span class="p">:</span> <span class="ss">:center</span><span class="p">,</span>
</span><span class='line'>        <span class="ss">vertical</span><span class="p">:</span> <span class="ss">:center</span> <span class="p">,</span>
</span><span class='line'>        <span class="ss">textRotation</span><span class="p">:</span> <span class="mi">255</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">add_row</span><span class="p">(</span><span class="o">[</span><span class="s1">&#39;とっても長いテキスト&#39;</span><span class="p">,</span> <span class="s1">&#39;短いテキスト&#39;</span><span class="o">]</span><span class="p">,</span> <span class="ss">style</span><span class="p">:</span> <span class="n">vertical_text</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">package</span><span class="o">.</span><span class="n">serialize</span><span class="p">(</span><span class="s1">&#39;test.xlsx&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>できないのかもと本気で諦めかけていたので出来た時には変な声がでてしまいました。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/2015-07-27.png" alt="Axlsx Orientaion xlVertical" /></p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[railsでckeditorを使った場合、横幅大きい画像が800pxになってしまう現象]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/07/22/ckeditor-big-width-800px-even/"/>
        <updated>2015-07-22T12:08:58+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/07/22/ckeditor-big-width-800px-even</id>
        <content type="html"><![CDATA[<p><a href="https://github.com/galetahub/ckeditor">ckeditor</a>でサイズの大きい画像(800px以上の幅の画像)が一様に800pxになってしまう問題。<br/>
gemのckeditorで</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rails generate ckeditor:install --orm<span class="o">=</span>active_record --backend<span class="o">=</span>carrierwavea
</span></code></pre></td></tr></table></div></figure>


<p>とかやってそのままデフォで使うと画像の最大サイズが800pxになります。</p>

<!-- more -->


<p></p>

<p>なんでかなーと思って調べてみたら、画像のサイズは生成されるcarrierwaveのuploaderクラスのversion contentの値を使うらしくここが800がデフォルトになっているからでした。<br/>
<a href="https://github.com/galetahub/ckeditor/blob/master/lib/generators/ckeditor/templates/base/carrierwave/uploaders/ckeditor_picture_uploader.rb#L39">ckeditor_picture_uploader.rb#L39</a></p>

<p>ここの値を変更することで800px制限を解除できます。私は2400pxとかやって逃げました。</p>

<figure class='code'><figcaption><span>app/uploaders/ckeditor_picture_uploader.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="n">version</span> <span class="ss">:content</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">process</span> <span class="ss">resize_to_limit</span><span class="p">:</span> <span class="o">[</span><span class="mi">2400</span><span class="p">,</span> <span class="mi">2400</span><span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[railsでckeditorにplugin追加]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/07/21/pckeditor_add_plugin/"/>
        <updated>2015-07-21T10:33:15+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/07/21/pckeditor_add_plugin</id>
        <content type="html"><![CDATA[<p>ckeditorで作成したinputがsubmitした時にemptyだったらエラーを出したい。<br/>
いろいろ検索しましたが有用な情報がなく、inputにCKEDITOR.stylesSet.addでクラスを設定する方法もうまくいかず、若干途方に暮れましたが、プラグイン<a href="http://ckeditor.com/addon/html5validation">html5validation</a>をいれることで対応することにしました。</p>

<p>導入手順です。</p>

<!-- more -->


<p><a href="http://ckeditor.com/addon/html5validation">ここ</a>のページからDownloadを押してダウンロードします。<br/>
落としたzipを解凍して、app/assets/javascripts/ckeditor/pluginsディレクトリを作成して解凍したディレクトリごと放り込みます。</p>

<p>次に日本語化します。<br/>
app/assets/javascripts/ckeditor/plugins/html5validation/langにja.jsを作ります。<br/>
中身はこんな感じですかね。</p>

<figure class='code'><figcaption><span>app/assets/javascripts/ckeditor/plugins/html5validation/lang/ja.js</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm">Copyright (c) 2015, Total Web Services. All rights reserved.</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="nx">CKEDITOR</span><span class="p">.</span><span class="nx">plugins</span><span class="p">.</span><span class="nx">setLang</span><span class="p">(</span><span class="s1">&#39;html5validation&#39;</span><span class="p">,</span> <span class="s1">&#39;ja&#39;</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">patternLabel</span><span class="o">:</span> <span class="s1">&#39;検証パターン&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">requiredLabel</span><span class="o">:</span> <span class="s1">&#39;必須?&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">validationTabTitle</span><span class="o">:</span> <span class="s1">&#39;値の検証&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">novalidateLabel</span><span class="o">:</span> <span class="s1">&#39;HTML5 Validationを無効にする&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">sampleTwitterUsername</span><span class="o">:</span>  <span class="s1">&#39;ツイッターユーザ名のサンプル: ^[A-Za-z0-9_]{1,15}$&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">samplePhonePattern</span><span class="o">:</span> <span class="s1">&#39;アメリカの電話番号のサンプル: \d{3}[\-]\d{3}[\-]\d{4}&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">sampleZipCode</span><span class="o">:</span> <span class="s1">&#39;&lt;p&gt;アメリカの住所のサンプル: (\d{5}([\-]\d{4})?)&lt;/p&gt;&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">html5patternLink</span><span class="o">:</span> <span class="s1">&#39;&lt;p&gt;他のHTML5 Validation patterns を探す &lt;a href=&quot;http://html5pattern.com/&quot; title=&quot;HTML5 Pattern&quot;&gt;html5pattern.com&lt;/a&gt;&lt;/p&gt;&#39;</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>次に言語を追加します。<br/>
app/assets/javascripts/ckeditor/plugins/html5validation/plugin.jsを開いて8行目のlangにjaを足します。</p>

<figure class='code'><figcaption><span>app/assets/javascripts/ckeditor/plugins/html5validation/plugin.js</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * @license Copyright (c) 2015, Total Web Services. All rights reserved.</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nx">CKEDITOR</span><span class="p">.</span><span class="nx">plugins</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="s1">&#39;html5validation&#39;</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">icons</span><span class="o">:</span> <span class="kc">false</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">lang</span><span class="o">:</span> <span class="s1">&#39;ja,en,fr,es,ru,it&#39;</span><span class="p">,</span> <span class="c1">// ここにjaを追加</span>
</span><span class='line'>  <span class="nx">init</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">editor</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">lang</span> <span class="o">=</span> <span class="nx">editor</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">html5validation</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">editor</span><span class="p">.</span><span class="nx">filter</span><span class="p">.</span><span class="nx">allow</span><span class="p">(</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">textarea</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">attributes</span><span class="o">:</span> <span class="s1">&#39;required,pattern&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">propertiesOnly</span><span class="o">:</span> <span class="kc">true</span>
</span><span class='line'>       <span class="p">},</span>
</span><span class='line'>       <span class="nx">input</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">attributes</span><span class="o">:</span> <span class="s1">&#39;required,pattern&#39;</span><span class="p">,</span>
</span></code></pre></td></tr></table></div></figure>


<p>次にconfig.jsに追記します。</p>

<figure class='code'><figcaption><span>app/assets/javascripts/ckeditor/config.js</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">CKEDITOR</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">extraPlugins</span> <span class="o">=</span> <span class="s1">&#39;html5validation&#39;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>他にも追加したいpluginがある場合はカンマ区切りで指定するみたいです。<br/>
これで準備は完成です。ckeditorでformを作ろうとするか、既存のformを選択して右クリックしてフォームのプロパティで<br/>
必須が設定できるようになっているかと思います</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/2015-07-21_2.png" alt="完成イメージ" /></p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/2015-07-21.png" alt="完成イメージ" /></p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[Bootstrap FileInputで日本語の文字が表示されない]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/07/17/bootstrap-file-input-for-japanese/"/>
        <updated>2015-07-17T13:46:05+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/07/17/bootstrap-file-input-for-japanese</id>
        <content type="html"><![CDATA[<p>今の案件で<a href="http://plugins.krajee.com/file-input">Bootstrap FileInput</a>を使っていますが、日本語(2byte文字)が含まれるファイルを選択した場合ファイル名から日本語部分が消えるという現象が発生しました。</p>

<p><a href="https://github.com/kartik-v/bootstrap-fileinput/blob/master/js/fileinput.js#L496">https://github.com/kartik-v/bootstrap-fileinput/blob/master/js/fileinput.js#L496</a><br/>
ここを見る限りslugCallbackというメソッドを宣言時のoptionに渡してあげるといけそうです。</p>

<!-- more -->


<p>すいません。coffeescriptです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;.upload_file&#39;</span><span class="p">).</span><span class="nx">fileinput</span>
</span><span class='line'>  <span class="nx">showPreview</span><span class="o">:</span> <span class="kc">false</span>
</span><span class='line'>  <span class="nx">maxFileCount</span><span class="o">:</span> <span class="mi">1</span>
</span><span class='line'>  <span class="nx">browseClass</span><span class="o">:</span> <span class="s1">&#39;btn btn-info fileinput-browse-button&#39;</span>
</span><span class='line'>  <span class="nx">browseIcon</span><span class="o">:</span> <span class="s1">&#39;&#39;</span>
</span><span class='line'>  <span class="nx">browseLabel</span><span class="o">:</span> <span class="s1">&#39; ファイル選択&#39;</span>
</span><span class='line'>  <span class="nx">showRemove</span><span class="o">:</span> <span class="kc">false</span>
</span><span class='line'>  <span class="nx">showUpload</span><span class="o">:</span> <span class="kc">false</span>
</span><span class='line'>  <span class="nx">slugCallback</span><span class="o">:</span>
</span><span class='line'>    <span class="p">(</span><span class="nx">text</span><span class="p">)</span><span class="o">-&gt;</span>
</span><span class='line'>      <span class="nx">text</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="sr">/(\\|\/)/g</span><span class="p">).</span><span class="nx">pop</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>これで日本語も表示できるようになりました。<br/>
<img src="http://yoshitsugufujii.github.io/images/blog/2015-07-17%2013.52.17.png" alt="完成イメージ" /></p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[ckeditorのテーブルのデフォルト値を変更]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/07/15/ckeditor-table-width/"/>
        <updated>2015-07-15T16:56:33+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/07/15/ckeditor-table-width</id>
        <content type="html"><![CDATA[<p>相変わらず使わせてもらってます。<a href="https://github.com/galetahub/ckeditor">ckeditor</a><br/>
デフォルトでテーブルのサイズが500pxとなっておりますが、スマートフォンでも表示する必要がありこれを100%にしたくてしらべました。<br/>
ついでに邪魔なのでborderとcellspacingの値も0にしちゃいましょう。</p>

<!-- more -->




<figure class='code'><figcaption><span>app/assets/javascripts/ckeditor/config.js</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">CKEDITOR</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span> <span class="s1">&#39;dialogDefinition&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span> <span class="nx">ev</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">dialogName</span> <span class="o">=</span> <span class="nx">ev</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">name</span><span class="p">;</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">dialogDefinition</span> <span class="o">=</span> <span class="nx">ev</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">definition</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span> <span class="nx">dialogName</span> <span class="o">==</span> <span class="s1">&#39;table&#39;</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">info</span> <span class="o">=</span> <span class="nx">dialogDefinition</span><span class="p">.</span><span class="nx">getContents</span><span class="p">(</span> <span class="s1">&#39;info&#39;</span> <span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">info</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span> <span class="s1">&#39;txtWidth&#39;</span> <span class="p">)[</span> <span class="s1">&#39;default&#39;</span> <span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;100%&#39;</span><span class="p">;</span>
</span><span class='line'>        <span class="nx">info</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span> <span class="s1">&#39;txtBorder&#39;</span> <span class="p">)[</span> <span class="s1">&#39;default&#39;</span> <span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;0&#39;</span><span class="p">;</span>
</span><span class='line'>        <span class="nx">info</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span> <span class="s1">&#39;txtCellSpace&#39;</span> <span class="p">)[</span> <span class="s1">&#39;default&#39;</span> <span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;0&#39;</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>テーブルダイアログが初期値で幅100%、枠線の幅0、セル内余白0になっているのが確認できます。<br/>
<img src="http://yoshitsugufujii.github.io/images/blog/2015-07-15%2017.00.59.png" alt="完成イメージ" /></p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[Axlsxでセルのなかのテキストに部分的にスタイルを当てる]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/07/14/partially-change-string-style-in-cell-with-axlsx/"/>
        <updated>2015-07-14T20:28:04+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/07/14/partially-change-string-style-in-cell-with-axlsx</id>
        <content type="html"><![CDATA[<p>Axlsxでセルの中の文字にスタイルをあてる方法です 。<br/>
Axlsx::RichTextを使います。<br/>
太字、斜体、打ち消し戦、アンダーライン、色変更に対応しております。</p>

<!-- more -->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">p</span> <span class="o">=</span> <span class="no">Axlsx</span><span class="o">::</span><span class="no">Package</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="nb">p</span><span class="o">.</span><span class="n">use_shared_strings</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'><span class="n">wb</span> <span class="o">=</span> <span class="nb">p</span><span class="o">.</span><span class="n">workbook</span>
</span><span class='line'><span class="n">wrap_text</span> <span class="o">=</span> <span class="n">wb</span><span class="o">.</span><span class="n">styles</span><span class="o">.</span><span class="n">add_style</span><span class="p">({</span><span class="ss">:alignment</span> <span class="o">=&gt;</span> <span class="p">{</span><span class="ss">:horizontal</span> <span class="o">=&gt;</span> <span class="ss">:center</span><span class="p">,</span> <span class="ss">:vertical</span> <span class="o">=&gt;</span> <span class="ss">:center</span><span class="p">,</span> <span class="ss">:wrap_text</span> <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">}}</span>  <span class="p">)</span>
</span><span class='line'><span class="n">rt</span> <span class="o">=</span> <span class="no">Axlsx</span><span class="o">::</span><span class="no">RichText</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">rt</span><span class="o">.</span><span class="n">add_run</span><span class="p">(</span><span class="s1">&#39;I\&#39;m bold, &#39;</span><span class="p">,</span> <span class="ss">:b</span> <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">)</span>
</span><span class='line'><span class="n">rt</span><span class="o">.</span><span class="n">add_run</span><span class="p">(</span><span class="s1">&#39;I\&#39;m italic, &#39;</span><span class="p">,</span> <span class="ss">:i</span> <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">)</span>
</span><span class='line'><span class="n">rt</span><span class="o">.</span><span class="n">add_run</span><span class="p">(</span><span class="s1">&#39;I\&#39;m strike&#39;</span> <span class="o">+</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">,</span> <span class="ss">:strike</span> <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">)</span>
</span><span class='line'><span class="n">rt</span><span class="o">.</span><span class="n">add_run</span><span class="p">(</span><span class="s1">&#39;I\&#39;m bold, italic and strike&#39;</span> <span class="o">+</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">,</span> <span class="ss">:b</span> <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">,</span> <span class="ss">:i</span> <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">,</span> <span class="ss">:strike</span> <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">)</span>
</span><span class='line'><span class="n">rt</span><span class="o">.</span><span class="n">add_run</span><span class="p">(</span><span class="s1">&#39;I\&#39;m style-less :D&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">rt</span><span class="o">.</span><span class="n">add_run</span><span class="p">(</span><span class="s1">&#39;underlined and red.&#39;</span><span class="p">,</span> <span class="ss">:u</span> <span class="o">=&gt;</span> <span class="ss">:double</span><span class="p">,</span> <span class="ss">:color</span> <span class="o">=&gt;</span> <span class="s1">&#39;FF0000&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">wb</span><span class="o">.</span><span class="n">add_worksheet</span><span class="p">(</span><span class="ss">:name</span> <span class="o">=&gt;</span> <span class="s2">&quot;RichText&quot;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span> <span class="n">sheet</span> <span class="o">|</span>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">add_row</span> <span class="o">[</span><span class="n">rt</span><span class="o">]</span><span class="p">,</span> <span class="ss">:style</span> <span class="o">=&gt;</span> <span class="n">wrap_text</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="nb">p</span><span class="o">.</span><span class="n">serialize</span> <span class="s1">&#39;rich_text.xlsx&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://yoshitsugufujii.github.io/images/blog/2015-07-14%2020.30.19.png" alt="完成イメージ" /></p>

<p>Axlsxなんでもできますね！</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[ファイル名に_smart_phoneをつけて複製]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/07/09/rename-file-name-for-jp-mobile/"/>
        <updated>2015-07-09T12:09:42+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/07/09/rename-file-name-for-jp-mobile</id>
        <content type="html"><![CDATA[<p>スマートフォンサイトの表示に<a href="https://github.com/jpmobile/jpmobile">jpmobile</a>を使ってます。<br/>
これはこのようにApplicationcontrollerとかに書くと</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">ApplicationController</span> <span class="o">&lt;</span> <span class="no">ActionController</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">Jpmobile</span><span class="o">::</span><span class="no">ViewSelector</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<!-- more -->


<p>PCからのアクセスの場合にはindex.html.erbを表示し<br/>
スマートフォンからのアクセスの場合にはindex_smart_phone.html.erbを表示してくれるという機能を使っています。</p>

<p>今回先にPCサイトがあり、それのスマフォサイトを作るにあたってPCのファイルを上記命名規則に則ってコピーする必要があったのでスクリプト書きました。</p>

<figure class='code'><figcaption><span>convert_smartphone_name</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#! /usr/bin/env ruby</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;fileutils&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">print_green</span><span class="p">(</span><span class="n">str</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;</span><span class="se">\e</span><span class="s2">[32m</span><span class="si">#{</span><span class="n">str</span><span class="si">}</span><span class="se">\e</span><span class="s2">[0m&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">print_red</span><span class="p">(</span><span class="n">str</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;</span><span class="se">\e</span><span class="s2">[31m</span><span class="si">#{</span><span class="n">str</span><span class="si">}</span><span class="se">\e</span><span class="s2">[0m&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">print_yellow</span><span class="p">(</span><span class="n">str</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;</span><span class="se">\e</span><span class="s2">[33m</span><span class="si">#{</span><span class="n">str</span><span class="si">}</span><span class="se">\e</span><span class="s2">[0m&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="no">ARGV</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">nil?</span>
</span><span class='line'>  <span class="n">print_red</span> <span class="s2">&quot;対象ディレクトリへのパスを指定してください&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">Dir</span><span class="o">.</span><span class="n">glob</span><span class="p">(</span><span class="s1">&#39;*&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">file</span><span class="o">|</span>
</span><span class='line'>  <span class="k">next</span> <span class="k">if</span> <span class="no">FileTest</span><span class="o">::</span><span class="n">directory?</span><span class="p">(</span><span class="n">file</span><span class="p">)</span>
</span><span class='line'>  <span class="n">dest</span> <span class="o">=</span> <span class="n">file</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">inject</span><span class="p">(</span><span class="nb">String</span><span class="o">.</span><span class="n">new</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">str</span><span class="p">,</span> <span class="n">chunk</span><span class="o">|</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">chunk</span> <span class="o">==</span> <span class="s2">&quot;html&quot;</span>
</span><span class='line'>      <span class="n">str</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot;_smart_phone&quot;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="n">str</span> <span class="o">==</span> <span class="s2">&quot;&quot;</span>
</span><span class='line'>      <span class="n">str</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">chunk</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="n">str</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot;.</span><span class="si">#{</span><span class="n">chunk</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">print_yellow</span> <span class="s2">&quot;convert </span><span class="si">#{</span><span class="n">file</span><span class="si">}</span><span class="s2"> to </span><span class="si">#{</span><span class="n">dest</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="no">FileUtils</span><span class="o">.</span><span class="n">cp</span><span class="p">(</span><span class="n">file</span><span class="p">,</span> <span class="n">dest</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">print_green</span> <span class="s2">&quot;done.&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>これを実行可能なところにおいて、chmod +xで実行可能にしてもらって、<br/>
convert_smartphone_name [対象ディレクトリのパス]<br/>
とかってやれば対象ディレクトリ内のファイルが全部_smart_phone付きでコピーされるはずです。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[ckeditorのスタイルにカスタムスタイル追加する方法]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/06/24/ckeditor-customer-style/"/>
        <updated>2015-06-24T12:41:08+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/06/24/ckeditor-customer-style</id>
        <content type="html"><![CDATA[<p>Railsに脆弱性があったみたいですね<br/>
<a href="http://weblog.rubyonrails.org/2015/6/16/Rails-3-2-22-4-1-11-and-4-2-2-have-been-released-and-more/">Rails 3.2.22, 4.1.11 and 4.2.2 have been released and more</a></p>

<p>さっそく今やってるPGのrailsのバージョンをあげました。</p>

<p>さて<br/>
WYSIWYGエディタの<a href="http://ckeditor.com/demo">ckeditor</a>がすごくいい感じで使わせてもらっています。</p>

<p>gemがあったので私はこれを使ってckeditorを利用しています。<br/>
<a href="https://github.com/galetahub/ckeditor">ckeditor</a></p>

<p>今回はこのckeditorにプルダウンで表示されるスタイルをカスタマイズする方法です。</p>

<!-- more -->


<p>環境はこんな感じ。</p>

<p>開発環境<br/>
- rails (4.2.2)<br/>
- simple_form (3.1.0)<br/>
- ckeditor (4.1.1)</p>

<p>インストールがすんでうまく表示されるようになったら、以下の感じに修正します。</p>

<figure class='code'><figcaption><span>app/assets/javascripts/ckeditor/config.js</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">config</span><span class="p">.</span><span class="nx">stylesSet</span> <span class="o">=</span> <span class="s1">&#39;my_styles&#39;</span><span class="p">;</span>
</span><span class='line'><span class="nx">CKEDITOR</span><span class="p">.</span><span class="nx">stylesSet</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span> <span class="s1">&#39;my_styles&#39;</span><span class="p">,</span> <span class="p">[</span>
</span><span class='line'>    <span class="c1">// Block Styles</span>
</span><span class='line'>    <span class="p">{</span> <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;Blue Title&#39;</span><span class="p">,</span>       <span class="nx">element</span><span class="o">:</span> <span class="s1">&#39;h3&#39;</span><span class="p">,</span>      <span class="nx">styles</span><span class="o">:</span> <span class="p">{</span> <span class="s1">&#39;color&#39;</span><span class="o">:</span> <span class="s1">&#39;Blue&#39;</span> <span class="p">}</span> <span class="p">},</span>
</span><span class='line'>    <span class="p">{</span> <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;Red Title&#39;</span><span class="p">,</span>        <span class="nx">element</span><span class="o">:</span> <span class="s1">&#39;h3&#39;</span><span class="p">,</span>      <span class="nx">styles</span><span class="o">:</span> <span class="p">{</span> <span class="s1">&#39;color&#39;</span><span class="o">:</span> <span class="s1">&#39;Red&#39;</span> <span class="p">}</span> <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Inline Styles</span>
</span><span class='line'>    <span class="p">{</span> <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;Marker: Yellow&#39;</span><span class="p">,</span>   <span class="nx">element</span><span class="o">:</span> <span class="s1">&#39;span&#39;</span><span class="p">,</span>    <span class="nx">styles</span><span class="o">:</span> <span class="p">{</span> <span class="s1">&#39;background-color&#39;</span><span class="o">:</span> <span class="s1">&#39;Yellow&#39;</span> <span class="p">}</span> <span class="p">},</span>
</span><span class='line'>    <span class="p">{</span> <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;Marker: Green&#39;</span><span class="p">,</span>    <span class="nx">element</span><span class="o">:</span> <span class="s1">&#39;span&#39;</span><span class="p">,</span>    <span class="nx">styles</span><span class="o">:</span> <span class="p">{</span> <span class="s1">&#39;background-color&#39;</span><span class="o">:</span> <span class="s1">&#39;Lime&#39;</span> <span class="p">}</span> <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Object Styles</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;Image on Left&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">element</span><span class="o">:</span> <span class="s1">&#39;img&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">attributes</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">style</span><span class="o">:</span> <span class="s1">&#39;padding: 5px; margin-right: 5px&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="nx">border</span><span class="o">:</span> <span class="s1">&#39;2&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="nx">align</span><span class="o">:</span> <span class="s1">&#39;left&#39;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">]</span> <span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>するとスタイルの中身が上記のものにきり変わっていると思います。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/ckeditor_custom_style_2015-06-24.png" alt="ckeditor" /></p>

<p>できましたね。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[simple_formで表示されるエラーをfull_messagesのものにする]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/06/11/simple-form-error-full-message/"/>
        <updated>2015-06-11T14:30:19+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/06/11/simple-form-error-full-message</id>
        <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#開発環境</span>
</span><span class='line'><span class="n">rails</span> <span class="p">(</span><span class="mi">4</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="n">simple_form</span> <span class="p">(</span><span class="mi">3</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>simple_formをそのまま使うとエラー発生時のエラーの表示がfull_messageではなく、object.errors[:name]みたいにした時の値しか表示してくれない。</p>

<p>こんな感じ。<br/>
<img src="http://yoshitsugufujii.github.io/images/blog/simple_form_error2015-06-10.png" alt="normal error" /></p>

<p>ちょっとこれだとあんまりなのでfull_messageでメッセージを表示したい</p>

<!-- more -->


<p>この<a href="https://github.com/plataformatec/simple_form/issues/989">issue</a>でこの問題にパッチを当てている人がいたのでそのままパクらせていただきます。</p>

<p>こうするだけ</p>

<figure class='code'><figcaption><span>config/initializer/simple_form_error_path.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">SimpleForm::Components::Errors</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">errors_on_attribute</span>
</span><span class='line'>    <span class="n">object</span><span class="o">.</span><span class="n">errors</span><span class="o">.</span><span class="n">full_messages_for</span><span class="p">(</span><span class="n">attribute_name</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>するとこうなります。<br/>
<img src="http://yoshitsugufujii.github.io/images/blog/simple_form_full_error2015-06-10.png" alt="full error" /><br/>
いい感じですね。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[railsでuser_idをurlに付与して引き回す方法]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/06/10/append-user-id-to-url/"/>
        <updated>2015-06-10T12:01:49+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/06/10/append-user-id-to-url</id>
        <content type="html"><![CDATA[<p>特定のパラメータを常にurlに付与する方法です。</p>

<p>urlにuser_idをクエリなどにふくめておくとgoogle analyticsとか使った時に、特定のユーザがどういうページにアクセスしたかわかりユーザの行動分析に使えたりします。</p>

<p>なのでurlに自動でuser_id=[:user_id]の形式でアクセスしてるページのuser_idが付与されると非常に便利そうです。</p>

<p>参考になったのはjpmobileのソースでした(docomo端末の場合にguidを自動付与したりしています)<br/>
<a href="https://github.com/jpmobile/jpmobile/blob/master/lib/jpmobile/docomo_guid.rb">docomo_guid.rb</a></p>

<!-- more -->


<p>こうすれば自動でユーザーIDが設定されます。</p>

<figure class='code'><figcaption><span>app/controller/application_controller.rb </span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">ApplicationController</span> <span class="o">&lt;</span> <span class="no">ActionController</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">default_url_options</span>
</span><span class='line'>    <span class="n">result</span> <span class="o">=</span> <span class="k">super</span> <span class="o">||</span> <span class="p">{}</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">current_user</span><span class="o">.</span><span class="n">present?</span>
</span><span class='line'>      <span class="n">result</span><span class="o">.</span><span class="n">merge!</span><span class="p">(</span><span class="ss">user_id</span><span class="p">:</span> <span class="n">current_user</span><span class="o">.</span><span class="n">id</span><span class="p">)</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="n">result</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="ss">:user_id</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">result</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>これでログインしていれば(上記だとcurrent_userが取れれば)<br/>
<a href="http://localhost:3000/?user_id=6">http://localhost:3000/?user_id=6</a><br/>
みたいに付与されるはずです。</p>

<p>今やっている案件でこの処理が必要になったので思い出しながら書いてみましたが、以前これを利用して遷移前の履歴をurlに保持するgemを作ったことをふと思いだしました。<br/>
<a href="https://github.com/YoshitsuguFujii/light_stalking">light_stalking</a></p>

<p>このGEMは思いつきで作って実際に使ってないので色々と問題ありそうですが、default_url_optionsを使うことでurlの最大長にひっかからない範囲で色々なことができそうという一例になるんじゃないかと思いました。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[Deviseで特定の条件のみパスワードの検証をスキップする]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/06/08/devise-skip-password-check/"/>
        <updated>2015-06-08T12:35:01+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/06/08/devise-skip-password-check</id>
        <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#開発環境  </span>
</span><span class='line'><span class="n">rails</span> <span class="mi">4</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span>
</span><span class='line'><span class="n">devise</span> <span class="mi">3</span><span class="o">.</span><span class="mi">4</span><span class="o">.</span><span class="mi">1</span>
</span></code></pre></td></tr></table></div></figure>


<p>deviseを使っていて、ユーザモデルに仮登録状態を作りたいと思います。<br/>
仮登録の段階ではパスワードはまだ要求されず。<br/>
最後の最後でパスワードを設定して本会員登録完了といったフローです。</p>

<p>deviseでは対象モデルに<code>devise :validatable</code>に設定している場合はメールアドレスやパスワードの検証が走ります。<br/>
今回はパスワード以外のチェックはやってほしいため<code>:validatable</code>の宣言を外すだけではダメです。</p>

<!-- more -->


<p>deviseの以下のソースを見てみます</p>

<figure class='code'><figcaption><span>lib/devise/models/validatable.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">included</span><span class="p">(</span><span class="n">base</span><span class="p">)</span>
</span><span class='line'>  <span class="n">base</span><span class="o">.</span><span class="n">extend</span> <span class="no">ClassMethods</span>
</span><span class='line'>  <span class="n">assert_validations_api!</span><span class="p">(</span><span class="n">base</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">base</span><span class="o">.</span><span class="n">class_eval</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">validates_presence_of</span>   <span class="ss">:email</span><span class="p">,</span> <span class="k">if</span><span class="p">:</span> <span class="ss">:email_required?</span>
</span><span class='line'>    <span class="n">validates_uniqueness_of</span> <span class="ss">:email</span><span class="p">,</span> <span class="ss">allow_blank</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span> <span class="k">if</span><span class="p">:</span> <span class="ss">:email_changed?</span>
</span><span class='line'>    <span class="n">validates_format_of</span>     <span class="ss">:email</span><span class="p">,</span> <span class="ss">with</span><span class="p">:</span> <span class="n">email_regexp</span><span class="p">,</span> <span class="ss">allow_blank</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span> <span class="k">if</span><span class="p">:</span> <span class="ss">:email_changed?</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">validates_presence_of</span>     <span class="ss">:password</span><span class="p">,</span> <span class="k">if</span><span class="p">:</span> <span class="ss">:password_required?</span>
</span><span class='line'>    <span class="n">validates_confirmation_of</span> <span class="ss">:password</span><span class="p">,</span> <span class="k">if</span><span class="p">:</span> <span class="ss">:password_required?</span>
</span><span class='line'>    <span class="n">validates_length_of</span>       <span class="ss">:password</span><span class="p">,</span> <span class="ss">within</span><span class="p">:</span> <span class="n">password_length</span><span class="p">,</span> <span class="ss">allow_blank</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>パスワードの検証をするかどうかはpassword_required?で判定しています。
判定メソッドはこんな感じです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">password_required?</span>
</span><span class='line'>  <span class="o">!</span><span class="n">persisted?</span> <span class="o">||</span> <span class="o">!</span><span class="n">password</span><span class="o">.</span><span class="n">nil?</span> <span class="o">||</span> <span class="o">!</span><span class="n">password_confirmation</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>これを対象のモデルでオーバーライドします。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">devise</span> <span class="ss">:database_authenticatable</span><span class="p">,</span> <span class="ss">:registerable</span><span class="p">,</span>
</span><span class='line'>         <span class="ss">:recoverable</span><span class="p">,</span> <span class="ss">:rememberable</span><span class="p">,</span> <span class="ss">:trackable</span><span class="p">,</span> <span class="ss">:validatable</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">password_required?</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">member?</span>
</span><span class='line'>      <span class="o">!</span><span class="n">persisted?</span> <span class="o">||</span> <span class="o">!</span><span class="n">password</span><span class="o">.</span><span class="n">nil?</span> <span class="o">||</span> <span class="o">!</span><span class="n">password_confirmation</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="kp">false</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>これでmember?がtrueを返さない(本登録前のユーザ)はパスワードの検証処理をスキップできるようになります。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[deep_rejectが欲しくてrefinementsで実装しようとした話]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/05/26/deep-reject/"/>
        <updated>2015-05-26T19:03:54+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/05/26/deep-reject</id>
        <content type="html"><![CDATA[<p>再帰的に条件判定を行うrejectが欲しくなりました。<br/>
こういう動きです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="o">].</span><span class="n">deep_reject</span><span class="p">{</span><span class="o">|</span><span class="n">val</span><span class="o">|</span> <span class="n">val</span> <span class="o">==</span> <span class="mi">1</span> <span class="p">}</span>  <span class="c1"># =&gt; [2]</span>
</span><span class='line'>
</span><span class='line'><span class="o">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="o">]].</span><span class="n">deep_reject</span><span class="p">{</span><span class="o">|</span><span class="n">val</span><span class="o">|</span> <span class="n">val</span> <span class="o">==</span> <span class="mi">1</span> <span class="p">}</span> <span class="c1"># =&gt; [2, [2, 3]]</span>
</span><span class='line'>
</span><span class='line'><span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="p">{</span><span class="ss">a</span><span class="p">:</span> <span class="s2">&quot;a&quot;</span><span class="p">,</span> <span class="ss">b</span><span class="p">:</span> <span class="s2">&quot;b&quot;</span> <span class="p">}</span><span class="o">].</span><span class="n">deep_reject</span><span class="p">{</span><span class="o">|</span><span class="n">key</span><span class="p">,</span> <span class="n">val</span><span class="o">|</span> <span class="n">key</span> <span class="o">==</span> <span class="ss">:a</span> <span class="p">}</span> <span class="c1"># =&gt; [1, 2, {:b=&gt;&quot;b&quot;}]</span>
</span><span class='line'>
</span><span class='line'><span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="p">{</span><span class="ss">a</span><span class="p">:</span> <span class="s2">&quot;a&quot;</span><span class="p">,</span> <span class="ss">b</span><span class="p">:</span> <span class="s2">&quot;b&quot;</span><span class="p">,</span> <span class="ss">c</span><span class="p">:</span> <span class="p">{</span><span class="ss">a</span><span class="p">:</span> <span class="s2">&quot;c&quot;</span><span class="p">,</span> <span class="ss">c</span><span class="p">:</span> <span class="s2">&quot;d&quot;</span><span class="p">}</span> <span class="p">}</span><span class="o">].</span><span class="n">deep_reject</span><span class="p">{</span><span class="o">|</span><span class="n">key</span><span class="p">,</span> <span class="n">val</span><span class="o">|</span> <span class="n">key</span> <span class="o">==</span> <span class="ss">:a</span> <span class="p">}</span>
</span><span class='line'><span class="c1"># =&gt; [1, 2, {:b=&gt;&quot;b&quot;, :c=&gt;{:c=&gt;&quot;d&quot;}}]</span>
</span></code></pre></td></tr></table></div></figure>


<p>かなり便利そうです。</p>

<!-- more -->


<p>refinmetsで実装してみます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="k">module</span> <span class="nn">HashEx</span>
</span><span class='line'>    <span class="n">refine</span> <span class="no">Hash</span> <span class="k">do</span>
</span><span class='line'>      <span class="k">def</span> <span class="nf">deep_reject</span><span class="p">(</span><span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>        <span class="nb">self</span><span class="o">.</span><span class="n">each_with_object</span><span class="p">({})</span> <span class="k">do</span> <span class="o">|</span><span class="p">(</span><span class="n">k</span><span class="p">,</span> <span class="n">v</span><span class="p">),</span> <span class="n">result</span><span class="o">|</span>
</span><span class='line'>          <span class="k">unless</span> <span class="n">block</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="n">k</span><span class="p">,</span> <span class="n">v</span><span class="p">)</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">v</span><span class="o">.</span><span class="n">is_a?</span><span class="p">(</span><span class="no">Hash</span><span class="p">)</span>
</span><span class='line'>              <span class="n">result</span><span class="o">[</span><span class="n">k</span><span class="o">]</span> <span class="o">=</span> <span class="n">v</span><span class="o">.</span><span class="n">deep_reject</span><span class="p">(</span><span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>            <span class="k">else</span>
</span><span class='line'>              <span class="n">result</span><span class="o">[</span><span class="n">k</span><span class="o">]</span> <span class="o">=</span> <span class="n">v</span>
</span><span class='line'>            <span class="k">end</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">module</span> <span class="nn">ArrayEx</span>
</span><span class='line'>    <span class="n">refine</span> <span class="nb">Array</span> <span class="k">do</span>
</span><span class='line'>      <span class="k">def</span> <span class="nf">deep_reject</span><span class="p">(</span><span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>        <span class="nb">self</span><span class="o">.</span><span class="n">each_with_object</span><span class="p">(</span><span class="o">[]</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">v</span><span class="p">,</span> <span class="n">result</span><span class="o">|</span>
</span><span class='line'>          <span class="k">unless</span> <span class="n">block</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="n">v</span><span class="p">)</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">v</span><span class="o">.</span><span class="n">is_a?</span><span class="p">(</span><span class="nb">Array</span><span class="p">)</span>
</span><span class='line'>              <span class="n">result</span> <span class="o">&lt;&lt;</span> <span class="n">v</span><span class="o">.</span><span class="n">deep_reject</span><span class="p">(</span><span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>            <span class="k">elsif</span> <span class="n">v</span><span class="o">.</span><span class="n">is_a?</span><span class="p">(</span><span class="no">Hash</span><span class="p">)</span>
</span><span class='line'>              <span class="n">result</span> <span class="o">&lt;&lt;</span> <span class="n">v</span><span class="o">.</span><span class="n">deep_reject</span><span class="p">(</span><span class="o">&amp;</span><span class="n">block</span><span class="p">)</span> <span class="c1"># 呼べない！</span>
</span><span class='line'>            <span class="k">else</span>
</span><span class='line'>              <span class="n">result</span> <span class="o">&lt;&lt;</span> <span class="n">v</span>
</span><span class='line'>            <span class="k">end</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>ですがこれを</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">using</span> <span class="no">ArrayEx</span>
</span><span class='line'><span class="n">using</span> <span class="no">HashEx</span>
</span></code></pre></td></tr></table></div></figure>


<p>と読み込んで使おうとしたところ残念ながら配列の中にハッシュが紛れ込んでいるようなケースだとArrayExのdeep_rejectからHashExのdeep_rejectが参照できず思った通りの結果になりませんでした。<br/>
refinementsはかなり厳密なスコープで動くようです。</p>

<p>まぁあったら有意義なメソッドだしいいかということで結局オープンクラスで実装しました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Array</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">deep_reject</span><span class="p">(</span><span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">each_with_object</span><span class="p">(</span><span class="o">[]</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">v</span><span class="p">,</span> <span class="n">result</span><span class="o">|</span>
</span><span class='line'>      <span class="k">unless</span> <span class="n">block</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="n">v</span><span class="p">)</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">v</span><span class="o">.</span><span class="n">is_a?</span><span class="p">(</span><span class="nb">Array</span><span class="p">)</span>
</span><span class='line'>          <span class="n">result</span> <span class="o">&lt;&lt;</span> <span class="n">v</span><span class="o">.</span><span class="n">deep_reject</span><span class="p">(</span><span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>        <span class="k">elsif</span> <span class="n">v</span><span class="o">.</span><span class="n">is_a?</span><span class="p">(</span><span class="no">Hash</span><span class="p">)</span>
</span><span class='line'>          <span class="n">result</span> <span class="o">&lt;&lt;</span> <span class="n">v</span><span class="o">.</span><span class="n">deep_reject</span><span class="p">(</span><span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'>          <span class="n">result</span> <span class="o">&lt;&lt;</span> <span class="n">v</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Hash</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">deep_reject</span><span class="p">(</span><span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">each_with_object</span><span class="p">({})</span> <span class="k">do</span> <span class="o">|</span><span class="p">(</span><span class="n">k</span><span class="p">,</span> <span class="n">v</span><span class="p">),</span> <span class="n">result</span><span class="o">|</span>
</span><span class='line'>      <span class="k">unless</span> <span class="n">block</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="n">k</span><span class="p">,</span> <span class="n">v</span><span class="p">)</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">v</span><span class="o">.</span><span class="n">is_a?</span><span class="p">(</span><span class="no">Hash</span><span class="p">)</span>
</span><span class='line'>          <span class="n">result</span><span class="o">[</span><span class="n">k</span><span class="o">]</span> <span class="o">=</span> <span class="n">v</span><span class="o">.</span><span class="n">deep_reject</span><span class="p">(</span><span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>        <span class="k">elsif</span> <span class="n">v</span><span class="o">.</span><span class="n">is_a?</span><span class="p">(</span><span class="nb">Array</span><span class="p">)</span>
</span><span class='line'>          <span class="n">result</span><span class="o">[</span><span class="n">k</span><span class="o">]</span> <span class="o">=</span> <span class="n">v</span><span class="o">.</span><span class="n">deep_reject</span><span class="p">(</span><span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'>          <span class="n">result</span><span class="o">[</span><span class="n">k</span><span class="o">]</span> <span class="o">=</span> <span class="n">v</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[モデルのattributeに変更がなくてもnested_attribute_forを使っているモデルでcallbackを発生させる]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/05/25/force-occur-callbacks/"/>
        <updated>2015-05-25T16:15:38+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/05/25/force-occur-callbacks</id>
        <content type="html"><![CDATA[<p>任意の条件でnested_attribute_forの対象の保存処理を走らせる方法です</p>

<p>ファイルのアップロード用のモデルを作っていて<code>ActionDispatch::Http::UploadedFile</code>を一旦attr_accessorのアクセサで受けたあとcallbackでファイル名やファイルサイズをmodelクラスの該当のカラムに設定するという処理を書いておりました。</p>

<p>ファイルは可変にアップロードしたかったのでこのモデルの親モデルから参照するようにして、nested_attribute_forで親モデル更新時に一緒に更新するようにします。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Oya</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:files</span><span class="p">,</span> <span class="ss">dependent</span><span class="p">:</span> <span class="ss">:destroy</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">accepts_nested_attributes_for</span> <span class="ss">:files</span><span class="p">,</span> <span class="ss">allow_destroy</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">File</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:file</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<p>いらない情報ですが、一応モデルクラスFileモデルの参照先のテーブルfilesテーブルはこんな感じです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="sb">`id`</span> <span class="n">int</span><span class="p">(</span><span class="mi">11</span><span class="p">)</span> <span class="no">NOT</span> <span class="no">NULL</span> <span class="no">AUTO_INCREMENT</span><span class="p">,</span>
</span><span class='line'>  <span class="sb">`created_at`</span> <span class="n">datetime</span> <span class="no">DEFAULT</span> <span class="no">NULL</span><span class="p">,</span>
</span><span class='line'>  <span class="sb">`updated_at`</span> <span class="n">datetime</span> <span class="no">DEFAULT</span> <span class="no">NULL</span><span class="p">,</span>
</span><span class='line'>  <span class="sb">`oya_id`</span> <span class="n">int</span><span class="p">(</span><span class="mi">11</span><span class="p">)</span> <span class="no">NOT</span> <span class="no">NULL</span><span class="p">,</span>
</span><span class='line'>  <span class="sb">`data_file_name`</span> <span class="n">varchar</span><span class="p">(</span><span class="mi">255</span><span class="p">)</span> <span class="no">DEFAULT</span> <span class="no">NULL</span><span class="p">,</span>
</span><span class='line'>  <span class="sb">`data_content_type`</span> <span class="n">varchar</span><span class="p">(</span><span class="mi">255</span><span class="p">)</span> <span class="no">DEFAULT</span> <span class="no">NULL</span><span class="p">,</span>
</span><span class='line'>  <span class="sb">`data_file_size`</span> <span class="n">int</span><span class="p">(</span><span class="mi">11</span><span class="p">)</span> <span class="no">DEFAULT</span> <span class="no">NULL</span><span class="p">,</span>
</span></code></pre></td></tr></table></div></figure>


<p>新規登録の時は良かったんですが、親モデル保存時にnested_attribute_forの対象のモデルクラスのsave(auto_save)やcallbackを走らせるかどうかは実際にデータベースに登録されているカラムの値に変化があったかで決定されているようです(たぶん)</p>

<p>そのため変更時にはformからはfileというアクセサに設定する値のみ飛んでくるような作りだとauto_saveが動かずFileクラスの更新処理が走りませんでした。</p>

<p>そのためchanged_for_autosave?をオーバーライドすることで独自に変更判定を行いcallback並びにauto saveが動くようにします。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">File</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:file</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">changed_for_autosave?</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">file</span><span class="o">.</span><span class="n">present?</span>
</span><span class='line'>      <span class="k">return</span> <span class="kp">true</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="k">super</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>知ってると簡単ですが、知らないとはまりますね。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[nested_formで下じゃなくて上に要素を追加したい場合]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/05/20/nested-form-add-field-to-top/"/>
        <updated>2015-05-20T18:03:26+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/05/20/nested-form-add-field-to-top</id>
        <content type="html"><![CDATA[<p>neste_formは可変なサイズの子要素を動的に追加できるGemです。</p>

<p><a href="https://github.com/ryanb/nested_for://github.com/ryanb/nested_form">nested form</a></p>

<p>いつも大変お世話になっておりますが、今回の案件で追加する先を指定したエレメントの下ではなく上に追加しなければいけなくなり対応しました。</p>

<!-- more -->


<p>バージョンは</p>

<figure class='code'><figcaption><span>Gemfile.lock</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">nested_form</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">3</span><span class="o">.</span><span class="mi">2</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>での作業となります。</p>

<p>ますnested_formで使われるjsを眺めるとそんなに長くない処理であることがわかります。<br/>
その中で追加ボタンを押したときに要素を追加する部分はこの辺りになるようです。</p>

<figure class='code'><figcaption><span>jquery_nested_form:55行目あたり</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">insertFields</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">content</span><span class="p">,</span> <span class="nx">assoc</span><span class="p">,</span> <span class="nx">link</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">target</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="nx">link</span><span class="p">).</span><span class="nx">data</span><span class="p">(</span><span class="s1">&#39;target&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nx">target</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">$</span><span class="p">(</span><span class="nx">content</span><span class="p">).</span><span class="nx">appendTo</span><span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="nx">target</span><span class="p">));</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">$</span><span class="p">(</span><span class="nx">content</span><span class="p">).</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">link</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">},</span>
</span></code></pre></td></tr></table></div></figure>


<p>ここを上書きします。 <br/>
application.jsで<code>//= require jquery_nested_form</code>の後に以下の処理を書いて上書きしちゃいましよう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nb">window</span><span class="p">.</span><span class="nx">NestedFormEvents</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">insertFields</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">content</span><span class="p">,</span> <span class="nx">assoc</span><span class="p">,</span> <span class="nx">link</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">target</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="nx">link</span><span class="p">).</span><span class="nx">data</span><span class="p">(</span><span class="s1">&#39;target&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="nx">link</span><span class="p">).</span><span class="nx">data</span><span class="p">(</span><span class="s1">&#39;destination&#39;</span><span class="p">)</span> <span class="o">==</span> <span class="s2">&quot;prepend&quot;</span><span class="p">){</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">$</span><span class="p">(</span><span class="nx">target</span><span class="p">).</span><span class="nx">prepend</span><span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="nx">content</span><span class="p">));</span>
</span><span class='line'>  <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nx">target</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="nx">$</span><span class="p">(</span><span class="nx">content</span><span class="p">).</span><span class="nx">appendTo</span><span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="nx">target</span><span class="p">));</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="nx">$</span><span class="p">(</span><span class="nx">content</span><span class="p">).</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">link</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>linkのdata-destination=prependで対象の要素の上にprependで追加されるイメージです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='erb'><span class='line'><span class="x">&lt;table id=&quot;tasks&quot;&gt;</span>
</span><span class='line'><span class="x">  </span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">fields_for</span> <span class="ss">:tasks</span><span class="p">,</span> <span class="ss">:wrapper</span> <span class="o">=&gt;</span> <span class="kp">false</span> <span class="k">do</span> <span class="o">|</span><span class="n">task_form</span><span class="o">|</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">    &lt;tr class=&quot;fields&quot;&gt;</span>
</span><span class='line'><span class="x">      &lt;td&gt;</span><span class="cp">&lt;%=</span> <span class="n">task_form</span><span class="o">.</span><span class="n">text_field</span> <span class="ss">:name</span> <span class="cp">%&gt;</span><span class="x">&lt;/td&gt;</span>
</span><span class='line'><span class="x">      &lt;td&gt;</span><span class="cp">&lt;%=</span> <span class="n">task_form</span><span class="o">.</span><span class="n">link_to_remove</span> <span class="s2">&quot;Remove this task&quot;</span> <span class="cp">%&gt;</span><span class="x">&lt;/td&gt;</span>
</span><span class='line'><span class="x">    &lt;/tr&gt;</span>
</span><span class='line'><span class="x">  </span><span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">&lt;/table&gt;</span>
</span><span class='line'><span class="x">&lt;p&gt;</span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">link_to_add</span> <span class="s2">&quot;Add a task&quot;</span><span class="p">,</span> <span class="ss">:tasks</span><span class="p">,</span> <span class="ss">:data</span> <span class="o">=&gt;</span> <span class="p">{</span> <span class="ss">:target</span> <span class="o">=&gt;</span> <span class="s2">&quot;#tasks&quot;</span><span class="p">,</span> <span class="ss">:prepend</span> <span class="o">=&gt;</span> <span class="kp">true</span> <span class="p">}</span> <span class="cp">%&gt;</span><span class="x">&lt;/p&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>簡単でした。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[Rails Engineを使った開発]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/05/19/develop-with-rails-engine/"/>
        <updated>2015-05-19T13:09:58+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/05/19/develop-with-rails-engine</id>
        <content type="html"><![CDATA[<p>一つ前に携わったプロジェクトではサブシステムがたくさんあり、それぞれがrailsで構築されていて共通処理やmodelはrails engineにあつめられ各システムで参照しておりました。</p>

<p>今までgemのコードリーディングをする時にしか意識していなかったrails engineですが(deviseとかとか)、結構便利だということを今更ながら実感し、最近は共有処理をengineに書き出してそれを参照するようにしています。</p>

<p>クックパッドさんでも共通部分をengineに集めているようです。<br/>
<a href="http://techlife.cookpad.com/entry/2015/04/06/155940">新規サービスの管理画面を短期間で見栄え良く実装する</a></p>

<p>ドリコムさんでは複数のengineを組み合わせてシステムを作っているようです。<br/>
<a href="http://blog.onk.ninja/2014/12/02/mountable_engine.html">Mountable Engine だらけの Rails アプリ開発</a></p>

<!-- more -->


<p>でも完全に共通に作ろうとすると色々考えなきゃいけないから工数がかかっちゃうんじゃないかと懸念があるかもしれません。<br/>
でも最初はそこまで共通化する必要もないのではないのかと思います。</p>

<p>git使っていれば、システムの納品段階でengineのブランチを切るなりタグを打つなりして機能を固定してしまえばいいのです。<br/>
そうすれば、今後engineに修正が加わってもGemfileで該当のブランチまたはタグを見るようにすれば問題なく納品段階のengineのコードでシステムは動き続けます。<br/>
その後時間をおいてゆっくりとプロジェクトに依存したコードを共通化していけばいいのです。</p>

<p>これを応用してめったにやらない処理であんまり入れなたくないような機能や、<br/>
モンキーパッチなども参照元のプロジェクト単位でengineをカスタマイズして導入することもできます。</p>

<p>そして共通化した処理を書くことはいつもより有益なことをしてる気持ちで仕事ができるので楽しいです。<br/>
engine固有の仕組みや書き方もあって最初は中々辛い部分もありますが、
engineを使ったことのない方は決まり切った処理をコピぺで過去のプロジェクトから持ってくるのではなく、
その処理をengineに書き出してそれをプロジェクトから参照してみてはいかがでしょうか？</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[Railsでbootstrap datetimepickerを日本語化しつつ導入(with rails assets)]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/04/22/bootstrap-datetimepicker/"/>
        <updated>2015-04-22T21:52:21+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/04/22/bootstrap-datetimepicker</id>
        <content type="html"><![CDATA[<p>普段はよく<a href="https://github.com/eternicode/bootstrap-datepicker">bootstrap-datepicker</a>を使うのですが、
今回の案件では時刻まで絞り込みたいというお話だったのでdatetimepickerを導入してみました。</p>

<p>こちらを使います。かなり高機能な上に日本語化まで対応できる優れもの。<br/>
<a href="http://eonasdan.github.io/bootstrap-datetimepicker/">Eonasdan/bootstrap-datetimepicker</a></p>

<p>デモを見るだけでもワクワクしますね。<br/>
<a href="http://eonasdan.github.io/bootstrap-datetimepicker/Installing/">入れ方</a>もたくさん用意されていていいですね。<br/>
今回もrails-assetsで導入します。</p>

<!-- more -->




<figure class='code'><figcaption><span>Gemfile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">source</span> <span class="s1">&#39;https://rails-assets.org&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;rails-assets-bootstrap-sass-official&#39;</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;rails-assets-eonasdan-bootstrap-datetimepicker&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>bundle install</code>したら次はapp/assets/javascripts/application.jsに以下を記述。<br/>
日本語化する場合はmomentも一緒にいれます。</p>

<figure class='code'><figcaption><span>app/assets/javascripts/application.js</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">//= require bootstrap-sass-official</span>
</span><span class='line'><span class="c1">//= require moment</span>
</span><span class='line'><span class="c1">//= require moment/locale/ja</span>
</span><span class='line'><span class="c1">//= require eonasdan-bootstrap-datetimepicker</span>
</span></code></pre></td></tr></table></div></figure>


<p>最後にcssの読み込み</p>

<figure class='code'><figcaption><span>app/assets/stylesheets/application.css.scss</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="k">@import</span> <span class="s2">&quot;bootstrap-sass-official&quot;</span><span class="p">;</span>
</span><span class='line'><span class="k">@import</span> <span class="s2">&quot;eonasdan-bootstrap-datetimepicker&quot;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>これで設定は終了です。<br/>
あとはhtmlで</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;input</span> <span class="na">class=</span><span class="s">&quot;datetimepicker form-control&quot;</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span><span class="nt">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>とかやって</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'>  <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;.datetimepicker&quot;</span><span class="p">).</span><span class="nx">datetimepicker</span><span class="p">({</span>
</span><span class='line'>    <span class="nx">format</span><span class="o">:</span> <span class="s2">&quot;YYYY/MM/DD HH:mm&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">showClear</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">showClose</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">locale</span><span class="o">:</span> <span class="s1">&#39;ja&#39;</span>
</span><span class='line'>   <span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>とかやると日本語かされた時刻も選択可能なカレンダーがいい感じに表示されるはずです。</p>

<h3>2014/04/25追記</h3>

<p>ちなみに書式設定をいじれば時刻選択なしの日付のみのdatepickerとしても使えます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'>  <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;.datepicker&quot;</span><span class="p">).</span><span class="nx">datetimepicker</span><span class="p">({</span>
</span><span class='line'>    <span class="nx">format</span><span class="o">:</span> <span class="s2">&quot;YYYY/MM/DD&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">showClear</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">showClose</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">locale</span><span class="o">:</span> <span class="s1">&#39;ja&#39;</span>
</span><span class='line'>   <span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>非常にいいですね。</p>
]]></content>
    </entry>
    
</feed>
