<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

    <title><![CDATA[なんとなく日々徒然と]]></title>
    <link href="http://yoshitsugufujii.github.io/atom.xml" rel="self"/>
    <link href="http://yoshitsugufujii.github.io/"/>
    <updated>2016-05-16T15:27:48+09:00</updated>
    <id>http://yoshitsugufujii.github.io/</id>
    <author>
        <name><![CDATA[Yoshitsugu Fujii]]></name>
        
    </author>
    <generator uri="http://octopress.org/">Octopress</generator>

    
    <entry>
        <title type="html"><![CDATA[最近買って良かったもの]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2016/05/12/magnet-bookmarker/"/>
        <updated>2016-05-12T11:33:55+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2016/05/12/magnet-bookmarker</id>
        <content type="html"><![CDATA[<p>上野公園でかったマグネット型のブックマーカー。</p>

<p><a  href="http://www.amazon.co.jp/gp/product/B00H1L1AXW/ref=as_li_ss_il?ie=UTF8&camp=247&creative=7399&creativeASIN=B00H1L1AXW&linkCode=as2&tag=gogosakura-22"><img border="0" src="http://ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&ASIN=B00H1L1AXW&Format=_SL250_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=gogosakura-22" ></a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=gogosakura-22&l=as2&o=9&a=B00H1L1AXW" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></p>

<p>従来のしおりだとはさんだままだとしおりがページめくる時に邪魔になったり、<br/>
読んでいる最中しおりを手にもったままなのもわずらわしく、<br/>
大きめのカバンにいれてるとしおりが知らない間にはずれていたります。</p>

<!-- more -->


<p></p>

<p>このブックマーカーはマグネットでパチンとページを挟むことができ邪魔にならず、<br/>
はさなだままでもページを捲る時でも邪魔に感じません。</p>

<p>シンプルだけどとても使い勝手がよく重宝しております。</p>

<p>Amazonで見ると色々と売っているみたいですね。<br/>
かわいいのも多い。</p>

<p><a  href="http://www.amazon.co.jp/gp/product/B004K0PKBU/ref=as_li_ss_il?ie=UTF8&camp=247&creative=7399&creativeASIN=B004K0PKBU&linkCode=as2&tag=gogosakura-22"><img border="0" src="http://ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&ASIN=B004K0PKBU&Format=_SL250_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=gogosakura-22" ></a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=gogosakura-22&l=as2&o=9&a=B004K0PKBU" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></p>

<p><a target="_blank" href="http://www.amazon.co.jp/mn/search/ref=as_li_ss_tl?_encoding=UTF8&camp=247&creative=7399&field-keywords=%E3%83%9E%E3%82%B0%E3%83%8D%E3%83%83%E3%83%88%20%E3%83%96%E3%83%83%E3%82%AF%E3%83%9E%E3%83%BC%E3%82%AB%E3%83%BC&linkCode=ur2&rh=i%3Aaps%2Ck%3A%E3%83%9E%E3%82%B0%E3%83%8D%E3%83%83%E3%83%88%20%E3%83%96%E3%83%83%E3%82%AF%E3%83%9E%E3%83%BC%E3%82%AB%E3%83%BC&tag=gogosakura-22&url=search-alias%3Daps">Amazon</a><img src="https://ir-jp.amazon-adsystem.com/e/ir?t=gogosakura-22&l=ur2&o=9" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />でブックマーカーで検索するとたくさんでてくるようです。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[複数サーバーssh同時操作]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2016/05/11/tmux-concurrent-operation/"/>
        <updated>2016-05-11T12:12:31+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2016/05/11/tmux-concurrent-operation</id>
        <content type="html"><![CDATA[<p>冗長構成となっている本番環境でlogを調べたい時とかそれぞれのサーバーにsshしてはいってそれぞれのサーバーで同じコマンド打つのが面倒くさい。<br/>
tmuxを使っていれば複数ペインで同時操作できます。</p>

<!-- more -->


<p></p>

<p>.tmux.confに設定追加</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># ペイン同時操作  
</span><span class='line'>set-option -g synchronize-panes off  
</span><span class='line'>bind e setw synchronize-panes on  
</span><span class='line'>bind E setw synchronize-panes off  </span></code></pre></td></tr></table></div></figure>


<p></p>

<p>これで</p>

<p>ペイン分割して一つ目のペインでサーバーAへ接続<br/>
二つ目のペインでサーバーBへ接続します。</p>

<p>そのあとCTRL + eでtmuxにコマンドを送るとキーボード入力が２つのペインに送られるようになるので<br/>
しかるべきlogフォルダまで移動してlogを見ればいいですね。<br/>
同期を解除したい場合はCTRL + Eで解除できます。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[Go言語でファイル送信用cuiツールを作ったよ]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2016/05/10/golang-file-exchange-tool/"/>
        <updated>2016-05-10T19:50:24+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2016/05/10/golang-file-exchange-tool</id>
        <content type="html"><![CDATA[<p>ファイルをやりとりする場合に、一旦共有サーバーにあげてとかメールに添付したりとかめんどくさくて作りました。 <br/>
Golangで作ったので異なるOSでも動きます(WinとMacで確認済み)</p>

<!-- more -->


<p></p>

<p>受信する側は引数なしで起動すると受信モードで待機します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>./file_exchange
</span></code></pre></td></tr></table></div></figure>


<p>もしくは winの場合はfile_exchange.exeをダブルクリックでもいけます</p>

<p>送信先の一覧は送信側で以下のコマンドをうつと受信待機中のipが取れるのでこれで取得しましょう</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>./file_exchange list
</span></code></pre></td></tr></table></div></figure>


<p>実行結果はこんな感じ。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/2016-05-10.png" alt="リスト取得" /></p>

<p>udpでブロードキャストしているのですが、全部からリクエストもらってから終了のやり方がわからず<br/>
とりあえずタイムアウト3秒の間にレスポンスが返ってきたものが表示されます。<br/>
タイムアウトで処理を終了しているので例外で終わります。<br/>
どなたかうまいやり方知っている人がいれば教えて下さい。</p>

<p>ipを取得したら送信します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>./file_exchange ipアドレス ファイルパス<span class="sb">`</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>で送信できます。<br/>
こんな感じです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>./file_exchange 192.168.134.34 avator.png
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>上書きが怖かったので同名のファイルがある場合はファイル名に_Nをつけて保存するようにしています。</p>

<p>今回winでも試してみましたが、winでも動いて感動しました 。</p>

<p>コードはこちらを参照してください。buidも各自でお願いします<br/>
<a href="https://github.com/YoshitsuguFujii/file_exchange">YoshitsuguFujii/file_exchange</a></p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[csvなどで多重配列を縦横を入れ替える(行列切り替え)]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2016/05/09/ruby-transpose/"/>
        <updated>2016-05-09T10:51:15+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2016/05/09/ruby-transpose</id>
        <content type="html"><![CDATA[<p>小ネタです。<br/>
Csvファイルなどで行列を切り替えて出力したい場合はtransposeが便利です。</p>

<!-- more -->


<p></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">csv</span><span class="o">.</span><span class="n">each</span><span class="p">{</span><span class="o">|</span><span class="n">row</span><span class="o">|</span> <span class="nb">p</span> <span class="n">row</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'><span class="n">csv</span> <span class="o">=</span> <span class="o">[[</span><span class="s2">&quot;user_name&quot;</span><span class="p">,</span> <span class="s2">&quot;age&quot;</span><span class="p">,</span> <span class="s2">&quot;gender&quot;</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s2">&quot;藤井&quot;</span><span class="p">,</span> <span class="s2">&quot;36&quot;</span><span class="p">,</span> <span class="s2">&quot;men&quot;</span><span class="o">]]</span>
</span><span class='line'><span class="n">csv</span><span class="o">.</span><span class="n">each</span><span class="p">{</span><span class="o">|</span><span class="n">row</span><span class="o">|</span> <span class="nb">p</span> <span class="n">row</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'><span class="c1"># =&gt; &quot;user_name,age,gender&quot;  </span>
</span><span class='line'><span class="c1"># =&gt; &quot;藤井,36,men&quot;  </span>
</span><span class='line'>
</span><span class='line'><span class="n">csv</span><span class="o">.</span><span class="n">transpose</span><span class="o">.</span><span class="n">each</span><span class="p">{</span><span class="o">|</span><span class="n">row</span><span class="o">|</span> <span class="nb">p</span> <span class="n">row</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'><span class="c1"># =&gt; &quot;user_name,藤井&quot;  </span>
</span><span class='line'><span class="c1"># =&gt; &quot;age,36&quot;  </span>
</span><span class='line'><span class="c1"># =&gt; &quot;gender,men&quot;  </span>
</span></code></pre></td></tr></table></div></figure>


<p></p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[船橋三番瀬で潮干狩り]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2016/05/06/funabashi-sanbanse/"/>
        <updated>2016-05-06T11:09:41+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2016/05/06/funabashi-sanbanse</id>
        <content type="html"><![CDATA[<p>昨日妻と娘と3人で<a href="http://www.park-funabashi.or.jp/bay/">ふなばし 三番瀬海浜公園</a>に潮干狩りにいってきました。<br/>
駐車場はまず諦めろと事前情報があったため自転車でいきました。<br/>
久しぶりの自転車遠出はあたたかくて気持ちよかったです。<br/>
GWということもあり駐車場は朝6時半には満車になっていたようですね。</p>

<!-- more -->


<p>三番瀬海浜公園に近づくにつれて路駐路駐路駐。<br/>
１キロ以上離れたところから路駐して歩いている人がいっぱいいました。</p>

<p>10時頃到着したのですが、チケット売り場は行列。</p>

<p>近所のコンビニで買うことをおすすめします。<br/>
通常料金430円が390円になるうえにチケット購入の列に並ばなくてすみます。</p>

<p>チケットを買って前に進むと潮干狩り会場の前に売店がいくつかあります。<br/>
おいしそうなものが売っていたりビールが売っていたり、潮干狩り用の道具も売っていたりします。<br/>
お値段はぼったくりではないレベルで好感が持てますが多少高めです。<br/>
熊手しか持っていなかったので子供用バケツ(300円)と網(200円)を購入。<br/>
<br / >
いざ入場。人の多さに呆気にとられます。   <br/>
<img src="http://yoshitsugufujii.github.io/images/blog/20160509_1.jpg" alt="フェスかと思った" /></p>

<div style="text-align: center; font-weight:bold;">  
なんかのフェスかと思った
</div>


<p>
<br /></p>

<div style="text-align: center;">  
  そして無心に掘り続けます
</div>


<p><br /></p>

<div style="text-align: center; margin:auto 0;">  
  <img src="http://yoshitsugufujii.github.io/images/blog/20160509_2.JPG" alt="無心に掘る" style="width: 80%;">
</div>


<p></p>

<div style="text-align: center;">  
  掘り続けます...
</div>


<p><br /></p>

<div style="text-align: center; margin:auto 0;">  
  <img src="http://yoshitsugufujii.github.io/images/blog/20160509_3.jpg" alt="遊ぶ娘" style="width: 80%;">
</div>


<p>
<br /></p>

<p>GWだからかアサリの他にハマグリもまかれていました。<br/>
でっかいのが見つかると嬉しいですね。<br/>
無心に掘り続けて見事2.6キロゲット(1時間ぐらい)<br/>
持ち帰りは100gで80円なので2080円でした。<br/>
<br /></p>

<p>終わり間近になると計量所が混みます。<br/>
計量は多く取りすぎた人が欲しい量に調節したりもできるので進みが悪く25メートルぐらいの行列でも1時間弱かかりました。<br/>
潮干狩りの入場した後に買える1キロの赤い網を購入すると計量しないでいいみたいです。<br/>
よくわからずに外の売店で網買ってしまいましたが、この潮干狩り会場でうっている1キロの網を買うのが賢いですね。</p>

<div style="text-align: center; margin:auto 0;">  
  <img src="http://yoshitsugufujii.github.io/images/blog/20160509_5.jpg" alt="砂抜き" style="width: 80%;">
</div>


<p>
<br /></p>

<p>帰って砂抜きして炊き込みご飯、酒蒸し、お吸い物にして食べました。<br/>
感動するほどうまかったです。</p>

<p>6月11日までやっているようなのでもう一度行きます。</p>

<h2>まとめ</h2>

<p><strong>金額</strong><br/>
入場料 430円 * 2(4歳未満の子供は無料)<br/>
2.6キロのはまぐり持ち狩り代金 2080円<br/>
合計2940円</p>

<p><strong>次行く時用意するリスト</strong><br/>
熊手(100均のは力が入りずらいけど十分使える)<br/>
網(貝をいれておく)<br/>
バケツ(海水をいれて貝をいれておく)<br/>
帽子<br/>
濡れてもいい服<br/>
ビーサンもしくは長靴<br/>
クーラーボックス(長時間持ち歩く場合)</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[個人事業の始め方を読みました]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2016/05/02/kojin-jigyo/"/>
        <updated>2016-05-02T15:13:53+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2016/05/02/kojin-jigyo</id>
        <content type="html"><![CDATA[<p>随所に図解がはいりわかりやすく、<br/>
1ページのテキスト量も読むのつらいなと感じさせるほど多くなく<br/>
スイスイと読み進めることができました。</p>

<p>頭にすっとはいってきます。<br/>
感覚的には8時間ぐらいで読了したつもりです。</p>

<p>個人事業主としてではなく社会人としての教養として読んでおいても損はないなぁと思いました。</p>

<p>Amazonでkindleで買いました。</p>

<!-- more -->


<p><a  href="http://www.amazon.co.jp/gp/product/B00I8PIA2O/ref=as_li_ss_il?ie=UTF8&camp=247&creative=7399&creativeASIN=B00I8PIA2O&linkCode=as2&tag=gogosakura-22"><img border="0" src="http://ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&ASIN=B00I8PIA2O&Format=_SL250_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=gogosakura-22" ></a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=gogosakura-22&l=as2&o=9&a=B00I8PIA2O" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></p>

<p>副業で1週間5〜10時間ぐらいの機能をつくってお金もらえる生活に憧れる。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[Axlsxでコメント表示]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2016/04/29/axlsx-comment/"/>
        <updated>2016-04-29T14:50:47+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2016/04/29/axlsx-comment</id>
        <content type="html"><![CDATA[<p>Axlsxで常に表示されているコメントとマウスオーバーで表示されるコメント</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/2016-04-29%2014.53.19.png" alt="Axlsxコメント" /></p>

<!-- more -->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;axlsx&#39;</span>
</span><span class='line'><span class="n">package</span> <span class="o">=</span> <span class="no">Axlsx</span><span class="o">::</span><span class="no">Package</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">package</span><span class="o">.</span><span class="n">use_shared_strings</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'><span class="n">sheet</span> <span class="o">=</span> <span class="n">package</span><span class="o">.</span><span class="n">workbook</span><span class="o">.</span><span class="n">add_worksheet</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s1">&#39;lists&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">add_row</span><span class="p">(</span><span class="o">[</span><span class="s1">&#39;品名&#39;</span><span class="p">,</span> <span class="s1">&#39;単価&#39;</span><span class="p">,</span> <span class="s1">&#39;数量&#39;</span><span class="p">,</span> <span class="s1">&#39;計&#39;</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">add_row</span><span class="p">(</span><span class="o">[</span><span class="s1">&#39;にんじん&#39;</span><span class="p">,</span>    <span class="mi">80</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span>      <span class="s1">&#39;=B2*C2&#39;</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">add_row</span><span class="p">(</span><span class="o">[</span><span class="s1">&#39;たまねぎ&#39;</span><span class="p">,</span>    <span class="mi">50</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span>      <span class="s1">&#39;=B3*C3&#39;</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">add_row</span><span class="p">(</span><span class="o">[</span><span class="s1">&#39;じゃがいも&#39;</span><span class="p">,</span>  <span class="mi">40</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span>      <span class="s1">&#39;=B4*C4&#39;</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">add_row</span><span class="p">(</span><span class="o">[</span><span class="s1">&#39;牛肉&#39;</span><span class="p">,</span>       <span class="mi">200</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span>      <span class="s1">&#39;=B5*C5&#39;</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">add_row</span><span class="p">(</span><span class="o">[</span><span class="s1">&#39;カレー粉&#39;</span><span class="p">,</span>   <span class="mi">150</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span>      <span class="s1">&#39;=B6*C6&#39;</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">add_row</span><span class="p">(</span><span class="o">[</span><span class="s1">&#39;&#39;</span><span class="p">,</span>            <span class="s1">&#39;&#39;</span><span class="p">,</span> <span class="s1">&#39;総計&#39;</span><span class="p">,</span> <span class="s1">&#39;=SUM(D2:D6)&#39;</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#sheet.add_comment :ref =&gt; &#39;A1&#39;, :text =&gt; &#39;penut machine&#39;, :author =&gt; &#39;crank&#39;, :visible =&gt; true</span>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">add_comment</span><span class="p">(</span><span class="ss">:ref</span> <span class="o">=&gt;</span> <span class="s1">&#39;A1&#39;</span><span class="p">,</span> <span class="ss">:author</span> <span class="o">=&gt;</span> <span class="s1">&#39;Bob&#39;</span><span class="p">,</span> <span class="ss">:text</span> <span class="o">=&gt;</span> <span class="s1">&#39;Yes We Can!&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">tap</span> <span class="k">do</span> <span class="o">|</span><span class="n">comment</span><span class="o">|</span>
</span><span class='line'>  <span class="n">comment</span><span class="o">.</span><span class="n">vml_shape</span><span class="o">.</span><span class="n">top_row</span> <span class="o">=</span> <span class="mi">2</span>      <span class="c1"># 位置調整用</span>
</span><span class='line'>  <span class="n">comment</span><span class="o">.</span><span class="n">vml_shape</span><span class="o">.</span><span class="n">left_column</span> <span class="o">=</span> <span class="mi">2</span>  <span class="c1"># 位置調整用</span>
</span><span class='line'>  <span class="n">comment</span><span class="o">.</span><span class="n">vml_shape</span><span class="o">.</span><span class="n">bottom_row</span> <span class="o">=</span> <span class="mi">2</span>   <span class="c1"># 位置調整用</span>
</span><span class='line'>  <span class="n">comment</span><span class="o">.</span><span class="n">vml_shape</span><span class="o">.</span><span class="n">right_column</span> <span class="o">=</span> <span class="mi">4</span> <span class="c1"># 位置調整用</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">add_comment</span> <span class="ss">:ref</span> <span class="o">=&gt;</span> <span class="s1">&#39;A6&#39;</span><span class="p">,</span> <span class="ss">:text</span> <span class="o">=&gt;</span> <span class="s1">&#39;rust bucket&#39;</span><span class="p">,</span> <span class="ss">:author</span> <span class="o">=&gt;</span> <span class="s1">&#39;PO&#39;</span><span class="p">,</span> <span class="ss">:visible</span> <span class="o">=&gt;</span> <span class="kp">false</span>
</span><span class='line'>
</span><span class='line'><span class="n">package</span><span class="o">.</span><span class="n">serialize</span><span class="p">(</span><span class="s1">&#39;test.xlsx&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[あなたが損しなさいという文化]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2016/04/28/you-should-take-a-loss/"/>
        <updated>2016-04-28T11:24:54+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2016/04/28/you-should-take-a-loss</id>
        <content type="html"><![CDATA[<p>今日車を運転していたらこんな状況になりました。</p>

<p>|　　　　　　|<br/>
|　　　　　　|<br/>
|　　　　　&mdash;<br/>
|　　　　　|　<br/>
|　　　　　|　<br/>
|　対向車　|　<br/>
|　　　　　|　<br/>
|　　　　　|　<br/>
|　　　　　|　<br/>
|　自分車　|　<br/>
|　　　　　|　<br/>
|　　　　　&mdash;　<br/>
|　　　　　　|　<br/>
|　　　　　　|　</p>

<!-- more -->


<p>ちょうど道の狭いところでかちあってしまい、お互いバックすればすれ違うポイントがあるけれどという状況です。<br/>
こういう場合は日本人はどちらかが損しなければならない場合は、自分が損をするという道徳観を子供の頃からすりこまれている気がします。</p>

<p>民度の高さが話題にあがることがありますが、こういう道徳観というのは日本人を語る上での大事なファクターになるなぁと思いました。</p>

<p>ちなみに今日は上記状況になったあとお互いが同時にバックするという状況になりました。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[喉のリンパが腫れました]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2016/04/27/lymph-hareta/"/>
        <updated>2016-04-27T11:58:10+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2016/04/27/lymph-hareta</id>
        <content type="html"><![CDATA[<p>先週まで花粉症なのか喉がピリピリして咳もでて目が痒かったんですが、<br/>
今週入って症状がピタッと止まったかと思いきや喉の右側のリンパが腫れ出しました。<br/>
首に異物感がずっとあり鈍い痛みがあります。<br/>
左向いてつば飲み込むと突っ張ったような痛みがずきりと走ります。</p>

<!-- more -->


<p>思い出せば一昨年も腫れて去年も軽かったんですが腫れました。<br/>
そして同じ時期に腫れてます。</p>

<p>リンパが腫れた原因はひょっとして花粉症？<br/>
ということで病院に行きました。<br/>
アレルギーでリンパが腫れることはあるが滅多にないとのこと。</p>

<p>もし仮にアレルギーで腫れていた場合でも治療法はなく。<br/>
おさまるまで耐えるしかないとのことでした。</p>

<p>なのでリンパ節炎として処置しますとのことで抗生物質と炎症を抑える薬をもらいました。</p>

<p>うーむ。辛い</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[model.changesで強制的に変更したことにする方法]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2016/04/11/rails-dirty-mark-changed/"/>
        <updated>2016-04-11T18:26:43+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2016/04/11/rails-dirty-mark-changed</id>
        <content type="html"><![CDATA[<p>RailsのActiveModelのDirtyでは変更前、変更後、変更したかなどモデルクラスの新旧状態が取れる。<br/>
<a href="http://qiita.com/kakkunpakkun/items/b286f789ca8590104ad1">http://qiita.com/kakkunpakkun/items/b286f789ca8590104ad1</a></p>

<p>このdirtyを使って変更してないけど変更したことにしたい(observerを再実行したい時とか)に使える技</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">first</span>
</span><span class='line'><span class="n">user</span><span class="o">.</span><span class="n">changes</span> <span class="c1"># =&gt; {}</span>
</span><span class='line'><span class="n">user</span><span class="o">.</span><span class="n">created_at_will_change!</span> <span class="c1"># =&gt; =&gt; 2015-01-16 20:09:59 +0900</span>
</span><span class='line'><span class="n">user</span><span class="o">.</span><span class="n">changes</span>
</span><span class='line'><span class="c1"># =&gt; {</span>
</span><span class='line'><span class="c1">#  &quot;created_at&quot; =&gt; [</span>
</span><span class='line'><span class="c1">#    [0] 2015-01-16 20:09:59 +0900,</span>
</span><span class='line'><span class="c1">#    [1] 2015-01-16 20:09:59 +0900</span>
</span><span class='line'><span class="c1">#   ]</span>
</span><span class='line'><span class="c1"># }</span>
</span></code></pre></td></tr></table></div></figure>


<p>属性名_will_change!で新旧に同じ値が設定される。</p>

<p>なんでこんなことやりたかったかっていうとobserverでuserのnameの値が変更されたらapiを叩く処理を書いていたのだけど、急遽全件apiを再実行する必要があり強制的にnameが変更されたことにしたかったため調べたらあったというお話</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[[小ネタ]Railsを使っていてAngularのform validationだけしたい時]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2016/03/23/angular-with-rails-name-convention/"/>
        <updated>2016-03-23T12:36:53+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2016/03/23/angular-with-rails-name-convention</id>
        <content type="html"><![CDATA[<p>railsでシステムを作っていて、ここはゴリゴリ書くようなところじゃないけどformのvalidationだけangularの機能使いたくなったんですが。
railsはname属性に[]を使うので、この場合のng-show内部の指定がわからなかったので備忘録も兼ねて。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='erb'><span class='line'><span class="x">form name=&quot;new_form&quot;</span>
</span><span class='line'><span class="x">  input name=&quot;price[hoge]&quot; ng-model=&quot;price&quot; ng-pattern=&quot;/^([1-9]\\d*|0)(\\.\\d+)?$/&quot; required=&quot;&quot; type=&quot;text&quot; /</span>
</span><span class='line'><span class="x">  span.text-error ng-show=&quot;newForm[&#39;price[hoge]&#39;].$error.required&quot;  ※</span>
</span><span class='line'><span class="x">  span.text-error ng-show=&quot;newForm[&#39;price[hoge]&#39;].$error.pattern&quot;  This is not a valid dollar.</span>
</span></code></pre></td></tr></table></div></figure>


<p>formのnameに指定されいるものを[]とシングルクォートで囲むといけます。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[どうしようもないお客さんとやってく方法]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2016/03/18/stressful-working-tips-1/"/>
        <updated>2016-03-18T11:45:25+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2016/03/18/stressful-working-tips-1</id>
        <content type="html"><![CDATA[<p>どうしようもないお客さんというのはいるもんですが、<br/>
サラリーマンをやっているとどうしても対応せざるを得ないわけです。<br/>
そんなお客さんにこの度ちょっと効果的なやり方で対応できました。</p>

<p>久しぶりにはっきりいって本気で仕事したくなくなったお客さん登場です。<br/>
別でかかえていた案件もリリース直前でパツっていたこともあり、飛んでくるタスクをついつい放置してしまいそうです。</p>

<p>そこでどうしたら効果的にモチベーションを保ちつつ仕事を進められたかというと。</p>

<!-- more -->


<p>間に一人ディレクターに入ってもらいました。<br/>
すると今まで</p>

<p><strong>自分 → お客さん</strong></p>

<p>と直接お客さんのために動かなければいけない状態から</p>

<p><strong>自分 → ディレクター → お客さん</strong></p>

<p>となり、お客さんのために頑張るという構図が消え、<br/>
ディレクターに迷惑にならないようにディレクターのために頑張るという作用が生まれ<br/>
むしろタスクの消化が通常より早くなるという現象が起きました。</p>

<p>この時ディレクター役の人には迷惑をかけられないような実在する人を選ぶのがポイントです</p>

<ul>
<li>仲の良い人</li>
<li>同じ会社にいるけど全く交流のない人</li>
<li>目上の人</li>
<li>直属の部下</li>
<li>かわいい女性、もしくはかっこいい男性</li>
<li>出世競争におけるライバル</li>
</ul>


<p>などが該当するかと思います。</p>

<p>また間に入る人はただの伝言役なので特にスキルが求められるわけではなく、<br/>
それほど負担にはならないんじゃないかと思います。<br/>
まぁなんか責任問題になったら一緒に土下座する必要はありますが、</p>

<p>いかがでしょうか？<br/>
今後もだましだましやりながらこのストレス社会を乗り切っていきたいと思います。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[Rails 便利なテクニック その１]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2016/02/18/rails-tips-1/"/>
        <updated>2016-02-18T11:33:58+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2016/02/18/rails-tips-1</id>
        <content type="html"><![CDATA[<p>日常コード書いてて便利だなぁと思った技とかを思い出したら不定期に書いていきます。</p>

<p>よくメニューをulとliを使ってタブで表示することがあると思います。<br/>
例えばタブは以下の条件で表示されます</p>

<ul>
<li>ユーザの年齢が20歳以上なら表示するタブA</li>
<li>ユーザの性別が男性なら表示するタブB</li>
<li>ユーザの性別が女性なら表示するタブC</li>
<li>ユーザの性別が男性でかつ20歳以上なら表示するタブD</li>
</ul>


<p>実装が終わって総合テストがはじまります。</p>

<p>ここでチケットがあがってきます。</p>

<p><strong>『タブが一つしか出力されない場合はタブを非表示にしてください。』</strong></p>

<p>さてどうしましょう？</p>

<!-- more -->


<p>複雑なif文を組み合わせてタブが１つかでない条件を見つけ出して非表示にしますか？<br/>
タブが増えたり条件が増えたりしたら大変な上に可読性悪そうですね。</p>

<p>Railsには便利なcaptureというメソッドがあります。<br/>
これはcaptureメソッドに与えられたブロックの出力内容を返すメソッドです。<br/>
これを使うとシンプルに問題を解決できます。</p>

<figure class='code'><figcaption><span>app/views/layout/tab.html.erb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='erb'><span class='line'><span class="cp">&lt;%</span> <span class="n">tab</span> <span class="o">=</span> <span class="n">capture</span> <span class="k">do</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">  &lt;ul&gt;</span>
</span><span class='line'><span class="x">    </span><span class="cp">&lt;%</span> <span class="k">if</span> <span class="n">user</span><span class="o">.</span><span class="n">age</span> <span class="o">&gt;=</span> <span class="mi">20</span> <span class="cp">%&gt;</span><span class="x"> </span>
</span><span class='line'><span class="x">      &lt;li&gt;タブA&lt;/li&gt;</span>
</span><span class='line'><span class="x">    </span><span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'>
</span><span class='line'><span class="x">    </span><span class="cp">&lt;%</span> <span class="k">if</span> <span class="n">user</span><span class="o">.</span><span class="n">male?</span> <span class="cp">%&gt;</span><span class="x"> </span>
</span><span class='line'><span class="x">      &lt;li&gt;タブB&lt;/li&gt;</span>
</span><span class='line'><span class="x">    </span><span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'>
</span><span class='line'><span class="x">    </span><span class="cp">&lt;%</span> <span class="k">if</span> <span class="n">user</span><span class="o">.</span><span class="n">female?</span> <span class="cp">%&gt;</span><span class="x"> </span>
</span><span class='line'><span class="x">      &lt;li&gt;タブC&lt;/li&gt;</span>
</span><span class='line'><span class="x">    </span><span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'>
</span><span class='line'><span class="x">    </span><span class="cp">&lt;%</span> <span class="k">if</span> <span class="n">user</span><span class="o">.</span><span class="n">male?</span> <span class="o">&amp;&amp;</span> <span class="n">user</span><span class="o">.</span><span class="n">age</span> <span class="o">&gt;=</span> <span class="mi">20</span> <span class="cp">%&gt;</span><span class="x"> </span>
</span><span class='line'><span class="x">      &lt;li&gt;タブD&lt;/li&gt;</span>
</span><span class='line'><span class="x">    </span><span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">  &lt;/ul&gt;</span>
</span><span class='line'><span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'>
</span><span class='line'><span class="cp">&lt;%</span> <span class="c1"># tabが一個ならば表示しない </span><span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="cp">&lt;%=</span> <span class="n">tab</span><span class="o">.</span><span class="n">scan</span><span class="p">(</span><span class="s2">&quot;&lt;/li&gt;&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">count</span> <span class="o">&gt;</span> <span class="mi">1</span> <span class="o">?</span> <span class="n">tab</span> <span class="p">:</span> <span class="s2">&quot;&quot;</span> <span class="cp">%&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>htmlを動的に組み立てる際にあれこれするよりも、出力されたhtmlをもとに処理するというケースの方が圧倒的にスマートなケースがあるので積極的に使っていきたいですね。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[Cronがutcで動いてる場合に]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2016/02/03/change-crons-timezone/"/>
        <updated>2016-02-03T10:33:11+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2016/02/03/change-crons-timezone</id>
        <content type="html"><![CDATA[<p>Centosでtimezoneの設定が日本時間にしているのにcronが指定時刻に動かず調べました。<br/>
/var/log/cronを見るとログの時間が-9時間。<br/>
JSTで動いてないっぽいです。</p>

<p>以下のコマンドでcronのログの時刻も含めて治ります。</p>

<!-- more -->




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cp /usr/share/zoneinfo/Asia/Tokyo /etc/localtime
</span><span class='line'>service crond restart
</span><span class='line'>service rsyslog restart</span></code></pre></td></tr></table></div></figure>


<p>itamaeのrecipeも修正</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">execute</span> <span class="s2">&quot;change time zone&quot;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">user</span> <span class="n">node</span><span class="o">[</span><span class="ss">:user</span><span class="o">]</span>
</span><span class='line'>  <span class="n">command</span> <span class="o">&lt;&lt;-</span><span class="no">EOF</span>
</span><span class='line'><span class="sh">    sudo cp /usr/share/zoneinfo/Asia/Tokyo /etc/localtime</span>
</span><span class='line'><span class="no">  EOF</span>
</span><span class='line'>  <span class="n">not_if</span> <span class="s2">&quot;date | grep &#39;JST&#39;&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># cronとlogにも反映(再起動)</span>
</span><span class='line'><span class="sx">%w(crond rsyslog)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">serv</span><span class="o">|</span>
</span><span class='line'>  <span class="n">service</span> <span class="n">serv</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">action</span> <span class="ss">:restart</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[RailsConfig(現Config)で読み込んでいるファイルのパスを得る]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2016/02/02/rails-config-check-load-files-path/"/>
        <updated>2016-02-02T11:13:32+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2016/02/02/rails-config-check-load-files-path</id>
        <content type="html"><![CDATA[<p>内部的にrails_envを書き換えたりしていて、rails_configの値がただしくRAILS_ENVの設定通りにファイルを読み込んでくれない事象が発生したので。</p>

<p>rails_config (0.4.2)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">irb</span><span class="p">(</span><span class="n">main</span><span class="p">):</span><span class="mo">014</span><span class="p">:</span><span class="mi">0</span><span class="o">&gt;</span> <span class="no">Settings</span><span class="o">.</span><span class="n">instance_variable_get</span><span class="p">(</span><span class="ss">:@config_sources</span><span class="p">)</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="o">[</span><span class="c1">#&lt;RailsConfig::Sources::YAMLSource:0x0055a28d40ab48 @path=&quot;Rails_rootへのパス/current/config/settings.yml&quot;&gt;, #&lt;RailsConfig::Sources::YAMLSource:0x0055a28d40aa30 @path=&quot;Rails_rootへのパス/current/config/settings/hoge.yml&quot;&gt;, #&lt;RailsConfig::Sources::YAMLSource:0x0055a28d40a9e0 @path=&quot;Rails_rootへのパス/current/config/environments/hoge.yml&quot;&gt;]</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[jpmobileでPCでスマートフォンのビューを表示する場合]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2016/01/22/jpmobile-enforce-sp-view-for-pc/"/>
        <updated>2016-01-22T18:51:27+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2016/01/22/jpmobile-enforce-sp-view-for-pc</id>
        <content type="html"><![CDATA[<p>なんらかの条件で強制的にスマートフォンのviewを使いたい時。
アプリのwebviewとか？</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">before_filter</span> <span class="ss">:hoge</span>
</span><span class='line'><span class="k">def</span> <span class="nf">hoge</span>
</span><span class='line'>  <span class="k">if</span> <span class="kp">true</span> <span class="c1"># 条件</span>
</span><span class='line'>    <span class="n">env</span><span class="o">[</span><span class="s2">&quot;rack.jpmobile&quot;</span><span class="o">]</span> <span class="o">=</span> <span class="no">Jpmobile</span><span class="o">::</span><span class="no">Mobile</span><span class="o">::</span><span class="no">SmartPhone</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">env</span><span class="p">,</span> <span class="n">request</span><span class="p">)</span>
</span><span class='line'>    <span class="n">register_mobile</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[リーダブルコードを意識しながら普段気をつけていること(2)]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/11/18/readable-code-2/"/>
        <updated>2015-11-18T11:33:53+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/11/18/readable-code-2</id>
        <content type="html"><![CDATA[<p>普段コードを書く時にリーダブルなコードを書く時に気をつけていることです。<br/>
第１回目は<a href="http://yoshitsugufujii.github.io/blog/2015/11/18/readable-code-1/">コンテキストを作る</a>でした</p>

<p>第２回目は</p>

<p><strong>早めにパターンを潰す</strong></p>

<!-- more -->


<p>何かの処理を追うときおそらく上から順に処理を追って読んでいくと思います。</p>

<p>読み進める中でユーザがタイプAのユーザだったらどうなのか、利用停止中のユーザだったらどうなるのかということがふと疑問に浮かんだりします。<br/>
その際に読み手は頭の片隅にその疑問を一時格納していて、その処理が書かれているところまで気にしながら読み進むわけです。<br/>
そうなると考慮されていない場合などは最後まで読まなければわかりません。</p>

<p>この疑問を頭の片隅に仮置きしながらコードを読むのはかなりのエネルギーを使うし、ストレスだったりします(少なくとも僕は)<br/>
しかもそれが複雑なシステムでいくつものパターンがある場合は気にしなきゃいけないパターンが膨大になります。</p>

<p>なので読み手の負担にならないように、なるべくパターンは早い段階でリターンするといいですね。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">User</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">hard_work</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">unless</span> <span class="n">user</span><span class="o">.</span><span class="n">new_commer?</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">unless</span> <span class="n">user</span><span class="o">.</span><span class="n">project</span><span class="o">.</span><span class="n">burning?</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">unless</span> <span class="n">user</span><span class="o">.</span><span class="n">shachiku?</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># 永遠と続くハードワークの長い記述</span>
</span><span class='line'>    <span class="n">do_work</span><span class="p">(</span><span class="ss">holiday</span><span class="p">:</span> <span class="kp">false</span><span class="p">)</span>
</span><span class='line'>    <span class="n">do_work</span><span class="p">(</span><span class="ss">holiday</span><span class="p">:</span> <span class="kp">false</span><span class="p">)</span>
</span><span class='line'>    <span class="n">do_work</span><span class="p">(</span><span class="ss">holiday</span><span class="p">:</span> <span class="kp">false</span><span class="p">)</span>
</span><span class='line'>    <span class="n">do_work</span><span class="p">(</span><span class="ss">holiday</span><span class="p">:</span> <span class="kp">false</span><span class="p">)</span>
</span><span class='line'>    <span class="n">do_work</span><span class="p">(</span><span class="ss">holiday</span><span class="p">:</span> <span class="kp">false</span><span class="p">)</span>
</span><span class='line'>    <span class="n">do_work</span><span class="p">(</span><span class="ss">holiday</span><span class="p">:</span> <span class="kp">false</span><span class="p">)</span>
</span><span class='line'>    <span class="n">do_work</span><span class="p">(</span><span class="ss">holiday</span><span class="p">:</span> <span class="kp">false</span><span class="p">)</span>
</span><span class='line'>    <span class="n">do_work</span><span class="p">(</span><span class="ss">holiday</span><span class="p">:</span> <span class="kp">false</span><span class="p">)</span>
</span><span class='line'>    <span class="n">do_work</span><span class="p">(</span><span class="ss">holiday</span><span class="p">:</span> <span class="kp">false</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>早い段階で新人と社畜とプロジェクトが炎上していない限りはハードワークは必要ないというのがわかりますね。 <br/>
ないとメソッドの最後まで読まないと新人がハードワークしなきゃいけないのかとハラハラしなきゃいけなくなります。</p>

<p>こういう書き方になれると、例えばどこかで新人が精神を病むような強烈な重労働を強いられているという不具合が上がってきた時にもhard_workメソッドは最初に新人はreturnしているので、すぐにここには不具合がないということもわかります。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[リーダブルコードを意識しながら普段気をつけていること(1)]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/11/18/readable-code-1/"/>
        <updated>2015-11-18T11:33:53+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/11/18/readable-code-1</id>
        <content type="html"><![CDATA[<p>初のシリーズもの。不定期開催します。<br/>
普段コードを書く時にリーダブルなコードを書く時に気をつけていることです。<br/>
思いついたら書いていきます。</p>

<p>第１回目は</p>

<p><strong>コンテキストを作る</strong></p>

<!-- more -->


<p>例えばcsvアップロード機能・ダウンロード機能を作ったときに以下のようなメソッドがあるとします。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Hoge</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">download</span>
</span><span class='line'>    <span class="n">header</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">upload</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">header</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>ここでのheaderメソッドはcsvダウンロード時にヘッダを作るメソッドとします。</p>

<p>初めてソースを見た人はheaderメソッドを見ただけではそれがアップロードに使われるのかダウンロードに使われるのかわかりません。<br/>
downloadメソッドもしくはuploadメソッドを読んではじめてどちらで使えるかわかるようになるかと思います。</p>

<p>これを両方のメソッドを読まずにheaderメソッドがどこで必要とされているかを一発でわかるようにしたいと思います。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Hoge</span>
</span><span class='line'>  <span class="k">module</span> <span class="nn">Download</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">download</span>
</span><span class='line'>      <span class="n">header</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">header</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">module</span> <span class="nn">Upload</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">upload</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">include</span> <span class="no">Download</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">Upload</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>機能毎(あるいは関心ごと)にメソッドをmoduleを使って閉じ込めることで、<br/>
headerメソッドがどこで必要となるか一発でわかるようになりました。</p>

<p>またdownloadに不具合があった場合にはDownloadモジュールだけを読めばいいようになったため、読まなければいけないソースは格段に減ってコードリーディングする人の負担もだいぶ軽くなったのではないでしょうか？</p>

<p>今回は簡単な例ということでclassの中にmoduleを書いてしまいましたが、<br/>
moduleの処理が大きくなる場合にはもちろんファイル分割 &amp; 適切にクラス分割して記述するべきだと思います。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[Go言語を使ってローカルマシン上でbotを動かしSlackでtodo管理をする]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/11/10/slack-todo-bot/"/>
        <updated>2015-11-10T20:29:05+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/11/10/slack-todo-bot</id>
        <content type="html"><![CDATA[<p>前回の続編です。</p>

<p><a href="http://yoshitsugufujii.github.io/blog/2015/09/04/golang-bot-for-slack/">Go言語を使ってローカルマシンに簡易botを作ってSlackに投稿</a></p>

<p>botを使ったtodo機能をslackに付与するべくgoのコードを書いてみました。</p>

<p><code>todo コマンド</code></p>

<p>という感じでつぶやくと、</p>

<p>チャンネル毎にtodoリストが管理できるようにしたいと思います。<br/>
dbがなくても動くようにファイルに保存します。</p>

<table>
<thead>
<tr>
<th style="text-align:left;">操作</th>
<th style="text-align:left;">コマンド</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;">追加</td>
<td style="text-align:left;"> add 追加したいテキスト </td>
</tr>
<tr>
<td style="text-align:left;">削除</td>
<td style="text-align:left;"> del 削除したいテキスト </td>
</tr>
<tr>
<td style="text-align:left;">一覧</td>
<td style="text-align:left;"> list </td>
</tr>
<tr>
<td style="text-align:left;">全削除</td>
<td style="text-align:left;"> clear </td>
</tr>
</tbody>
</table>


<p>こんな感じで動きます。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/todo_bot_sample.gif" alt="todobot" /></p>

<p>便利そうですね！</p>

<!-- more -->


<p>まずはslacbot.goにmainの処理を書いていきます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;./todo_list&quot;</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>  <span class="s">&quot;net/http&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">p</span> <span class="p">=</span> <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">todoListBot</span><span class="p">(</span><span class="nx">w</span> <span class="nx">http</span><span class="p">.</span><span class="nx">ResponseWriter</span><span class="p">,</span> <span class="nx">r</span> <span class="o">*</span><span class="nx">http</span><span class="p">.</span><span class="nx">Request</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">checkUser</span><span class="p">(</span><span class="nx">w</span><span class="p">,</span> <span class="nx">r</span><span class="p">,</span> <span class="kd">func</span><span class="p">(</span><span class="nx">text</span> <span class="kt">string</span><span class="p">,</span> <span class="nx">channel_name</span> <span class="kt">string</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">return_text</span> <span class="o">:=</span> <span class="nx">todo</span><span class="p">.</span><span class="nx">Accept</span><span class="p">(</span><span class="nx">text</span><span class="p">,</span> <span class="nx">channel_name</span><span class="p">)</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Fprintf</span><span class="p">(</span><span class="nx">w</span><span class="p">,</span> <span class="s">&quot;{\&quot;text\&quot;: \&quot;%s\&quot;}&quot;</span><span class="p">,</span> <span class="nx">return_text</span><span class="p">)</span>
</span><span class='line'>  <span class="p">})</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">checkUser</span><span class="p">(</span><span class="nx">w</span> <span class="nx">http</span><span class="p">.</span><span class="nx">ResponseWriter</span><span class="p">,</span> <span class="nx">r</span> <span class="o">*</span><span class="nx">http</span><span class="p">.</span><span class="nx">Request</span><span class="p">,</span> <span class="nx">proc</span> <span class="kd">func</span><span class="p">(</span><span class="nx">text</span> <span class="kt">string</span><span class="p">,</span> <span class="nx">channel_name</span> <span class="kt">string</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">r</span><span class="p">.</span><span class="nx">Method</span> <span class="o">==</span> <span class="s">&quot;POST&quot;</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">text</span> <span class="o">:=</span> <span class="nx">r</span><span class="p">.</span><span class="nx">FormValue</span><span class="p">(</span><span class="s">&quot;text&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="nx">user_name</span> <span class="o">:=</span> <span class="nx">r</span><span class="p">.</span><span class="nx">FormValue</span><span class="p">(</span><span class="s">&quot;user_name&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="nx">channel_name</span> <span class="o">:=</span> <span class="nx">r</span><span class="p">.</span><span class="nx">FormValue</span><span class="p">(</span><span class="s">&quot;channel_name&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">if</span> <span class="nx">user_name</span> <span class="o">!=</span> <span class="s">&quot;slackbot&quot;</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">p</span><span class="p">(</span><span class="s">&quot;user_name:&quot;</span><span class="p">,</span> <span class="nx">user_name</span><span class="p">)</span>
</span><span class='line'>          <span class="nx">p</span><span class="p">(</span><span class="s">&quot;channel_name:&quot;</span><span class="p">,</span> <span class="nx">channel_name</span><span class="p">)</span>
</span><span class='line'>          <span class="nx">proc</span><span class="p">(</span><span class="nx">text</span><span class="p">,</span> <span class="nx">channel_name</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">http</span><span class="p">.</span><span class="nx">HandleFunc</span><span class="p">(</span><span class="s">&quot;/todo&quot;</span><span class="p">,</span> <span class="nx">todoListBot</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">http</span><span class="p">.</span><span class="nx">ListenAndServe</span><span class="p">(</span><span class="s">&quot;:8888&quot;</span><span class="p">,</span> <span class="kc">nil</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>続いて実装です。<br/>
一段階層を下げます。<br/>
todo_listというディレクトリを作ってそこにtodo.goを置きます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">todo</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;../util&quot;</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>  <span class="s">&quot;io/ioutil&quot;</span>
</span><span class='line'>  <span class="s">&quot;log&quot;</span>
</span><span class='line'>  <span class="s">&quot;os&quot;</span>
</span><span class='line'>  <span class="s">&quot;strings&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">const</span> <span class="nx">ADD</span> <span class="p">=</span> <span class="s">&quot;add&quot;</span>
</span><span class='line'><span class="kd">const</span> <span class="nx">DEL</span> <span class="p">=</span> <span class="s">&quot;del&quot;</span>
</span><span class='line'><span class="kd">const</span> <span class="nx">LIST</span> <span class="p">=</span> <span class="s">&quot;list&quot;</span>
</span><span class='line'><span class="kd">const</span> <span class="nx">CLEAR</span> <span class="p">=</span> <span class="s">&quot;clear&quot;</span>
</span><span class='line'><span class="kd">const</span> <span class="nx">STORE_DIR</span> <span class="p">=</span> <span class="s">&quot;todo_list/stored_files&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">p</span> <span class="p">=</span> <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">Accept</span><span class="p">(</span><span class="nx">text</span> <span class="kt">string</span><span class="p">,</span> <span class="nx">channel_name</span> <span class="kt">string</span><span class="p">)</span> <span class="kt">string</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">command</span> <span class="kt">string</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">message</span> <span class="kt">string</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">rtn_text</span> <span class="kt">string</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="nx">validateParams</span><span class="p">(</span><span class="nx">text</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">command</span><span class="p">,</span> <span class="nx">message</span> <span class="p">=</span> <span class="nx">parseText</span><span class="p">(</span><span class="nx">text</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="s">&quot;入力されたパラメータが不正です→ &quot;</span> <span class="o">+</span> <span class="nx">text</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="nx">command</span> <span class="o">==</span> <span class="nx">ADD</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">rtn_text</span> <span class="p">=</span> <span class="nx">add</span><span class="p">(</span><span class="nx">channel_name</span><span class="p">,</span> <span class="nx">message</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="nx">command</span> <span class="o">==</span> <span class="nx">DEL</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">rtn_text</span> <span class="p">=</span> <span class="nx">del</span><span class="p">(</span><span class="nx">channel_name</span><span class="p">,</span> <span class="nx">message</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="nx">command</span> <span class="o">==</span> <span class="nx">LIST</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">rtn_text</span> <span class="p">=</span> <span class="nx">list</span><span class="p">(</span><span class="nx">channel_name</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="nx">command</span> <span class="o">==</span> <span class="nx">CLEAR</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">rtn_text</span> <span class="p">=</span> <span class="nx">clear</span><span class="p">(</span><span class="nx">channel_name</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="nx">rtn_text</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">validateParams</span><span class="p">(</span><span class="nx">text</span> <span class="kt">string</span><span class="p">)</span> <span class="kt">bool</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">command</span> <span class="kt">string</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="nx">strings</span><span class="p">.</span><span class="nx">Split</span><span class="p">(</span><span class="nx">text</span><span class="p">,</span> <span class="s">&quot; &quot;</span><span class="p">))</span> <span class="p">&lt;</span> <span class="mi">2</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="kc">false</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">command</span> <span class="p">=</span> <span class="nx">getCommand</span><span class="p">(</span><span class="nx">text</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">correct_commands</span> <span class="o">:=</span> <span class="p">[]</span><span class="kt">string</span><span class="p">{</span><span class="nx">ADD</span><span class="p">,</span> <span class="nx">LIST</span><span class="p">,</span> <span class="nx">DEL</span><span class="p">,</span> <span class="nx">CLEAR</span><span class="p">}</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">!</span><span class="nx">util</span><span class="p">.</span><span class="nx">Contains</span><span class="p">(</span><span class="nx">correct_commands</span><span class="p">,</span> <span class="nx">command</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="kc">false</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="kc">true</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">parseText</span><span class="p">(</span><span class="nx">text</span> <span class="kt">string</span><span class="p">)</span> <span class="p">(</span><span class="nx">command</span> <span class="kt">string</span><span class="p">,</span> <span class="nx">post_text</span> <span class="kt">string</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">command</span> <span class="p">=</span> <span class="nx">getCommand</span><span class="p">(</span><span class="nx">text</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">post_text</span> <span class="p">=</span> <span class="nx">getMessage</span><span class="p">(</span><span class="nx">text</span><span class="p">)</span>
</span><span class='line'>  <span class="k">return</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">getTriggerWord</span><span class="p">(</span><span class="nx">text</span> <span class="kt">string</span><span class="p">)</span> <span class="kt">string</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">strings</span><span class="p">.</span><span class="nx">Split</span><span class="p">(</span><span class="nx">text</span><span class="p">,</span> <span class="s">&quot; &quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">getCommand</span><span class="p">(</span><span class="nx">text</span> <span class="kt">string</span><span class="p">)</span> <span class="kt">string</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">strings</span><span class="p">.</span><span class="nx">Split</span><span class="p">(</span><span class="nx">text</span><span class="p">,</span> <span class="s">&quot; &quot;</span><span class="p">)[</span><span class="mi">1</span><span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">getMessage</span><span class="p">(</span><span class="nx">text</span> <span class="kt">string</span><span class="p">)</span> <span class="kt">string</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="nx">strings</span><span class="p">.</span><span class="nx">Split</span><span class="p">(</span><span class="nx">text</span><span class="p">,</span> <span class="s">&quot; &quot;</span><span class="p">))</span> <span class="p">&gt;</span> <span class="mi">2</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="nx">strings</span><span class="p">.</span><span class="nx">Split</span><span class="p">(</span><span class="nx">text</span><span class="p">,</span> <span class="s">&quot; &quot;</span><span class="p">)[</span><span class="mi">2</span><span class="p">]</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="s">&quot;&quot;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">add</span><span class="p">(</span><span class="nx">channel_name</span> <span class="kt">string</span><span class="p">,</span> <span class="nx">message</span> <span class="kt">string</span><span class="p">)</span> <span class="kt">string</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// ディレクトリの作成</span>
</span><span class='line'>  <span class="nx">err</span> <span class="o">:=</span> <span class="nx">os</span><span class="p">.</span><span class="nx">MkdirAll</span><span class="p">(</span><span class="nx">STORE_DIR</span><span class="p">,</span> <span class="mo">0777</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">util</span><span class="p">.</span><span class="nx">Perror</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">file_path</span> <span class="o">:=</span> <span class="nx">getStoredPath</span><span class="p">(</span><span class="nx">channel_name</span><span class="p">)</span>
</span><span class='line'>  <span class="c1">// ファイルがなかったら作る</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">!</span><span class="nx">util</span><span class="p">.</span><span class="nx">FileExists</span><span class="p">(</span><span class="nx">file_path</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">util</span><span class="p">.</span><span class="nx">CreateFile</span><span class="p">(</span><span class="nx">file_path</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">f</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">os</span><span class="p">.</span><span class="nx">OpenFile</span><span class="p">(</span><span class="nx">file_path</span><span class="p">,</span> <span class="nx">os</span><span class="p">.</span><span class="nx">O_APPEND</span><span class="p">|</span><span class="nx">os</span><span class="p">.</span><span class="nx">O_WRONLY</span><span class="p">,</span> <span class="mo">0600</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="s">&quot;ファイルのオープンに失敗しました&quot;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">defer</span> <span class="nx">f</span><span class="p">.</span><span class="nx">Close</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">message</span> <span class="p">=</span> <span class="nx">strings</span><span class="p">.</span><span class="nx">Replace</span><span class="p">(</span><span class="nx">message</span><span class="p">,</span> <span class="s">&quot;\n&quot;</span><span class="p">,</span> <span class="s">&quot; &quot;</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">err</span> <span class="p">=</span> <span class="nx">f</span><span class="p">.</span><span class="nx">WriteString</span><span class="p">(</span><span class="nx">message</span> <span class="o">+</span> <span class="s">&quot;\n&quot;</span><span class="p">);</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="s">&quot;書き込みに失敗しました&quot;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">lines</span><span class="p">,</span> <span class="nx">_</span> <span class="o">:=</span> <span class="nx">getList</span><span class="p">(</span><span class="nx">file_path</span><span class="p">)</span>
</span><span class='line'>  <span class="k">return</span> <span class="s">&quot;登録に成功しました :wink: \n 現在のタスク \n- &quot;</span> <span class="o">+</span> <span class="nx">strings</span><span class="p">.</span><span class="nx">Join</span><span class="p">(</span><span class="nx">lines</span><span class="p">,</span> <span class="s">&quot;\n- &quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">list</span><span class="p">(</span><span class="nx">channel_name</span> <span class="kt">string</span><span class="p">)</span> <span class="kt">string</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">file_path</span> <span class="o">:=</span> <span class="nx">getStoredPath</span><span class="p">(</span><span class="nx">channel_name</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="p">!</span><span class="nx">util</span><span class="p">.</span><span class="nx">FileExists</span><span class="p">(</span><span class="nx">file_path</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="s">&quot;まだ何も書き込まれていません&quot;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">lines</span><span class="p">,</span> <span class="nx">_</span> <span class="o">:=</span> <span class="nx">getList</span><span class="p">(</span><span class="nx">file_path</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="s">&quot;現在のタスクです。\n気張っていきましょー :kissing_heart: \n\n- &quot;</span> <span class="o">+</span> <span class="nx">strings</span><span class="p">.</span><span class="nx">Join</span><span class="p">(</span><span class="nx">lines</span><span class="p">,</span> <span class="s">&quot;\n- &quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">del</span><span class="p">(</span><span class="nx">channel_name</span> <span class="kt">string</span><span class="p">,</span> <span class="nx">message</span> <span class="kt">string</span><span class="p">)</span> <span class="kt">string</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">del_flg</span> <span class="kt">bool</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">new_lines</span> <span class="p">[]</span><span class="kt">string</span>
</span><span class='line'>  <span class="nx">message</span> <span class="p">=</span> <span class="nx">strings</span><span class="p">.</span><span class="nx">Replace</span><span class="p">(</span><span class="nx">message</span><span class="p">,</span> <span class="s">&quot;\n&quot;</span><span class="p">,</span> <span class="s">&quot; &quot;</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">file_path</span> <span class="o">:=</span> <span class="nx">getStoredPath</span><span class="p">(</span><span class="nx">channel_name</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="p">!</span><span class="nx">util</span><span class="p">.</span><span class="nx">FileExists</span><span class="p">(</span><span class="nx">file_path</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="s">&quot;まだ何も書き込まれていません&quot;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">lines</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">util</span><span class="p">.</span><span class="nx">ReadLines</span><span class="p">(</span><span class="nx">file_path</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">log</span><span class="p">.</span><span class="nx">Fatalf</span><span class="p">(</span><span class="s">&quot;readLines: %s&quot;</span><span class="p">,</span> <span class="nx">err</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="nb">len</span><span class="p">(</span><span class="nx">lines</span><span class="p">);</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">lines</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">==</span> <span class="nx">message</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">del_flg</span> <span class="p">=</span> <span class="kc">true</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">if</span> <span class="nx">lines</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">!=</span> <span class="nx">message</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">new_lines</span> <span class="p">=</span> <span class="nb">append</span><span class="p">(</span><span class="nx">new_lines</span><span class="p">,</span> <span class="nx">lines</span><span class="p">[</span><span class="nx">i</span><span class="p">])</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="nx">del_flg</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="nx">new_lines</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">if</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">os</span><span class="p">.</span><span class="nx">Remove</span><span class="p">(</span><span class="nx">file_path</span><span class="p">);</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>              <span class="k">return</span> <span class="s">&quot;クリアに失敗しました&quot;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">content</span> <span class="o">:=</span> <span class="p">[]</span><span class="nb">byte</span><span class="p">(</span><span class="nx">strings</span><span class="p">.</span><span class="nx">Join</span><span class="p">(</span><span class="nx">new_lines</span><span class="p">,</span> <span class="s">&quot;\n&quot;</span><span class="p">)</span> <span class="o">+</span> <span class="s">&quot;\n&quot;</span><span class="p">)</span>
</span><span class='line'>          <span class="nx">ioutil</span><span class="p">.</span><span class="nx">WriteFile</span><span class="p">(</span><span class="nx">file_path</span><span class="p">,</span> <span class="nx">content</span><span class="p">,</span> <span class="mo">0600</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="nx">new_lines</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">lines</span><span class="p">,</span> <span class="nx">_</span> <span class="p">=</span> <span class="nx">getList</span><span class="p">(</span><span class="nx">file_path</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="k">return</span> <span class="s">&quot;削除に成功しました :neutral_face: \n 残りのタスク \n- &quot;</span> <span class="o">+</span> <span class="nx">strings</span><span class="p">.</span><span class="nx">Join</span><span class="p">(</span><span class="nx">lines</span><span class="p">,</span> <span class="s">&quot;\n- &quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="s">&quot;一致するものが見つかりませんでした&quot;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">clear</span><span class="p">(</span><span class="nx">channel_name</span> <span class="kt">string</span><span class="p">)</span> <span class="kt">string</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">file_path</span> <span class="o">:=</span> <span class="nx">getStoredPath</span><span class="p">(</span><span class="nx">channel_name</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">os</span><span class="p">.</span><span class="nx">Remove</span><span class="p">(</span><span class="nx">file_path</span><span class="p">);</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="s">&quot;クリアに失敗しました&quot;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="s">&quot;クリアしました&quot;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">getStoredPath</span><span class="p">(</span><span class="nx">channel_name</span> <span class="kt">string</span><span class="p">)</span> <span class="kt">string</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">STORE_DIR</span> <span class="o">+</span> <span class="s">&quot;/&quot;</span> <span class="o">+</span> <span class="nx">channel_name</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">getList</span><span class="p">(</span><span class="nx">file_path</span> <span class="kt">string</span><span class="p">)</span> <span class="p">([]</span><span class="kt">string</span><span class="p">,</span> <span class="kt">error</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">lines</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">util</span><span class="p">.</span><span class="nx">ReadLines</span><span class="p">(</span><span class="nx">file_path</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">log</span><span class="p">.</span><span class="nx">Fatalf</span><span class="p">(</span><span class="s">&quot;readLines: %s&quot;</span><span class="p">,</span> <span class="nx">err</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="nx">lines</span><span class="p">,</span> <span class="nx">err</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[i18nで例えば大人と子供で文言を変えたい場合]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/10/28/inject-identifier-from-context/"/>
        <updated>2015-10-28T20:41:26+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/10/28/inject-identifier-from-context</id>
        <content type="html"><![CDATA[<p>条件に応じて文言を変えたい場合があると思います。<br/>
例えば大人と子供で文言を変えたい場合とかですかね。<br/>
ログインユーザが大人の場合は大人料金と表示し、子供の場合は子供料金と表示するようにします。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='erb'><span class='line'><span class="cp">&lt;%</span> <span class="k">if</span> <span class="n">current_user</span><span class="o">.</span><span class="n">adult?</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">  &lt;span&gt;大人料金&lt;/span&gt;</span>
</span><span class='line'><span class="cp">&lt;%</span> <span class="k">else</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">  &lt;span&gt;子供料金&lt;/span&gt;</span>
</span><span class='line'><span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>これが一箇所ならいいですが、たくさん出現するとつらいですね。<br/>
helperにまとめたりするのでしょうか。<br/>
こういった文言だけのif文分岐がviewに大量に出現するとコード量も増え非常に見ずらく、またhelperに乱立してしまうのは避けたいですね。</p>

<p>そこで自動でi18nの読み込み先を条件に応じて読み替えたいと思います</p>

<p>ついでにjpmobile使用してviewをpcとスマフォで切り替えている場合に<br/>
lazy lookup記法時にスマフォページでsmart_phoneがついているlocaleを探してしまうのを防ぎます。</p>

<!-- more -->


<p>config/initializers/switch_translation_helper.rbを作ります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">SwitchTranslationHelper</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">translate</span><span class="p">(</span><span class="n">key</span><span class="p">,</span> <span class="n">options</span> <span class="o">=</span> <span class="p">{})</span>
</span><span class='line'>    <span class="n">prefix</span> <span class="o">=</span> <span class="n">current_user</span><span class="o">.</span><span class="n">adult?</span> <span class="p">?</span> <span class="s2">&quot;adult&quot;</span> <span class="p">:</span> <span class="s2">&quot;child&quot;</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">request</span><span class="o">.</span><span class="n">smart_phone?</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">key</span><span class="o">.</span><span class="n">start_with?</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="vi">@virtual_path</span><span class="o">.</span><span class="n">end_with?</span><span class="p">(</span><span class="s2">&quot;_smart_phone&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="vi">@virtual_path</span><span class="o">.</span><span class="n">gsub!</span><span class="p">(</span><span class="s2">&quot;_smart_phone&quot;</span><span class="p">,</span> <span class="s2">&quot;&quot;</span><span class="p">)</span> <span class="c1"># jpmobileが付与する_smart_phoneを削除</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="n">prefix</span><span class="o">.</span><span class="n">present?</span>
</span><span class='line'>      <span class="n">key</span> <span class="o">=</span> <span class="n">scope_key_by_partial</span><span class="p">(</span><span class="n">key</span><span class="p">)</span>
</span><span class='line'>      <span class="n">key</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">prefix</span><span class="si">}</span><span class="s2">.</span><span class="si">#{</span><span class="n">key</span><span class="si">}</span><span class="s2">&quot;</span> <span class="c1"># 先頭にprefixを差し込む </span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">super</span><span class="p">(</span><span class="n">key</span><span class="p">,</span> <span class="n">options</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="n">A</span><span class="p">)</span>
</span><span class='line'><span class="k">module</span> <span class="nn">ActionView</span>
</span><span class='line'>  <span class="k">module</span> <span class="nn">Helpers</span>
</span><span class='line'>    <span class="k">module</span> <span class="nn">TranslationHelper</span>
</span><span class='line'>      <span class="n">prepend</span> <span class="no">SwitchTranslationHelper</span>
</span><span class='line'>      <span class="k">alias</span> <span class="ss">:t</span> <span class="ss">:translate</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>上記の(A)でActionView::Helpers::TranslationHelperを再オープンしてprependでSwitchTranslationHelperを差し込みます。<br/>
これでメソッド呼び出しの順序がSwitchTranslationHelperのtransalteメソッドの方が先に呼ばれるようになります。<br/>
aliasは呼ばれたクロージャ的な動きで呼ばれた段階のメソッドが固定されるようなので再度SwitchTranslationHelperのメソッドを向くように設定しなおしています。</p>

<p>transalateメソッドではキーの先頭に大人ならadult、子供ならchildを挿入します。<br/>
またlazy lookup(先頭に.がついている呼びだし)時に<em>smart_phoneが含まれるview内の場合ではpcもスマフォも同一の文言を使いたいのでキーから</em>smart_phoneを削除しています。<br/>
その後superを読んで元のRailsのi18nの流れへ戻しています。<br/>
次にja.ymlを作ります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">ja</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="c1"># 大人の設定</span>
</span><span class='line'>  <span class="l-Scalar-Plain">adult</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">price</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">show</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">fee</span><span class="p-Indicator">:</span> <span class="s">&quot;大人料金&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 子供の設定</span>
</span><span class='line'>  <span class="l-Scalar-Plain">child</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">price</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">show</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">fee</span><span class="p-Indicator">:</span> <span class="s">&quot;子供料金&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>これでpriceコントローラのshowアクションのテンプレート内で</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='erb'><span class='line'><span class="cp">&lt;%=</span> <span class="n">t</span><span class="p">(</span><span class="s2">&quot;.fee&quot;</span><span class="p">)</span> <span class="cp">%&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>とすると、ユーザが大人の場合は大人料金。<br/>
ユーザが子供の場合は子供料金と表示されます。</p>

<p>prefixの条件を変えることで読込先をうまく切り替えることができますね。</p>
]]></content>
    </entry>
    
</feed>
