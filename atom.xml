<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

    <title><![CDATA[なんとなく日々徒然と]]></title>
    <link href="http://yoshitsugufujii.github.io/atom.xml" rel="self"/>
    <link href="http://yoshitsugufujii.github.io/"/>
    <updated>2019-10-10T14:55:23+09:00</updated>
    <id>http://yoshitsugufujii.github.io/</id>
    <author>
        <name><![CDATA[Yoshitsugu Fujii]]></name>
        
    </author>
    <generator uri="http://octopress.org/">Octopress</generator>

    
    <entry>
        <title type="html"><![CDATA[市川 サヨリ]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2019/10/10/sayori/"/>
        <updated>2019-10-10T14:48:46+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2019/10/10/sayori</id>
        <content type="html"><![CDATA[<p>週末台風で何もできなさそうなので仕事前の３０分だけ釣りしました。</p>

<!-- more -->  




<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>  <br/>
<ins class="adsbygoogle"  
     style="display:block; text-align:center;"  
     data-ad-layout="in-article"  
     data-ad-format="fluid"  
     data-ad-client="ca-pub-7039502723411845"  
     data-ad-slot="8206045005"></ins></p>

<script>    
     (adsbygoogle = window.adsbygoogle || []).push({});    
</script>


<p></p>

<p>人がいっぱいいるためコマセがきいているのかすぐに釣れます。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20191009/IMG_2568.JPG"></p>

<p>30分で4匹で帰宅。</p>

<p>棒フライにしました。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20191009/IMG_2571.JPG">
<img src="http://yoshitsugufujii.github.io/images/blog/20191009/IMG_2572.JPG"></p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[葉山 ボート釣り イナダ シイラ フグ ソウダガツオ サバ]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2019/10/09/zushi-boat/"/>
        <updated>2019-10-09T15:07:21+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2019/10/09/zushi-boat</id>
        <content type="html"><![CDATA[<p>ドキドキの初ボート釣りに友達と行ってきました。</p>

<!-- more -->    




<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>  <br/>
<ins class="adsbygoogle"  
     style="display:block; text-align:center;"  
     data-ad-layout="in-article"  
     data-ad-format="fluid"  
     data-ad-client="ca-pub-7039502723411845"  
     data-ad-slot="8206045005"></ins></p>

<script>    
     (adsbygoogle = window.adsbygoogle || []).push({});    
</script>


<p></p>

<p>を妻が使うため電車になったんですが始発では間に合わないため前日の夜から友達の家に泊めてもらいます。</p>

<p>4時半に起床して途中コンビニによって朝ごはんすませながら到着。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20191005/IMG_2414.JPG"><br/>
<img src="http://yoshitsugufujii.github.io/images/blog/20191005/IMG_2415.JPG"></p>

<p>富士山が綺麗です。<br/>
日中33度まであがるらしいですが、寒い。</p>

<p>友達からアネロンの差し入れ。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20191005/IMG_2416.jpg"></p>

<p>ちらほらと他のお客さんも。そして受付がはじまります。</p>

<p>ボート割り当てられ荷物載せる。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20191005/IMG_2420.JPG"></p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20191005/IMG_2421.JPG"></p>

<p>人生で初めてのビシもセット。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20191005/IMG_2425.JPG"></p>

<p>今回はスピニングと人生初のベイトの組み合わせ。</p>

<p>シマノ グラップラーBB S632   + DAIWA BG3500<br/>
メジャークラフト ソルパラ SPJ-B64L/TR + シマノ グラップラーＢＢ ２００ＨＧ</p>

<p>ソルパラは平塚の釣り具屋さんで半額4034円でした。<br/>
平塚は釣り具屋がたくさんあって安くて最高ですね。</p>

<p>潮回りはこんな感じ。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20191005/IMG_2431.PNG"></p>

<p>朝は曳舟サービスがあります。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20191005/IMG_2440.JPG"></p>

<p>砂場、根周り、沖ブイを受付の時に聞かれているのでそれぞれの場所で連結を切り離されていきます。</p>

<p>我々は沖ブイへ。</p>

<p>沖ブイへボートをつなげ、そのつながったボートに他のボートがつながっているので安心です。そしてオールは一回もこぎません。</p>

<p>オキアミが溶けてなかったのでジグをやってみるが初ベイトなので２回目でバッククラッシュ。</p>

<p>ジグに反応なく、30分くりやってオキアミが溶けたのでビジに変更。</p>

<p>しばらくやってソウダガツオ。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20191005/IMG_2458.JPG"></p>

<p>イナダ</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20191005/IMG_2461.JPG"></p>

<p>あれ下に落ちていかないなぁ。てか横にながされてる？と思ったらかかってたシイラ</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20191005/IMG_2462.JPG"></p>

<p>イナダ</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20191005/IMG_2466.JPG"></p>

<p>ソウダガツオ</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20191005/IMG_2467.JPG"></p>

<p>隣のボートの人がサバ釣ってて棚が15Mって言っていたのを聞き耳たてて釣ったサバ</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20191005/IMG_2476.JPG"></p>

<p>午後は風と波がでるからできないかもなんて出船の時に言われていて１２時ぐらいからボート屋のおじさんが沖ブイ周辺にずっと待機してくれていたんですが、最終14時まで釣りを楽しめました。</p>

<p>友達は真鯛釣っていて心底羨ましかったです</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20191005/IMG_2496.JPG"></p>

<p>釣果</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20191005/IMG_2531.JPG"></p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20191005/IMG_2525.JPG"><br/>
<img src="http://yoshitsugufujii.github.io/images/blog/20191005/IMG_2527.JPG"><br/>
<img src="http://yoshitsugufujii.github.io/images/blog/20191005/IMG_2529.JPG"></p>

<p>ソウダガツオは炙りとあら煮に。<br/>
イナダは２匹おすそ分けして残った一匹を1日おいて、あら煮と刺身に。<br/>
サバとシイラは竜田揚げにしました、</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20191005/IMG_2533.jpg"><br/>
<img src="http://yoshitsugufujii.github.io/images/blog/20191005/IMG_2536.JPG"><br/>
<img src="http://yoshitsugufujii.github.io/images/blog/20191005/IMG_2538.JPG"><br/>
<img src="http://yoshitsugufujii.github.io/images/blog/20191005/IMG_2539.JPG"></p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[浦安市総合公園 サヨリ]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2019/09/30/urayasushi-sougou-parke-sayori/"/>
        <updated>2019-09-30T16:54:41+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2019/09/30/urayasushi-sougou-parke-sayori</id>
        <content type="html"><![CDATA[<p>娘の登り棒の練習がしたくて、浦安市総合公園に行きました。</p>

<p>ついでにサヨリ狙ってみました。</p>

<!-- more -->    




<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>  <br/>
<ins class="adsbygoogle"  
     style="display:block; text-align:center;"  
     data-ad-layout="in-article"  
     data-ad-format="fluid"  
     data-ad-client="ca-pub-7039502723411845"  
     data-ad-slot="8206045005"></ins></p>

<script>    
     (adsbygoogle = window.adsbygoogle || []).push({});    
</script>


<p></p>

<p>弱い向かい風ですが、やってみます。<br/>
釣り場はイナダ狙いなんですかね？<br/>
サヨリ釣りの人が一人いて、あとはルアーマンがほとんど。</p>

<p>2投目で釣れました。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190930/IMG_2401.JPG"></p>

<p>そのあと4投目で回収直前４、５回あたりがあるがのらず悶絶しながら投げたらバッククラッシュしました。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190930/IMG_2405.JPG"></p>

<p>あー。久しぶり&hellip;</p>

<p>現場で治そうとしましたがうまくいかずあきらめることに。</p>

<p>１匹だけ持ってかえってもしょうがないのでサヨリ釣りされている方にあげました。</p>

<p>ちなみに登り棒の方は公園の登り棒は滑りやすく棒も少し太くてやりずらそうでした。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[江戸川放水路 ハゼ]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2019/09/02/edogawa-housuiro-haze/"/>
        <updated>2019-09-02T18:45:38+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2019/09/02/edogawa-housuiro-haze</id>
        <content type="html"><![CDATA[<p>釣行日 2019年8月30日(土)<br/>
天気 晴<br/>
場所 江戸川放水路<br/>
釣行時間: 14:00 〜 15:20</p>

<p>朝一サーフィン行こうとしてたんですけど、波がなくて行く気が失せたので１ヶ月ぶりのハゼ釣り。<br/>
全然釣りしていないですね。</p>

<!-- more -->  




<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>
<ins class="adsbygoogle"
     style="display:block; text-align:center;"
     data-ad-layout="in-article"
     data-ad-format="fluid"
     data-ad-client="ca-pub-7039502723411845"
     data-ad-slot="8206045005"></ins></p>

<script>  
     (adsbygoogle = window.adsbygoogle || []).push({});  
</script>


<p></p>

<p>1２時から潮があがるそうなので12時頃つくと良さそう。</p>

<p>ハゼクラ用意して、</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190830/IMG_1733.JPG"></p>

<p>お酒用意して(中身はジムビーム)</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190830/IMG_1739.JPG"></p>

<p>早めにご飯食べて行こうと、11時に家族と家を出まして<br/>
そうだ１１月の海外旅行のためにパスポート写真撮らなきゃと写真とって、カレーを食べてたら気づいたら13時半。</p>

<p>私も行きたいという娘に</p>

<p>「あとでお母さんと来な。」</p>

<p>と言い残し猛スピードで向かいます。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190830/IMG_1735.JPG"></p>

<p>着いた時の潮回り</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190830/IMG_1741.PNG"></p>

<p>上げにはいってからの１時間半が好きなんで微妙にはずしています。</p>

<p>とりあえず立ち込んで釣り。</p>

<p>水はクリア。</p>

<p>数投でさくっと。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190830/IMG_1743.JPG"></p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190830/IMG_1744.JPG"></p>

<p>マイクロクラピーDR リコピンク。<br/>
このルアーでしか釣れなかった。</p>

<p>キャッチしてすぐリリースしていきます。</p>

<p>スレ(ごめん)</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190830/IMG_1746.JPG"></p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190830/IMG_1747.JPG"></p>

<p>ぐえー。釣られたーっていってそうな１匹</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190830/IMG_1748.JPG">  <br/>
<img src="http://yoshitsugufujii.github.io/images/blog/20190830/IMG_1749.JPG"></p>

<p>そして再びスレ</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190830/IMG_1753.JPG">  <br/>
<img src="http://yoshitsugufujii.github.io/images/blog/20190830/IMG_1754.JPG"></p>

<p>そしてパタッとあたりがなくなる。</p>

<p>さっきまで足元にいたハゼもいなくなる。</p>

<p>暇なのでZoffの偏光レンズかけた時とかけてない時をとってみる。</p>

<p>メガネなし<br/>
<img src="http://yoshitsugufujii.github.io/images/blog/20190830/IMG_1750.JPG"></p>

<p>メガネあり<br/>
<img src="http://yoshitsugufujii.github.io/images/blog/20190830/IMG_1752.JPG"></p>

<p>ちなみに度ありです。</p>

<p>頑張ってくれたルアー達。<br/>
<img src="http://yoshitsugufujii.github.io/images/blog/20190830/IMG_1755.JPG"></p>

<p>妻に「帰るよー。」って連絡すると「娘ラピュタみてるよー」というのでじゃあいいかなと思って帰宅。</p>

<p>私の姿を見るなり娘は「行きたかった」となきはじめたのでまさかの２回戦。</p>

<p>満潮だったので放水路のテトラで穴釣りスタイルでやることに。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190830/IMG_1763.JPG"></p>

<p>すでに夕日なので急ぎます。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190830/IMG_1756.JPG"></p>

<p>餌は冷凍庫で１年熟成されたオキアミ。</p>

<p>ファーストヒットはカニ。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190830/IMG_1767.JPG"></p>

<p>ががっと何かがあたる穴を見つけてなんとか釣り上げると</p>

<p>お前は誰だ</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190830/IMG_1758.JPG"></p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190830/IMG_1779.JPG"></p>

<p>そしてハゼを１匹つりあげて終了</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190830/IMG_1769.JPG"></p>

<p>カニが良く釣れた。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190830/IMG_1783.JPG"></p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[江戸川放水路 ハゼクラ]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2019/07/22/edogawahosuiro-haze/"/>
        <updated>2019-07-22T11:36:01+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2019/07/22/edogawahosuiro-haze</id>
        <content type="html"><![CDATA[<p>釣行日 2019年7月20日(土)<br/>
天気 曇<br/>
場所 江戸川放水路<br/>
釣行時間: 9:30 〜 11:45</p>

<p>そろそろハゼクラでハゼ釣れるかなと思って久しぶりに江戸川放水路です。</p>

<!-- more -->  




<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>
<ins class="adsbygoogle"
     style="display:block; text-align:center;"
     data-ad-layout="in-article"
     data-ad-format="fluid"
     data-ad-client="ca-pub-7039502723411845"
     data-ad-slot="8206045005"></ins></p>

<script>  
     (adsbygoogle = window.adsbygoogle || []).push({});  
</script>


<p></p>

<p>自転車でできたばかり行徳橋を通って、</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190722/IMG_0894.JPG"></p>

<p>いつものところへ。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190722/IMG_0896.JPG"></p>

<p>潮は中潮、満潮からの下げ3分</p>

<p>竿は上州屋のくじ引きで１等当たっときに買ったムカイのハゼクラロッド ホワイトバードに、<br/>
セドナ1000とフロロ0.3号。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190722/IMG_0897.JPG"></p>

<p>昔やった時はやってる人なんてあんまりいなかったですが、ハゼクラの人４人くらいいました。</p>

<p>追っかけてはきているんですが、小さいのと活性がひくいのかなかなか釣れず、<br/>
１匹目は30分ほど頑張ってようやく。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190722/IMG_0901.JPG"></p>

<p>その後ポツポツと、</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190722/IMG_0912.JPG"></p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190722/IMG_0913.JPG"></p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190722/IMG_0917.JPG"></p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190722/IMG_0921.JPG"></p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190722/IMG_0923.JPG"></p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190722/IMG_0925.JPG"></p>

<p>一番大きいやつ。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190722/IMG_0926.JPG"></p>

<p>楽しかったです。</p>

<p>他のハゼクラやられていた方がめちゃくちゃ引いていてなんだ？と思ったらエイのスレがかりでした。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[ActiveStorageのDirectUploadでGCSでCORS]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2019/07/12/gcs-cors/"/>
        <updated>2019-07-12T10:55:48+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2019/07/12/gcs-cors</id>
        <content type="html"><![CDATA[<p>GCP上で動かしたらエラーになったのでメモ。</p>

<!-- more -->




<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"
     style="display:block; text-align:center;"
     data-ad-layout="in-article"
     data-ad-format="fluid"
     data-ad-client="ca-pub-7039502723411845"
     data-ad-slot="8206045005"></ins></p>

<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<p>GCSにアップしようとしたら、こんなエラーがでました。</p>

<p>Access to XMLHttpRequest at &lsquo;<a href="https://storage.googleapis.com/">https://storage.googleapis.com/</a><BUCKET NAME>/&lt;ずらずらとcredentialやexpireの情報>&rsquo; from origin &lsquo;<a href="https://hogehoge.com">https://hogehoge.com</a>&rsquo; has been blocked by CORS policy: Response to preflight request doesn&rsquo;t pass access control check: No &lsquo;Access-Control-Allow-Origin&rsquo; header is present on the requested resource.</p>

<p>いくつか設定の仕方があるらしいですがgsutilを使ったやり方でGCSのBucketにCORS対応します。<br/>
(AWSみたいにWEBからは設定できないようです)</p>

<p>まずjsonファイルを作ります。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[
</span><span class='line'>  {
</span><span class='line'>    "origin": ["https://hogehoge.com"],
</span><span class='line'>    "responseHeader": ["Content-Type", "Content-Md5"],
</span><span class='line'>    "method": ["*"],
</span><span class='line'>    "maxAgeSeconds": 3600
</span><span class='line'>  }
</span><span class='line'>]</span></code></pre></td></tr></table></div></figure>


<p>originは全部許可する場合はアスタリスクでも可です。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[
</span><span class='line'>  {
</span><span class='line'>    "origin": ["*"],
</span><span class='line'>    "responseHeader": ["Content-Type", "Content-Md5"],
</span><span class='line'>    "method": ["*"],
</span><span class='line'>    "maxAgeSeconds": 3600
</span><span class='line'>  }
</span><span class='line'>]</span></code></pre></td></tr></table></div></figure>


<p>これを設定します。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gsutil cors set &lt;上記作成したjson&gt; gs://&lt;bucket name&gt;  </span></code></pre></td></tr></table></div></figure>


<p>確認</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gsutil cors get gs://&lt;bucket name&gt;  </span></code></pre></td></tr></table></div></figure>


<p>で通るようになります。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[Railsでお手軽にメールを送る]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2019/07/08/simple-email-send/"/>
        <updated>2019-07-08T11:15:30+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2019/07/08/simple-email-send</id>
        <content type="html"><![CDATA[<p>お手軽にある特定のエラーなどの情報を簡単なワンメッセージを関係者に送りたい場合、</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rails generate mailer UserMailer</span></code></pre></td></tr></table></div></figure>


<p>とかやってテンプレートつかってってやると重厚すぎてつらい。</p>

<!-- more -->




<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>
<ins class="adsbygoogle"
     style="display:block; text-align:center;"
     data-ad-layout="in-article"
     data-ad-format="fluid"
     data-ad-client="ca-pub-7039502723411845"
     data-ad-slot="8206045005"></ins></p>

<script>  
     (adsbygoogle = window.adsbygoogle || []).push({});  
</script>


<p></p>

<p>ワンライナーでメールを送るにはこうやればいい。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ActionMailer::Base.mail(from: 'error@example.com', to: 'admin@example.com', subject: '何かエラーが発生しました', body: '設定を見直してください').deliver</span></code></pre></td></tr></table></div></figure>


<p>現場からは以上です。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[飲食店向けオーダーシステムを作った話]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2019/06/28/custom-order-system-development/"/>
        <updated>2019-06-28T13:50:12+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2019/06/28/custom-order-system-development</id>
        <content type="html"><![CDATA[<h2>要件</h2>

<p>飲食店向けレジジステム</p>

<p>いくつかの特殊な要件を含む飲食店向けのオーダーシステムの新規開発。<br/>
細かいものもいくつかありますが、大きなカスタマイズ要件としては</p>

<p>・１回目のチャージと２回目以降のチャージで料金が違う<br/>
・独自のポイント体系。<br/>
・チャージごとにドリンクの注文が必要<br/>
・お会計時に会計情報を別システムへFTP + CSV連携(かつAPIでも情報を取りたい)<br/>
・特定の注文が入った場合にアクションを起こしたい。</p>

<p>またレジは自動釣銭機に対応していなければなりません。</p>

<!-- more -->




<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"
     style="display:block; text-align:center;"
     data-ad-layout="in-article"
     data-ad-format="fluid"
     data-ad-client="ca-pub-7039502723411845"
     data-ad-slot="8206045005"></ins></p>

<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<h2>選定</h2>

<p>まず最初に思い描いた図はこうです。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190628/regi_0.jpg"><br/>
※青が開発範囲</p>

<p>オーダーはクラウドPOSで完結し、お会計が終わったら自分たちで開発したサーバーを経由して外部システムへお会計情報を流すようなイメージです。</p>

<p>まずは上記条件を元に製品のカスタマイズ可能なこと。APIを提供していてカスタマイズ可能なPOSレジを提供しているサービスの選定から行いました。<br/>
残念だったのはPOS業界どこの会社も問い合わせに対するレスポンスが非常に悪かったです。</p>

<p>POS CUBE・・・レスポンスなしのため除外<br/>
okage ・・・一番正解に近かったが、見送り<br/>
まかせてタッチ・・・自動釣銭金未対応のため除外<br/>
Uレジ・・・api未対応のため除外<br/>
スマレジ ・・・apiも自動釣銭機もあるが、カスタマイズ不可。<br/>
Airレジ・・・api未対応のため除外</p>

<p>結果スマレジを採用しました。</p>

<p>レスポンスが悪いという話がありましたがスマレジサポートはしっかりしていて問い合わせにかなり正確な答えをレスポンス良く返してくれたので非常にありがたかったです(だいたい1営業日以内にレスポンスしてくれます)</p>

<p>カスタマイズできない部分はオーダーシステムを自作してapi経由でデータを連携することにしました。</p>

<h2>実装</h2>

<h3>技術</h3>

<p>Ruby 2.6.1<br/>
Ruby on Rails: 5.2.2<br/>
Vue.js: 2.6.6</p>

<h3>環境</h3>

<p>Google Cloud Platform<br/>
- Google Computer Engine<br/>
- Cloud SQL<br/>
- Cloud Storage<br/>
- Cloud Load Balancing<br/>
- Firebase</p>

<h3>プロジェクトチーム</h3>

<p>ディレクター 2名(稼働はほぼ1名)<br/>
サーバーサイド 1名(私)<br/>
アプリ/フロントエンド 1名<br/>
デザイナー 1名</p>

<p>オーダーシステム自作の気になる点としてはレシートプリンタの知識がなかったため、プリンタをどうするかという問題がありました。<br/>
スマレジwaiterを使えば、waiterのサーバーサイド印刷の機能でプリンタへ直接サーバーからレシートを印刷できるのでプリンタの制御もスマレジ側の仕組みに乗っかれることになります。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190628/regi_2.jpg"><br/>
※青が開発範囲</p>

<p>が、自作オーダーシステム管理画面からwaiterへのメニューのapiに金額がなく、メニューの同期項目が名称と出力プリンターの設定だけで、<br/>
waiterを使いたいのであれば、自作オーダーシステムの管理画面とwaiterの管理画面両方からメニューを入れる必要がでてきました。<br/>
プリンタの制御だけでwaiterを使うのは２重管理になる上に、スマレジPOSだけでなくスマレジ waiter側のシステムの制約も意識しなければならなくなる。<br/>
といったことが考えられ、デメリットの方が無視できなかったのでレシートプリンターも自前で制御することにしました。</p>

<p>自作に踏み切るためにエプソンの方にお話を伺うことができてかなり役立つ知識を得られたのがでかかったです。<br/>
ちなみにレシートプリンタはTM-m30が、キッチンとかハードに使う場面ではTM-T90KPがスタンダードみたいです。<br/>
テストは無償レンタルでTM-m30を利用し、本番環境ではTM-T90KPを利用しました。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190628/regi_1.jpg"><br/>
※青が開発範囲</p>

<p>またレシート印刷ができるようになったことで、システムで発行した一意な数値をバーコードでお客様伝票に印刷することができるようになりました。<br/>
これによりお客様がお客様伝票をレジにもってきたら、そのバーコードを読み取ることでお会計ができるようになります。</p>

<p>また、お会計へのレシートにはapiにあるreceiptMemoという項目を使ってオーダーシステムの獲得と累計会員ポイント数を表示するようにしています。</p>

<h1>振り返り</h1>

<p>当初の予定ではオーダーシステムもPOSも全て外部サービスを利用して、必要なデータをapiから取得するという構成を想定していたため最終的には全然違う形になりました。</p>

<p>カスタマイズ可能なクラウドPOSを提供している会社を見つけ、<br/>
発注したものの全然動いてくれないという状態に直面し、<br/>
いつできるのかわからない、こちら側が頑張ってもどうにもならないという状況になり、<br/>
プロジェクトが完全にアンコントロールな状態であったため、<br/>
プロジェクト運営が困難になることは予想されましたが、プロジェクトの健全度合いが著しく悪い状態であったためお断りをしてもらいました。<br/>
自分たちでプロジェクトをハンドリングできるようになって、いろいろと大変なこともありましたが終わってみるとやはり英断だったのかなと思います。</p>

<p>最近は外部の状況に振り回されることがあまりなかったのでやりたきことはそれほど難易度が高くないにも関わらず久しぶりに少し大変な案件でした。<br/>
一時期は迷走しすぎて自動釣銭機も自分たちで制御しようかとしたことさえありました。</p>

<p>が、最終的にはスマレジを利用することでかなりいい感じに仕上がったのではないかと思います。</p>

<p>またカスタムオーダーシステムにしたことでお客様の要望をかなり柔軟に取り入れることができ、クラウドPOSを使った場合にくらべるとかなり満足度が高いものになったのではないかと思います。</p>

<h1>最後に</h1>

<p>オーダーシステム開発のご要望がある方お待ちしております。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[Railsが自動で出すログ]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2019/06/25/rails-auto-logging/"/>
        <updated>2019-06-25T17:58:29+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2019/06/25/rails-auto-logging</id>
        <content type="html"><![CDATA[<p>StackDriverのgemを入れたらRails.loggerでlog/以下に出力できなくなってしまって調べたのでメモ。</p>

<!-- more -->




<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>
<ins class="adsbygoogle"
     style="display:block; text-align:center;"
     data-ad-layout="in-article"
     data-ad-format="fluid"
     data-ad-client="ca-pub-7039502723411845"
     data-ad-slot="8206045005"></ins></p>

<script>  
     (adsbygoogle = window.adsbygoogle || []).push({});  
</script>


<p></p>

<p>StackDriverを利用するとCloudLogging用のLoggerにRails.loggerが差し変わります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">logger</span><span class="o">.</span><span class="n">info</span><span class="p">(</span><span class="s1">&#39;hogehoge&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>とやってもRAILS_ROOT/log/production.logには表示されません。</p>

<p>だけどRailsが自動で出力してくれるController名やAction名。レンダリングしたviewの情報はlog/production.logに表示されます。</p>

<p>なんでかなと思って調べてみたらこちらControllerはRails.loggerに設定されているloggerを使ってませんでした。</p>

<p><a href="https://github.com/rails/rails/blob/master/actionpack/lib/action_controller/log_subscriber.rb#L76">https://github.com/rails/rails/blob/master/actionpack/lib/action_controller/log_subscriber.rb#L76</a></p>

<p>結局サーバー側でGoogle fluendが動かしてそっちで吸い上げることができるので</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">configure</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">google_cloud</span><span class="o">.</span><span class="n">use_logging</span> <span class="o">=</span> <span class="kp">false</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>にしました。<br/>
お手軽にlog/production.logで確認できて良い感じです。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[浦安 キス]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2019/06/06/urayasu-kisu/"/>
        <updated>2019-06-06T11:24:01+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2019/06/06/urayasu-kisu</id>
        <content type="html"><![CDATA[<p>実は次の日も行っていたんです。</p>

<p>釣行日 2019年06月02日(日)<br/>
天気 曇り<br/>
場所 浦安<br/>
釣行時間: 12:00 〜 14:00</p>

<!-- more -->  




<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>
<ins class="adsbygoogle"
   style="display:block; text-align:center;"
   data-ad-layout="in-article"
   data-ad-format="fluid"
   data-ad-client="ca-pub-7039502723411845"
   data-ad-slot="8206045005"></ins></p>

<script>  
   (adsbygoogle = window.adsbygoogle || []).push({});  
</script>


<p></p>

<p>前日に使っていた竿はこれ。長さ390</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190602/IMG_9833.JPG"></p>

<p>テトラ帯よりも竿長ければ問題ないだろうと秘密兵器投入。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190602/IMG_9832.JPG"></p>

<p>長さ530の投げ竿。</p>

<p>これで勝てる。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190602/IMG_9834.JPG"></p>

<p>潮見ずにいったら干潮から少しあげたところ。</p>

<p>中国人が大量の牡蠣とカニをテトラに潜り込んでとっていました。</p>

<p>前日の残りのジャリメをつけて実釣開始です。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190602/IMG_9835.JPG"></p>

<p>さて、長い竿を使えば取りこぼししないだろう作戦ですが。</p>

<p>つけているリールが太めのナイロンラインだったということもあって全然思ったより飛ばなかったことと、竿が長すぎて振り切れないのと、竿が重くて投げた後サビクのがつらいのとで早々に使うのやめました。</p>

<p>390のパワーキャストよりは多少ましだと思われるプライムサーフにチェンジ。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190602/IMG_9841.JPG"></p>

<p>プルルとあたり。２連。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190602/IMG_9838.JPG"></p>

<p>あたりは前日と同じく50メートルぐらい先ですね。</p>

<p>そのあともアタリが断続的に続き。</p>

<p>もう一度２連もあり。</p>

<p>7ゲット。3バラシでした。</p>

<p>まだまだやりたかったですが、予定があるので最後にいいサイズを釣って納竿です。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190602/IMG_9840.JPG"></p>

<p>今回はじめてフロート天秤つかってみましたがサビキやすくてよかったです。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190602/IMG_9843.JPG"></p>

<p>キスは唐揚げにしました。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190602/IMG_9847.JPG"></p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[浦安 キス]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2019/06/03/urayasu-kisu/"/>
        <updated>2019-06-03T15:03:30+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2019/06/03/urayasu-kisu</id>
        <content type="html"><![CDATA[<p>釣行日 2019年06月01日(土)<br/>
天気 曇り<br/>
場所 浦安<br/>
釣行時間: 15:30 〜 18:00</p>

<p>検見川でキス釣れているようですが、浦安にきました。</p>

<!-- more -->  




<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>
<ins class="adsbygoogle"
   style="display:block; text-align:center;"
   data-ad-layout="in-article"
   data-ad-format="fluid"
   data-ad-client="ca-pub-7039502723411845"
   data-ad-slot="8206045005"></ins></p>

<script>  
   (adsbygoogle = window.adsbygoogle || []).push({});  
</script>


<p></p>

<p>ジャリメ五百円で調達し突撃。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190601/IMG_9828.JPG"></p>

<p>久しぶりの投げ竿で普通に投げれなくなっていて、まずは投げ方からでした。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190601/IMG_9808.JPG"></p>

<p>投げ方が安定してくるとプルルというあたりが。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190601/IMG_9801.JPG"></p>

<p>そのあともあたり続けます。</p>

<p>サイズもいいですね。</p>

<p>17時を過ぎたあたりから毎投あたりが。</p>

<p>が、最初のうちは何の疑問もなく取り込んでましたが一度テトラにあたって魚が外れるということをしてしまってから<br/>
テトラ恐怖症に。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190601/IMG_9829.JPG"></p>

<p>結果9ゲット、手前のテトラにあたって取りこぼし8という痛ましい結果に。</p>

<p>みなさんうまく取り込んでおられるようでしたが、コツとかあるんでしょうか？</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190601/IMG_9831.JPG"></p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[犬がキシリトールを食べました]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2019/05/30/dog-eats-xylitol/"/>
        <updated>2019-05-30T11:00:36+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2019/05/30/dog-eats-xylitol</id>
        <content type="html"><![CDATA[<p>しまじろうの100%のイチゴ味とぶどう味のやつ。<br/>
娘が落としたのをパクっ。</p>

<!-- more -->




<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>
<ins class="adsbygoogle"
     style="display:block; text-align:center;"
     data-ad-layout="in-article"
     data-ad-format="fluid"
     data-ad-client="ca-pub-7039502723411845"
     data-ad-slot="8206045005"></ins></p>

<script>  
     (adsbygoogle = window.adsbygoogle || []).push({});  
</script>


<p></p>

<p>食べてしまったのであわててオキシドールで吐かせようとしましたが、古いオキシドールだったのと激しい抵抗にあい吐かせることできず。</p>

<p>結論何も変化は起こらず無事でした。</p>

<p>犬にキシリトール&hellip;</p>

<p>死亡例としてやたらとチワワの話がでてきていますが、それ一件しかないし、よくよく調べると嘘だったっていう記事もありどうなんですかね。</p>

<p>記事だと10キロの犬で1グラムで致死量とかかかれてました。<br/>
しまちゃんのキシリトールは1粒当たり約0.85gらしいです。</p>

<p>うちの犬はちなみに１０キロ弱ですね。</p>

<p>とはいえ中毒になってしまったら困るので吐かせたほうがいいんでしょうね。</p>

<p>ググっても前述のチワワの話と危険ですという内容しかでてこず、実際に食べちゃった人の体験談が書かれていなかったので書いてみました。</p>

<p>無事だった小梅さん</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190529/IMG_9691.JPG"></p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[船橋三番瀬 潮干狩り攻略]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2019/05/22/shiohigari-sanbanse/"/>
        <updated>2019-05-22T13:52:00+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2019/05/22/shiohigari-sanbanse</id>
        <content type="html"><![CDATA[<p><a href="http://yoshitsugufujii.github.io/blog/2016/05/06/funabashi-sanbanse/">過去</a>に行った<a href="http://www.park-funabashi.or.jp/bay/">ふなばし 三番瀬海浜公園</a>に３年ぶりに行ってきました。<br/>
前回は３人でしたが次女生まれているので４人ですね。</p>

<!-- more -->




<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>
<ins class="adsbygoogle"
     style="display:block; text-align:center;"
     data-ad-layout="in-article"
     data-ad-format="fluid"
     data-ad-client="ca-pub-7039502723411845"
     data-ad-slot="8206045005"></ins></p>

<script>  
     (adsbygoogle = window.adsbygoogle || []).push({});  
</script>


<p></p>

<p>いきなり本題それますが、クーラーボックスを新調。<br/>
肩がけできるので自転車釣行や小物釣りに良さそうです。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190519/IMG_9595.JPG"><br/>
<img src="http://yoshitsugufujii.github.io/images/blog/20190519/IMG_9596.JPG"><br/>
<img src="http://yoshitsugufujii.github.io/images/blog/20190519/IMG_9597.JPG"></p>

<p>ふなばし 三番瀬は相変わらずのフェスかと見間違えるほどの混みよう。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190519/IMG_9620.JPG"></p>

<p>４ブロックあって、３と４ブロックが潮干狩り会場になってました。<br/>
事前にコンビニで買った前売り券をもって入場。</p>

<p>入ってすぐのところに１キロ用の網が売っています。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190519/IMG_9639.JPG"></p>

<p>帰りの時間になると軽量にめちゃくちゃ人が並ぶので軽量めんどくさい場合はここで１キロの網を買うと軽量パスできます。</p>

<p>網は指先でつまめればいいというのでギリギリまでいれましょう。</p>

<p>ちなみにこの網は返品不可なのですがここで裏技。</p>

<p>この売り場の横に青いザルにいれられた無料の網が置いてあります。</p>

<p>この網がいっぱいにするとだいだい２キロとのこと(半分で１キロ)。</p>

<p>なのでこの網をもって潮干狩りをしてだいたいの目安にするといいです。</p>

<p>潮干狩り会場の前の売店で網売ってますが買う必要はないです。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190519/IMG_9637.JPG"></p>

<p>最初真ん中のあたりでやってましたが、奥に行くといいよと親切なおじさんに教えてもらったので一番奥にいきました<br/>
するとザクザクあさりがほれました。</p>

<p>手前でやるよりも最初から一番奥でやる方が正解ですね。</p>

<p>会場にはヤドカリやらカニやらがいて子供たち楽しそう、</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190519/IMG_9628.JPG"></p>

<p>1時間半ほどやって１キロだけお持ち帰りです。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190519/IMG_9651.JPG"></p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190519/IMG_9656.JPG"></p>

<p>貝は炊き込みご飯と酒蒸しに。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190519/IMG_9659.JPG"></p>

<p>酒蒸しの汁で次の日ボンゴレ風ペペロンチーノを作ったら絶品でした。</p>

<p>６月の上旬で終わってしまうのでもう一回ぐらい行ってみたいですね。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[CSVで文字列だけダブルクォートで囲みたい場合]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2019/05/17/csv-only-quoate-string/"/>
        <updated>2019-05-17T18:11:31+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2019/05/17/csv-only-quoate-string</id>
        <content type="html"><![CDATA[<p>数値は囲わず、文字列はダブルクォートで囲みたい。<br/>
<code>force_quotes: true</code>だと数値もクォートされる。</p>

<!-- more -->




<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>
<ins class="adsbygoogle"
     style="display:block; text-align:center;"
     data-ad-layout="in-article"
     data-ad-format="fluid"
     data-ad-client="ca-pub-7039502723411845"
     data-ad-slot="8206045005"></ins></p>

<script>  
     (adsbygoogle = window.adsbygoogle || []).push({});  
</script>


<p></p>

<h3>結論</h3>

<p><code>quote_char: ''</code>をオプションに指定して、渡す文字列の前後をダブルクォートで囲む。</p>

<h3>解説</h3>

<p>ここで<code>force_quotes:true</code>の分岐</p>

<p><a href="https://github.com/ruby/csv/blob/master/lib/csv/writer.rb#L139">https://github.com/ruby/csv/blob/master/lib/csv/writer.rb#L139</a></p>

<p>ここで<code>force_quotes:false</code>だった場合の分岐</p>

<p><a href="https://github.com/ruby/csv/blob/master/lib/csv/writer.rb#L147">https://github.com/ruby/csv/blob/master/lib/csv/writer.rb#L147</a></p>

<p>&ldquo;"hoge&rdquo;"</p>

<p>のような文字列を作っていると@quotable_patternに一致してしまい、</p>

<p>&ldquo;&rdquo;&ldquo;hoge&rdquo;&ldquo;&rdquo;</p>

<p>のような文字になってしまう。</p>

<p>のでquate_fieldで囲まれても問題ないようにから文字を設定してあげる。<br/>
<a href="https://github.com/ruby/csv/blob/master/lib/csv/writer.rb#L129-L136">https://github.com/ruby/csv/blob/master/lib/csv/writer.rb#L129-L136</a></p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[検見川浜突堤 イワシ]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2019/05/13/kemigawahama-iwashi/"/>
        <updated>2019-05-13T13:48:58+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2019/05/13/kemigawahama-iwashi</id>
        <content type="html"><![CDATA[<p>釣行日 2019年5月13日(日)<br/>
天気 曇<br/>
場所 検見川浜突堤<br/>
釣行時間: 16:00 〜 17:30</p>

<p>2年前から熟成している常温保存のコマセがあまっていて、いつか使い切らなきゃと思っていたところ。<br/>
検見川でイワシ釣れているようなので、久しぶりに釣りです。</p>

<!-- more -->  




<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>
<ins class="adsbygoogle"
     style="display:block; text-align:center;"
     data-ad-layout="in-article"
     data-ad-format="fluid"
     data-ad-client="ca-pub-7039502723411845"
     data-ad-slot="8206045005"></ins></p>

<script>  
     (adsbygoogle = window.adsbygoogle || []).push({});  
</script>


<p></p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190512/IMG_9564.JPG"></p>

<p>手前側はあまり釣れてなさそう。<br/>
カーブの終点手前ぐらいに釣り座を構えて釣ります。</p>

<p>にごりが強いです。</p>

<p>ダイソー百均4号の白スキンサビキでやります。</p>

<p>開始すぐにあたり。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190512/IMG_9565.JPG"></p>

<p>サイズいいです。</p>

<p>その後ずーっと釣れ続け。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190512/IMG_9567.JPG"></p>

<p>40匹ぐらい。まだまだ釣れそうでしたが処理を考えると大変だったので帰宅。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190512/IMG_9568.JPG"></p>

<p>久しぶりのイワシフライとなりました。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[railsでsubmitした後にsubmitボタンが押せない現象]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2019/03/14/disable-with-specific-button-diabled/"/>
        <updated>2019-03-14T19:00:25+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2019/03/14/disable-with-specific-button-diabled</id>
        <content type="html"><![CDATA[<p>だいぶ前にdisable_withの挙動デフォルトになったらしいです。<br/>
<a href="https://github.com/rails/rails/pull/21135/files">https://github.com/rails/rails/pull/21135/files</a></p>

<p>検索結果を絞り込んでCSV出力をしたい時等の画面遷移が発生しないsubmitでは非活性になると困りますね。</p>

<p>全体で無効にもできますが、disable_withを個別に無効にする方法です。</p>

<!-- more -->  




<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>
<ins class="adsbygoogle"
     style="display:block; text-align:center;"
     data-ad-layout="in-article"
     data-ad-format="fluid"
     data-ad-client="ca-pub-7039502723411845"
     data-ad-slot="8206045005"></ins></p>

<script>  
     (adsbygoogle = window.adsbygoogle || []).push({});  
</script>


<p></p>

<p>submitボタンに'data-disable-with' => falseを設定してあげると無効になります。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>= f.button :submit, I18n.t(".csv_download"), class: "btn-primary", 'data-disable-with' =&gt; false  </span></code></pre></td></tr></table></div></figure>


<p></p>

<p>ちなみに全体でfalseにしたい場合はこう</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>class Application &lt; Rails::Application  
</span><span class='line'>  config.action_view.automatically_disable_submit_tag = false # この行を追加  
</span><span class='line'>end  </span></code></pre></td></tr></table></div></figure>


<p></p>

<p>ソース見る限り全体禁止にして、各ボタンで有効にとかはできなさそうなので全体は注意が必要ですね。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[stackdriverを使ったらwarningメッセージがでる]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2019/03/12/stack-driver-waring/"/>
        <updated>2019-03-12T15:32:23+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2019/03/12/stack-driver-waring</id>
        <content type="html"><![CDATA[<p>StackdriverをGemfileのstagingとproduction Groupに追加した後に以下のwarningが表示されるようになった。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Your application has authenticated using end user credentials from Google Cloud SDK.
</span><span class='line'>We recommend that most server applications use service accounts instead.
</span><span class='line'>If your application continues to use end user credentials from Cloud SDK, you might receive a "quota exceeded" or "API not enabled" error.
</span><span class='line'>For more information about service accounts, see https://cloud.google.com/docs/authentication/.</span></code></pre></td></tr></table></div></figure>




<!-- more -->




<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"
     style="display:block; text-align:center;"
     data-ad-layout="in-article"
     data-ad-format="fluid"
     data-ad-client="ca-pub-7039502723411845"
     data-ad-slot="8206045005"></ins></p>

<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<p><a href="https://github.com/googleapis/google-cloud-ruby/blob/master/google-cloud-trace/lib/google/cloud/trace/rails.rb#L131">ここ</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># Done if Google::Cloud.configure.use_trace is explicitly false
</span><span class='line'>return if Google::Cloud.configure.use_trace == false</span></code></pre></td></tr></table></div></figure>


<p>でreturnしてくれそうだがreturnせずに後続の処理が行われてgcpのcredentialチェックまで走ってしまいエラーになっている模様<br/>
Google::Cloud.configure.use_traceの中身はnilになっているので条件一致せずに後続の処理が実行されている模様。<br/>
falseにしろってコメント書いてあるし。</p>

<p>なので設定してあげる。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># config/environments/development.rbに追記  
</span><span class='line'>Google::Cloud.configure.use_trace = false  
</span><span class='line'>Google::Cloud.configure.use_error_reporting = false  </span></code></pre></td></tr></table></div></figure>


<p></p>

<p>これでwargingはでなくなりました。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[GCSとActiveStorageを使った時に秘密鍵でエラー]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2019/02/27/gcs-private-key/"/>
        <updated>2019-02-27T16:57:03+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2019/02/27/gcs-private-key</id>
        <content type="html"><![CDATA[<p>サービスアカウントを発行して、キーを発行してその中身を</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bundle exec rails credentials:edit    </span></code></pre></td></tr></table></div></figure>


<p></p>

<p>してstorage.ymlで読み出そうとした時にprivate_keyに改行があるためにうまくいかなかった。</p>

<!-- more -->




<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"
     style="display:block; text-align:center;"
     data-ad-layout="in-article"
     data-ad-format="fluid"
     data-ad-client="ca-pub-7039502723411845"
     data-ad-slot="8206045005"></ins></p>

<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<p>dumpを使えばおっけー</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Rails.application.credentials.gcs[:private_key].dump</span></code></pre></td></tr></table></div></figure>


<p>全体はこう。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>google:
</span><span class='line'>  service: GCS
</span><span class='line'>  credentials:
</span><span class='line'>    type: "service_account"
</span><span class='line'>    project_id: &lt;%= Rails.application.credentials.gcs[:project_id] %&gt;
</span><span class='line'>    private_key_id: &lt;%= Rails.application.credentials.gcs[:private_key_id] %&gt;
</span><span class='line'>    private_key: &lt;%= Rails.application.credentials.gcs[:private_key].dump %&gt;
</span><span class='line'>    client_email: &lt;%= Rails.application.credentials.gcs[:client_email] %&gt;
</span><span class='line'>    client_id: &lt;%= Rails.application.credentials.gcs[:client_id] %&gt;
</span><span class='line'>    auth_uri: "https://accounts.google.com/o/oauth2/auth"
</span><span class='line'>    token_uri: "https://accounts.google.com/o/oauth2/token"
</span><span class='line'>    auth_provider_x509_cert_url: "https://www.googleapis.com/oauth2/v1/certs"
</span><span class='line'>    client_x509_cert_url: &lt;%= Rails.application.credentials.gcs[:client_x509_cert_url] %&gt;
</span><span class='line'>  project: ''</span></code></pre></td></tr></table></div></figure>


<p>参考
<a href="https://github.com/rails/rails/blob/master/guides/source/active_storage_overview.md">https://github.com/rails/rails/blob/master/guides/source/active_storage_overview.md</a></p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[高滝湖 ワカサギ]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2019/02/20/takatakiko-wakasagi/"/>
        <updated>2019-02-20T12:02:45+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2019/02/20/takatakiko-wakasagi</id>
        <content type="html"><![CDATA[<p>釣行日 2019年02月17日(日)<br/>
天気 晴<br/>
場所 高滝湖<br/>
釣行時間: 13:30 〜 16:00</p>

<p>寒いのでドームだなと高滝湖ワカサギ釣りです。<br/>
前回初めて釣りで魚を釣った妻もいくというので家族で釣りです。</p>

<!-- more -->    




<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>  <br/>
<ins class="adsbygoogle"  
     style="display:block; text-align:center;"  
     data-ad-layout="in-article"  
     data-ad-format="fluid"  
     data-ad-client="ca-pub-7039502723411845"  
     data-ad-slot="8206045005"></ins></p>

<script>    
     (adsbygoogle = window.adsbygoogle || []).push({});    
</script>


<p></p>

<p>直近の釣果をみるとA桟橋かBかCドームが良さそうです。<br/>
が、B、Cドームで並びで空いているところがなくしかたなく席が半分ぐらい空いているDドームへ。</p>

<p>予想通り状況はあまり芳しくないようで。</p>

<p>３０弱ほど釣りました。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190217/IMG_8603.JPG"></p>

<p>Dドーム前の桟橋ではかなり反応が良かったみたいです。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190217/IMG_8605.JPG"></p>

<p>楽しいし寒さもないので毎週きたいですが、ドーム２席+ベニさしで5000円弱。そして高速代とガス代いれると月１が限界ですね。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[袖ヶ浦 イシモチ]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2019/01/21/sodegaura/"/>
        <updated>2019-01-21T14:41:50+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2019/01/21/sodegaura</id>
        <content type="html"><![CDATA[<p>くっそ寒いのに夜釣りにいってきました。</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">寒ぃ。釣りつらい。840円分のイソメ使い切るまで帰れまテン</p>&mdash; YoshitsuguFujii (@YoshitsuguFujii) <a href="https://twitter.com/YoshitsuguFujii/status/1086629968426102785?ref_src=twsrc%5Etfw">2019年1月19日</a></blockquote>


<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>釣行日 2019年01月19日(土)<br/>
天気 晴<br/>
潮 大潮<br/>
場所 今井岸壁<br/>
釣行時間: 23:45 〜 7:00</p>

<!-- more -->  




<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>
<ins class="adsbygoogle"
     style="display:block; text-align:center;"
     data-ad-layout="in-article"
     data-ad-format="fluid"
     data-ad-client="ca-pub-7039502723411845"
     data-ad-slot="8206045005"></ins></p>

<script>  
     (adsbygoogle = window.adsbygoogle || []).push({});  
</script>


<p></p>

<p>市原フィッシングセンターでイソメを購入し、現地着。</p>

<p>他の釣り人は広い岸壁に5組ぐらいですね。</p>

<p>イソメつけて３本投げ込みます。</p>

<p>さすがにもうダメだろうなと思いつつも冷凍庫圧迫のコマセでついでにトリックです。</p>

<p>トリックは全然あたりなく3時ぐらいに無言でしまいました(一人なので無言なのは当たり前ですが)</p>

<p>置き竿の方はセイゴがかかったようなあたりが２時ぐらいにありました。<br/>
嬉しすぎてオラッって激しくアワセいれすぎたせいか引きちぎられたエラが針にくっついてました。</p>

<p>その後ふて寝後に竿を回収するとぐちゃぐちゃになった仕掛けが。<br/>
ヌルヌルの体液がいっぱいついていたのでアナゴだったんですかねぇ。</p>

<p>6時半に反応あり、あげてみたらイシモチでした。<br/>
ぎりぎりで坊主回避！</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190119/IMG_8182.JPG"></p>

<p>お魚はハーブソルトでいただきました。</p>

<p><img src="http://yoshitsugufujii.github.io/images/blog/20190119/IMG_8205.JPG"></p>

<p>あと竿がアダルト認定されてました。</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">メジャクラのシーバスロッドがアダルト認定されてる。そんだけセクシーな竿ってことか...<a href="https://t.co/Y18TGPhSTa">https://t.co/Y18TGPhSTa</a> <a href="https://t.co/om6XTd8IS8">pic.twitter.com/om6XTd8IS8</a></p>&mdash; YoshitsuguFujii (@YoshitsuguFujii) <a href="https://twitter.com/YoshitsuguFujii/status/1086097353751187457?ref_src=twsrc%5Etfw">2019年1月18日</a></blockquote>


<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

]]></content>
    </entry>
    
</feed>
