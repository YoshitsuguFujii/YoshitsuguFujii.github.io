<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

    <title><![CDATA[なんとなく日々徒然と]]></title>
    <link href="http://yoshitsugufujii.github.io/atom.xml" rel="self"/>
    <link href="http://yoshitsugufujii.github.io/"/>
    <updated>2015-03-10T13:30:49+09:00</updated>
    <id>http://yoshitsugufujii.github.io/</id>
    <author>
        <name><![CDATA[Yoshitsugu Fujii]]></name>
        
    </author>
    <generator uri="http://octopress.org/">Octopress</generator>

    
    <entry>
        <title type="html"><![CDATA[GithubPageに移行しました]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/03/10/githubpageniyi-xing-simasita/"/>
        <updated>2015-03-10T20:56:12+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/03/10/githubpageniyi-xing-simasita</id>
        <content type="html"><![CDATA[<p>移行してみました。<br />
それだけです。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[Axlsxでエクセルのセルを折り返して全体を表示]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/02/24/20150224142535/"/>
        <updated>2015-02-24T14:25:12+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/02/24/20150224142535</id>
        <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;axlsx&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">package</span> <span class="o">=</span> <span class="no">Axlsx</span><span class="o">::</span><span class="no">Package</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">sheet</span> <span class="o">=</span> <span class="n">package</span><span class="o">.</span><span class="n">workbook</span><span class="o">.</span><span class="n">add_worksheet</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s1">&#39;lists&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">wrap_text</span> <span class="o">=</span> <span class="n">sheet</span><span class="o">.</span><span class="n">styles</span><span class="o">.</span><span class="n">add_style</span><span class="p">(</span>
</span><span class='line'>                              <span class="p">{</span>
</span><span class='line'>                               <span class="ss">:fg_color</span><span class="o">=&gt;</span> <span class="s2">&quot;FFFFFF&quot;</span><span class="p">,</span>                           <span class="c1"># 文字色</span>
</span><span class='line'>                               <span class="ss">:b</span> <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">,</span>                                     <span class="c1"># 太字</span>
</span><span class='line'>                               <span class="ss">:bg_color</span> <span class="o">=&gt;</span> <span class="s2">&quot;004586&quot;</span><span class="p">,</span>                          <span class="c1"># 背景色</span>
</span><span class='line'>                               <span class="ss">:sz</span> <span class="o">=&gt;</span> <span class="mi">12</span><span class="p">,</span>                                      <span class="c1"># フォントサイズ</span>
</span><span class='line'>                               <span class="ss">:border</span> <span class="o">=&gt;</span> <span class="p">{</span> <span class="ss">:style</span> <span class="o">=&gt;</span> <span class="ss">:thin</span><span class="p">,</span> <span class="ss">:color</span> <span class="o">=&gt;</span> <span class="s2">&quot;00&quot;</span> <span class="p">},</span> <span class="c1"># 罫線</span>
</span><span class='line'>                               <span class="ss">:alignment</span> <span class="o">=&gt;</span> <span class="p">{</span> <span class="ss">:horizontal</span> <span class="o">=&gt;</span> <span class="ss">:center</span><span class="p">,</span>         <span class="c1"># 配置</span>
</span><span class='line'>                                               <span class="ss">:vertical</span> <span class="o">=&gt;</span> <span class="ss">:center</span> <span class="p">,</span>
</span><span class='line'>                                               <span class="ss">:wrap_text</span> <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">}</span>
</span><span class='line'>                              <span class="p">}</span>
</span><span class='line'>                            <span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">add_row</span><span class="p">(</span><span class="o">[</span><span class="s1">&#39;とっても長いテキスト&#39;</span><span class="p">,</span> <span class="s1">&#39;短いテキスト&#39;</span><span class="o">]</span><span class="p">,</span> <span class="ss">style</span><span class="p">:</span> <span class="n">wrap_text</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">column_info</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">width</span> <span class="o">=</span> <span class="mi">5</span>
</span><span class='line'><span class="n">package</span><span class="o">.</span><span class="n">serialize</span><span class="p">(</span><span class="s1">&#39;test.xlsx&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[Axlsxでウィンドウ枠の固定]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/02/23/20150223110642/"/>
        <updated>2015-02-23T11:06:00+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/02/23/20150223110642</id>
        <content type="html"><![CDATA[<p>エクセルのウィンドウ枠の固定をAxlsxで行う方法</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;axlsx&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">package</span> <span class="o">=</span> <span class="no">Axlsx</span><span class="o">::</span><span class="no">Package</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">sheet</span> <span class="o">=</span> <span class="n">package</span><span class="o">.</span><span class="n">workbook</span><span class="o">.</span><span class="n">add_worksheet</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s1">&#39;lists&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">add_row</span><span class="p">(</span><span class="o">[</span><span class="s1">&#39;品名&#39;</span><span class="p">,</span> <span class="s1">&#39;単価&#39;</span><span class="p">,</span> <span class="s1">&#39;数量&#39;</span><span class="p">,</span> <span class="s1">&#39;計&#39;</span><span class="o">]</span> <span class="p">)</span>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">add_row</span><span class="p">(</span><span class="o">[</span><span class="s1">&#39;にんじん&#39;</span><span class="p">,</span>    <span class="mi">80</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span>      <span class="s1">&#39;=B2*C2&#39;</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">sheet_view</span><span class="o">.</span><span class="n">pane</span> <span class="k">do</span> <span class="o">|</span><span class="n">pane</span><span class="o">|</span>
</span><span class='line'>  <span class="n">pane</span><span class="o">.</span><span class="n">top_left_cell</span> <span class="o">=</span> <span class="s2">&quot;B2&quot;</span>
</span><span class='line'>  <span class="n">pane</span><span class="o">.</span><span class="n">state</span> <span class="o">=</span> <span class="ss">:frozen_split</span>
</span><span class='line'>  <span class="n">pane</span><span class="o">.</span><span class="n">y_split</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'>  <span class="n">pane</span><span class="o">.</span><span class="n">x_split</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'>  <span class="n">pane</span><span class="o">.</span><span class="n">active_pane</span> <span class="o">=</span> <span class="ss">:bottom_right</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">package</span><span class="o">.</span><span class="n">serialize</span><span class="p">(</span><span class="s1">&#39;test.xlsx&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[Axlsxでエクセルファイル作成時に注意する点とかはまりどころとか]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/02/21/20150221171638/"/>
        <updated>2015-02-21T17:16:00+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/02/21/20150221171638</id>
        <content type="html"><![CDATA[<p>最近Railsを使う会社が増えてきて、2年前にRailsを扱う会社をエージェントに探してもらった時はなかなか見つからなかったんですが、今は楽に見つかりそうですね。
そもそも登録した転職サイトがダメだったのかもしれないと思いますが。
千葉でRuby、Railsメインでやってる会社ないかな。</p>

<p>さてさて、ここのところずっと触っているAxlsxです。</p>

<h3>型に気をつける</h3>

<p>エクセルのセルが数値か文字列かで挙動が変わったりします。
文字列型のカラムに&#8221;1000&#8221;とか入っていた場合、エクセルでは数値として認識されてしまってvloolupなどの関数が反応しないことがあります。
その場合は明示的にtypeを指定しましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">add_row</span><span class="p">(</span>
</span><span class='line'>  <span class="o">[</span>
</span><span class='line'>    <span class="s2">&quot;1000&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="mi">1000</span><span class="p">,</span>
</span><span class='line'>  <span class="o">]</span><span class="p">,</span> <span class="ss">types</span><span class="p">:</span> <span class="o">[</span><span class="ss">:string</span><span class="p">,</span> <span class="ss">:float</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># もしくは</span>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">rows</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">cells</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">type</span> <span class="o">=</span> <span class="o">[</span><span class="ss">:string</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>typesに設定できるシンボル
<a href="http://www.rubydoc.info/github/randym/axlsx/master/Axlsx/Cell:type">Method: Axlsx::Cell  #type — Documentation for randym/axlsx
(master)</a>
[:date, :time, :float, :integer, :string, :boolean]</p>

<h3>エクセルの関数を設定してダウンロード</h3>

<p>そのままアップロードすると関数による値の設定が行われません。
おそらく数式はエクセルを開いた時にエクセル側で計算されるので、エクセルを一回も開かずにアップロードすると値が設定されていないことになるのかと思います
fomula  _valueを設定しましょう</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">add_row</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="s1">&#39;=A1+B1&#39;</span><span class="o">]</span><span class="p">,</span> <span class="ss">:formula_values</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="kp">nil</span><span class="p">,</span> <span class="kp">nil</span><span class="p">,</span> <span class="mi">3</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#_もしくは</span>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">rows</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">cells</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">value</span>         <span class="o">=</span> <span class="s2">&quot;=A1+B1&quot;</span>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">rows</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">cells</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">formula_value</span> <span class="o">=</span> <span class="s2">&quot;3&quot;</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[trueとfalseにrefinmentsを使ってメソッド追加]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/02/17/20150217112514/"/>
        <updated>2015-02-17T11:25:00+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/02/17/20150217112514</id>
        <content type="html"><![CDATA[<p>Rubyでモデルの値がtrueの場合は○。falseの場合は空文字を表示するメソッドが欲しかったのでrefimentsを使って実装したかったけどなかなかうまくいかない。<br/>
trueはインスタンスだと思うんだけど何か普通のインスタンスと違うのだろうか。</p>

<p>試行錯誤は省いて結論としてはこうしたらできました.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">BooleanEx</span>
</span><span class='line'>  <span class="n">refine</span> <span class="no">TrueClass</span> <span class="k">do</span>
</span><span class='line'>    <span class="k">def</span> <span class="nc">true</span><span class="o">.</span><span class="nf">to_circle</span>
</span><span class='line'>      <span class="s2">&quot;○&quot;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">refine</span> <span class="no">FalseClass</span> <span class="k">do</span>
</span><span class='line'>    <span class="k">def</span> <span class="nc">false</span><span class="o">.</span><span class="nf">to_circle</span>
</span><span class='line'>      <span class="s2">&quot;&quot;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">using</span> <span class="no">BooleanEx</span>
</span><span class='line'>
</span><span class='line'><span class="kp">true</span><span class="o">.</span><span class="n">to_circle</span> <span class="c1"># =&gt; &quot;○&quot;</span>
</span><span class='line'><span class="kp">false</span><span class="o">.</span><span class="n">to_circle</span> <span class="c1"># =&gt; &quot;&quot;</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[cacheのキーを削除]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/01/08/20150108182843/"/>
        <updated>2015-01-08T18:28:00+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/01/08/20150108182843</id>
        <content type="html"><![CDATA[<p>例えばmodelへの問い合わせ結果をキャッシュに保存していて、after  _saveなどで消したい場合などは<br/>
Rails.cache.delete(&lsquo;キー名&rsquo;)でできる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">users</span> <span class="o">=</span> <span class="no">Rails</span><span class="o">.</span><span class="n">cache</span><span class="o">.</span><span class="n">fetch</span><span class="p">(</span><span class="s2">&quot;users&quot;</span><span class="p">,</span> <span class="ss">expires_in</span><span class="p">:</span> <span class="mi">30</span><span class="o">.</span><span class="n">seconds</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>  <span class="no">User</span><span class="o">.</span><span class="n">all</span><span class="o">.</span><span class="n">to_a</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 消す</span>
</span><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">cache</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="s1">&#39;users&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[関連を保存時に削除する]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2014/12/26/20141226142144/"/>
        <updated>2014-12-26T14:21:00+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2014/12/26/20141226142144</id>
        <content type="html"><![CDATA[<p>saveした時に削除したいときは対象のレコードに対して</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">accepts_nested_attributes_for</span> <span class="p">:</span><span class="err">対象のアソシエーション</span><span class="p">,</span> <span class="ss">allow_destroy</span><span class="p">:</span> <span class="kp">true</span>
</span></code></pre></td></tr></table></div></figure>


<p>で宣言してから、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">parent</span><span class="o">.</span><span class="n">childs</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">mark_for_destruction</span> <span class="c1"># 削除したいレコードに削除のマークをつける</span>
</span><span class='line'><span class="n">parent</span><span class="o">.</span><span class="n">childs</span><span class="o">.</span><span class="n">save</span> <span class="c1"># =&gt; childsのfirstのものか削除される。</span>
</span></code></pre></td></tr></table></div></figure>


<p>で削除される。<br/>
ちなみにsave時にこれを削除してねってマークしたかは</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">parent</span><span class="o">.</span><span class="n">childs</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">marked_for_destruction?</span> <span class="c1"># =&gt; true</span>
</span></code></pre></td></tr></table></div></figure>


<p>で確認できる。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[カリー化のお話]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2014/12/19/20141219102458/"/>
        <updated>2014-12-19T10:24:00+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2014/12/19/20141219102458</id>
        <content type="html"><![CDATA[<p><a href="http://qiita.com/lnznt/items/0b20440cecd6f4e348b9">Ruby のカリー化を日本語で説明してみる -
Qiita</a><br/>
という記事を見たので自分も食べられない方のカリーを使ったものをなんか書いてみました。</p>

<p>irbで実行できます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">meeting</span> <span class="o">=</span> <span class="no">Proc</span><span class="o">.</span><span class="n">new</span> <span class="k">do</span> <span class="o">|</span><span class="n">teacher</span><span class="p">,</span> <span class="n">student</span><span class="o">|</span>
</span><span class='line'> <span class="nb">p</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">teacher</span><span class="si">}</span><span class="s2">は</span><span class="si">#{</span><span class="n">student</span><span class="si">}</span><span class="s2">くんとカレーについて話す&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">fujii_meeting</span> <span class="o">=</span> <span class="n">meeting</span><span class="o">.</span><span class="n">curry</span><span class="o">.</span><span class="p">(</span><span class="s2">&quot;藤井先生&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="sx">%w(田中 佐藤 斉藤 加藤)</span><span class="o">.</span><span class="n">each</span><span class="p">(</span><span class="o">&amp;</span><span class="n">fujii_meeting</span><span class="p">)</span>
</span><span class='line'><span class="c1"># =&gt; &quot;藤井先生は田中くんとカレーについて話す&quot;</span>
</span><span class='line'><span class="c1"># =&gt; &quot;藤井先生は佐藤くんとカレーについて話す&quot;</span>
</span><span class='line'><span class="c1"># =&gt; &quot;藤井先生は斉藤くんとカレーについて話す&quot;</span>
</span><span class='line'><span class="c1"># =&gt; &quot;藤井先生は加藤くんとカレーについて話す&quot;</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[Axlxsを使って新規ファイルを作って、RubyXLで読み出す話]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2014/12/18/20141218200736/"/>
        <updated>2014-12-18T20:07:00+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2014/12/18/20141218200736</id>
        <content type="html"><![CDATA[<p>どんどんtipsがニッチになっていきますね。</p>

<p>Axlxsで作ったファイルがRubyXLで読み取れませんでした。<br/>
一度エクセルで開いて保存すると読み取れるようになる。</p>

<p>RubyXLでAxlxsで作成したファイルを読み込むと数値とかは辛うじて所々取れていたので文字コードかと思って色々やってみましたが、このページで解決</p>

<p><a href="https://github.com/randym/axlsx/issues/349">Strings outputted not seen by rubyXL ? Issue   #349 ? randym/axlsx ?
GitHub</a></p>

<p>pkg = Package.create<br/>
したら<br/>
pkg.use  <em>shared  </em>strings = true<br/>
する必要があるみたいでした。</p>

<p>これで無事に読みだすことができました。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[AxlsxでExcelファイルをcell単位でprotectionをした話]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2014/12/17/20141217122846/"/>
        <updated>2014-12-17T12:28:00+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2014/12/17/20141217122846</id>
        <content type="html"><![CDATA[<p>Axlsxでエクセルと戯れる日々です。<br/>
2シート目とかにマスタデータを保持しておいて、1シート目でプルダウンでマスタデータを選ばせたりしています。<br/>
変更できないように2シート目はシート全体を保護しております。</p>

<p>今日はAxlsxでセルの保護をしたお話です。</p>

<p>これググっても全然出てきませんでした。</p>

<p>結論から言うとこれでできます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;axlsx&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;securerandom&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">package</span> <span class="o">=</span> <span class="no">Axlsx</span><span class="o">::</span><span class="no">Package</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">sheet</span> <span class="o">=</span> <span class="n">package</span><span class="o">.</span><span class="n">workbook</span><span class="o">.</span><span class="n">add_worksheet</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s1">&#39;lists&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">sheet_protection</span><span class="o">.</span><span class="n">password</span> <span class="o">=</span> <span class="no">SecureRandom</span><span class="o">.</span><span class="n">uuid</span>
</span><span class='line'><span class="n">locked</span> <span class="o">=</span> <span class="n">package</span><span class="o">.</span><span class="n">workbook</span><span class="o">.</span><span class="n">styles</span><span class="o">.</span><span class="n">add_style</span> <span class="ss">:locked</span> <span class="o">=&gt;</span> <span class="kp">true</span>
</span><span class='line'><span class="n">unlocked</span> <span class="o">=</span> <span class="n">package</span><span class="o">.</span><span class="n">workbook</span><span class="o">.</span><span class="n">styles</span><span class="o">.</span><span class="n">add_style</span> <span class="ss">:locked</span> <span class="o">=&gt;</span> <span class="kp">false</span>
</span><span class='line'>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">add_row</span><span class="p">(</span><span class="o">[</span><span class="s1">&#39;品名&#39;</span><span class="p">,</span> <span class="s1">&#39;単価&#39;</span><span class="p">,</span> <span class="s1">&#39;数量&#39;</span><span class="p">,</span> <span class="s1">&#39;計&#39;</span><span class="o">]</span><span class="p">,</span> <span class="ss">style</span><span class="p">:</span> <span class="n">unlocked</span> <span class="p">)</span>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">add_row</span><span class="p">(</span><span class="o">[</span><span class="s1">&#39;にんじん&#39;</span><span class="p">,</span>    <span class="mi">80</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span>      <span class="s1">&#39;=B2*C2&#39;</span><span class="o">]</span><span class="p">,</span> <span class="ss">style</span><span class="p">:</span> <span class="n">unlocked</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">rows</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">cells</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">style</span> <span class="o">=</span> <span class="n">locked</span> <span class="c1"># A1をロック(lock cell =&gt; A1)</span>
</span><span class='line'>
</span><span class='line'><span class="n">package</span><span class="o">.</span><span class="n">serialize</span><span class="p">(</span><span class="s1">&#39;test.xlsx&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>この答えの出し方が最終的にRubyのことはRubyに聞くという方式で解決したのですが、<br/>
この解決の仕方がRubyエンジニアっぽいなと思ったのでどうやってこの結論に辿り着いたかダラダラ書こうかと思います。</p>

<p>まずセルの保護をしたいという要件がありました。<br/>
コピペエンジニアの端くれとしてまずはググります。</p>

<p>行単位のロックのお話は見つけましたが、セルの保護ではいい結果がありません。<br/>
<a href="http://stackoverflow.com/questions/19051049/how-do-i-protect-header-rows-but-allow-to-enter-new-rows-using-axlsx">ruby on rails 3 - How do I protect header rows but allow to enter new
rows using AXLSX? - Stack
Overflow</a></p>

<p>テストは下手なドキュメントよりも役にたつと誰かが言っていたので(実際の使い方のサンプルが見れるので)Axlsxのテストを見てみます。<br/>
bundle open axlsxでaxlsxのインストールされたディレクトリを開いて、grep
protectとかやってみます。<br/>
いくつかヒットしたのでソースを見てみますがなんのこっちゃわかりません感じです。</p>

<p>とりあえずgrepでひっかかった<br/>
Axlsx::CellProtection.new<br/>
をキーワードにグーグルで検索してみますが有用な情報は皆無です。</p>

<p>一旦途方にくれます。コーヒーとか飲みます。</p>

<p>おもむろに再度irbを立ち上げます。<br/>
とりあえず怪しいものがないかコンソールから確認していってみることにします</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;axlsx&#39;</span>
</span><span class='line'><span class="n">package</span> <span class="o">=</span> <span class="no">Axlsx</span><span class="o">::</span><span class="no">Package</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">sheet</span> <span class="o">=</span> <span class="n">package</span><span class="o">.</span><span class="n">workbook</span><span class="o">.</span><span class="n">add_worksheet</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s1">&#39;lists&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">add_row</span><span class="p">(</span><span class="o">[</span><span class="s1">&#39;品名&#39;</span><span class="p">,</span> <span class="s1">&#39;単価&#39;</span><span class="p">,</span> <span class="s1">&#39;数量&#39;</span><span class="p">,</span> <span class="s1">&#39;計&#39;</span><span class="o">]</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>と打ちます。</p>

<p>cellに保護をかけたいのだからcellオブジェクトにプロパティがあるんじゃないかとあたりをつけます。</p>

<p>sheet.cellとうちます。そんなんねーよと返ってきます。<br/>
sheet.cells と打ちます。なんかコンソールに文字がたくさんでます。</p>

<p>A1のセルを取得してみます。<br/>
sheet.cells[0,0]とうちます。空の配列が返ってきます。<br/>
sheet.cells[0]とうちます。なんか一杯でてきます。<br/>
sheet.cells[0].classとうちます。   # =  > Axlsx::Cell<br/>
お、なんかいいの返ってきました。<br/>
sheet.cells[0].methods.grep(/protect/)とかうってみます。
[:protected  _methods]しか返ってきません。<br/>
一回煮詰まります。
sheet.cells[0].valueとかここで色々他のことをやってみますが、なかなかうまくいきません。</p>

<p>そもそもセル単位で値とか設定できるんかと思いつきます。<br/>
ググります。見つけます。</p>

<p><a href="http://stackoverflow.com/questions/18178196/modify-specific-cell-value-using-axlsx-gem-given-the-column-number-and-row-numer">ruby on rails - Modify specific cell value using Axlsx gem given the
column number and row numer - Stack
Overflow</a></p>

<p>特定のセルを取得するのは以下の方法でした。<br/>
sheet.rows[0].cells[0]</p>

<p>sheet.rows[0].cells[0].methodsでメソッド一回全部のメソッドを出してみます。</p>

<p>sheet.rows[0].cells[0].pos   # =  > [0,0]<br/>
とか<br/>
sheet.rows[0].cells[0].reference   # =  >   $A  $1<br/>
とか面白そうなメソッドがあります。</p>

<p>その中にstyle=というメソッドを見つけました。<br/>
これってひょっとして行単位のロックであったロックの書式を設定できるのではないかと推測します。</p>

<p>そして出きたのが冒頭のコードです。</p>

<p>sheet.rows[0].cells[0].style = locked<br/>
だけでは不十分で<br/>
sheet.sheet  _protection.password<br/>
でパスワードを設定しないといけないとか、保護をかけて必要な所をlockしたりunlockしたりしないといけないとか色々とはまりながらもなんとか答えを出せました。<br/>
今回は運も味方してくれたかなぁという気もします。</p>

<p>困ったときはインタラクティブにどんなメソッドがあるかどんな値が設定されているか確認しながら<br/>
試しながらやることで問題が解決できるというのは素晴らしいと思いました。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[特定のキーを除いたhashを返す]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2014/12/09/20141209150940/"/>
        <updated>2014-12-09T15:09:00+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2014/12/09/20141209150940</id>
        <content type="html"><![CDATA[<p>今までdeleteでチクチク消したり、rejectで該当キーをひっかけてhash作り直しリしてました。</p>

<p>exceptなんてあったんですね。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">{</span><span class="nb">name</span><span class="p">:</span> <span class="s2">&quot;藤井&quot;</span><span class="p">,</span> <span class="ss">age</span><span class="p">:</span> <span class="mi">34</span><span class="p">,</span> <span class="ss">job</span><span class="p">:</span> <span class="s2">&quot;developer&quot;</span><span class="p">}</span><span class="o">.</span><span class="n">except</span><span class="p">(</span><span class="ss">:age</span><span class="p">)</span> <span class="c1"># =&gt; { :name =&gt; &quot;藤井&quot;, :job =&gt; &quot;developer&quot; }</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[論理削除指定のモデルをhas_manyで参照し、かつnested_attributes_forにallow_destroyを指定するも物理削除になる。]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2014/12/07/20141207173028/"/>
        <updated>2014-12-07T17:30:00+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2014/12/07/20141207173028</id>
        <content type="html"><![CDATA[<p>環境はこちら<br/>
activerecord(4.1.6)<br/>
rails4  <em>acts  </em>as  _paranoid (0.1.4)</p>

<p>has  <em>manyのリレーション先でacts  </em>as  <em>paranoid指定しているのですが、<br/>
nested  </em>attributes  <em>for リレーション先, allow  </em>destroy : true<br/>
で何故か物理削除になっていまったので調べてみました。</p>

<p>結論としては</p>

<p>lib/active  <em>record/associations/has  </em>many  <em>association.rb<br/>
の112行目で<br/>
records.each(&amp;:destroy!)<br/>
とdestroy!で消していて、acts  </em>as  _paranoidのdestroy!は物理削除になるためでした。</p>

<p>何故destroyに!がついているのか
上記が定義されているdelete  <em>recordsメソッドを遡ってみます。<br/>
delete  </em>recordsメソッドはlib/active  <em>record/associations/collection  </em>association.rb<br/>
のremove  _recordsの中で呼ばれています(ソースでは492行目)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="c1"># lib/active_record/associations/collection_association.rb</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">remove_records</span><span class="p">(</span><span class="n">existing_records</span><span class="p">,</span> <span class="n">records</span><span class="p">,</span> <span class="nb">method</span><span class="p">)</span>
</span><span class='line'>    <span class="n">records</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">record</span><span class="o">|</span> <span class="n">callback</span><span class="p">(</span><span class="ss">:before_remove</span><span class="p">,</span> <span class="n">record</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">delete_records</span><span class="p">(</span><span class="n">existing_records</span><span class="p">,</span> <span class="nb">method</span><span class="p">)</span> <span class="k">if</span> <span class="n">existing_records</span><span class="o">.</span><span class="n">any?</span>
</span><span class='line'>    <span class="n">records</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">record</span><span class="o">|</span> <span class="n">target</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="n">record</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">records</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">record</span><span class="o">|</span> <span class="n">callback</span><span class="p">(</span><span class="ss">:after_remove</span><span class="p">,</span> <span class="n">record</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>んでこれはどこで呼ばれるかというとここで呼ばれています(ソースでは485行目)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="c1"># lib/active_record/associations/collection_association.rb</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">delete_or_destroy</span><span class="p">(</span><span class="n">records</span><span class="p">,</span> <span class="nb">method</span><span class="p">)</span>
</span><span class='line'>    <span class="n">records</span> <span class="o">=</span> <span class="n">records</span><span class="o">.</span><span class="n">flatten</span>
</span><span class='line'>    <span class="n">records</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">record</span><span class="o">|</span> <span class="n">raise_on_type_mismatch!</span><span class="p">(</span><span class="n">record</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>    <span class="n">existing_records</span> <span class="o">=</span> <span class="n">records</span><span class="o">.</span><span class="n">reject</span> <span class="p">{</span> <span class="o">|</span><span class="n">r</span><span class="o">|</span> <span class="n">r</span><span class="o">.</span><span class="n">new_record?</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="n">existing_records</span><span class="o">.</span><span class="n">empty?</span>
</span><span class='line'>      <span class="n">remove_records</span><span class="p">(</span><span class="n">existing_records</span><span class="p">,</span> <span class="n">records</span><span class="p">,</span> <span class="nb">method</span><span class="p">)</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="n">transaction</span> <span class="p">{</span> <span class="n">remove_records</span><span class="p">(</span><span class="n">existing_records</span><span class="p">,</span> <span class="n">records</span><span class="p">,</span> <span class="nb">method</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>transactionで囲まれています。<br/>
ということでdestroyに失敗した時にロールバックするために!をつけているようです。</p>

<p>なのでparanoidのdestroy!をalias  <em>method  </em>chainで物理削除にしてしまうか。<br/>
上記のrecords.each(&amp;:destroy!)をなんとか書き換えてあげると治りそうですね。</p>

<p>今回はこうやって直しました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">ActiveRecord</span>
</span><span class='line'>  <span class="k">module</span> <span class="nn">Associations</span>
</span><span class='line'>    <span class="k">module</span> <span class="nn">HasManyAssociationPatch</span>
</span><span class='line'>      <span class="k">def</span> <span class="nf">delete_records</span><span class="p">(</span><span class="n">records</span><span class="p">,</span> <span class="nb">method</span><span class="p">)</span>
</span><span class='line'>        <span class="k">if</span> <span class="nb">method</span> <span class="o">==</span> <span class="ss">:destroy</span>
</span><span class='line'>          <span class="n">records</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">record</span><span class="o">|</span>
</span><span class='line'>            <span class="k">raise</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">ActiveRecordError</span> <span class="k">unless</span> <span class="n">record</span><span class="o">.</span><span class="n">destroy</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>          <span class="n">update_counter</span><span class="p">(</span><span class="o">-</span><span class="n">records</span><span class="o">.</span><span class="n">length</span><span class="p">)</span> <span class="k">unless</span> <span class="n">inverse_updates_counter_cache?</span>
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'>          <span class="k">super</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Associations</span><span class="o">::</span><span class="no">HasManyAssociation</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="ss">:prepend</span><span class="p">,</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Associations</span><span class="o">::</span><span class="no">HasManyAssociationPatch</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>今回ソース読んでいて知ったんですけど、has  <em>manyって削除する時に<br/>
before  </em>remove<br/>
after  _remove<br/>
ってコールバックが発生するんですね。知らなかった。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[Nokogiriを使って部分的にhtmlを編集する]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2014/12/05/20141205115627/"/>
        <updated>2014-12-05T11:56:00+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2014/12/05/20141205115627</id>
        <content type="html"><![CDATA[<p>Nokogiriを使ってhelperメソッドで特定のinputに属性(クラス名)を追加したくなったのでやってみました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">html</span> <span class="o">=</span> <span class="o">&lt;&lt;</span><span class="no">HTML</span>
</span><span class='line'><span class="sh">&lt;div&gt;</span>
</span><span class='line'><span class="sh">  &lt;input id=&quot;hoge&quot; class=&quot;field&quot;&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="no">HTML</span>
</span><span class='line'>
</span><span class='line'><span class="n">doc</span> <span class="o">=</span> <span class="no">Nokogiri</span><span class="o">::</span><span class="no">HTML</span><span class="o">.</span><span class="n">parse</span><span class="p">(</span><span class="n">html</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">doc</span><span class="o">.</span><span class="n">css</span><span class="p">(</span><span class="s2">&quot;input#hoge&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">input</span><span class="o">|</span>
</span><span class='line'>  <span class="n">input</span><span class="o">[</span><span class="s1">&#39;class&#39;</span><span class="o">]</span> <span class="o">+=</span> <span class="s2">&quot; has_error&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">doc</span><span class="o">.</span><span class="n">to_html</span> <span class="c1"># =&gt; &quot;&lt;!DOCTYPE html PUBLIC   &quot;-//W3C//DTD HTML 4.0 Transitional//EN  &quot;   &quot;http://www.w3.org/TR/REC-html40/loose.dtd  &quot;&gt;  n&lt;html&gt;&lt;body&gt;  n&lt;div&gt;  n  &lt;input class=  &quot;field  &quot;&gt;  n  n&lt;/body&gt;&lt;/html&gt;  n&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Nokogiri::HTML.parseだとDOCTYPEとか  <html  >とか余計なものがついてくる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">html</span> <span class="o">=</span> <span class="o">&lt;&lt;</span><span class="no">HTML</span>
</span><span class='line'><span class="sh">&lt;div&gt;</span>
</span><span class='line'><span class="sh">  &lt;input id=&quot;hoge&quot; class=&quot;field&quot;&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="no">HTML</span>
</span><span class='line'>
</span><span class='line'><span class="n">doc</span> <span class="o">=</span> <span class="no">Nokogiri</span><span class="o">::</span><span class="no">HTML</span><span class="o">::</span><span class="no">DocumentFragment</span><span class="o">.</span><span class="n">parse</span><span class="p">(</span><span class="n">html</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">doc</span><span class="o">.</span><span class="n">css</span><span class="p">(</span><span class="s2">&quot;input#hoge&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">input</span><span class="o">|</span>
</span><span class='line'>  <span class="n">input</span><span class="o">[</span><span class="s1">&#39;class&#39;</span><span class="o">]</span> <span class="o">+=</span> <span class="s2">&quot; has_error&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">doc</span><span class="o">.</span><span class="n">to_html</span> <span class="c1"># =&gt; &quot;&lt;div&gt;  n  &lt;input id=  &quot;hoge  &quot; class=  &quot;field has_error  &quot;&gt;  n  n&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>そういう場合はDocumentFragmentを使うと部分的にhtmlを使える。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[handlerbarsで現在のループ回数を知る]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2014/11/28/20141128152410/"/>
        <updated>2014-11-28T15:24:00+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2014/11/28/20141128152410</id>
        <content type="html"><![CDATA[<p>@indexで取れます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p"></span>
</span><span class='line'>  <span class="p">:</span> <span class="p"></span>
</span><span class='line'>  <span class="n">isFirst?</span><span class="p">:</span> <span class="p"></span>
</span><span class='line'>  <span class="n">isLast?</span><span class="p">:</span> <span class="p"></span>
</span><span class='line'><span class="p"></span>
</span></code></pre></td></tr></table></div></figure>


<p>その他に@firstには最初の一回目のループの時にはtrueが<br/>
@lastには最後のループの時にはtrueが入るようです。<br/>
@indexは入力欄  _1とかの1とか表示する時に使えそうですね。</p>

<p>2次元配列とか多次元配列を回す時はこうですね。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">多次元配列の回し方</span>
</span><span class='line'><span class="p"></span>
</span><span class='line'><span class="p"></span>
</span><span class='line'>  <span class="p"></span>
</span><span class='line'>    <span class="p"></span>
</span><span class='line'>    <span class="p"></span>
</span><span class='line'>    <span class="p"></span>
</span><span class='line'>  <span class="p"></span>
</span><span class='line'><span class="p"></span>
</span></code></pre></td></tr></table></div></figure>


<p>ちなみにでコメントです。<br/>
という書き方もできます。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[slimbarsを使ったらUnknown line indicator]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2014/11/21/20141121134825/"/>
        <updated>2014-11-21T13:48:00+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2014/11/21/20141121134825</id>
        <content type="html"><![CDATA[<p>勉強がてらRailsのプロジェクトでBackBone.jsでテンプレートにはhandlebarsを使って処理を書いてみました。<br/>
viewがslimなのでslimbarsで書いてます。</p>

<p>変数を出力しようとしたら以下のエラー<br/>
Unknown line indicator</p>

<p>viewファイルはこんな感じ</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">.</span><span class="n">hoge</span>
</span><span class='line'>  <span class="o">.</span><span class="n">fuga</span>
</span><span class='line'>    <span class="p"></span>
</span></code></pre></td></tr></table></div></figure>


<p>ただしくはこう</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">.</span><span class="n">hoge</span>
</span><span class='line'>  <span class="o">.</span><span class="n">fuga</span>
</span><span class='line'>    <span class="o">|</span> <span class="p"></span>
</span></code></pre></td></tr></table></div></figure>


<p>hamlbarsではこう書けてしまうので、slimで書く場合は注意が必要だなと思いました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">.</span><span class="n">hoge</span>
</span><span class='line'>  <span class="o">.</span><span class="n">fuga</span>
</span><span class='line'>    <span class="p"></span>
</span></code></pre></td></tr></table></div></figure>


<p>小ネタも小ネタでした。</p>

<p>しかしeachの中ではslimの記法使えないのかな？<br/>
こうやらないと出力されない・・・</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">select</span>
</span><span class='line'>  <span class="o">|</span> <span class="p"></span>
</span><span class='line'>    <span class="o">&lt;</span><span class="n">option</span> <span class="n">value</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="o">&gt;</span><span class="p"></span><span class="o">&lt;</span><span class="sr">/option&gt;</span>
</span><span class='line'><span class="sr">  | </span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[railsで任意のタイミングで処理を開始]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2014/11/18/20141118110832/"/>
        <updated>2014-11-18T11:08:00+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2014/11/18/20141118110832</id>
        <content type="html"><![CDATA[<p>おかあさんといっしょを娘が見るので、毎朝のテレビチャンネルはEテレです。</p>

<p>さてrailsでapp/model/concerns以下のモジュールを勝手にapp/modelにincludeしたいと考えました。<br/>
命名規則でファイルを拾って、includeすることにします。<br/>
例えば以下のファイル名をつけた場合に</p>

<p>app/model/user.rb<br/>
app/model/user  <em>auto  </em>load  _concern.rb</p>

<p>userクラスに自動でuser  <em>auto  </em>load  _concern.rbの内容がincludeされる感じです。</p>

<p>config/initializerに置きます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="sx">%w(models)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">elem</span><span class="o">|</span>
</span><span class='line'>    <span class="no">Pathname</span><span class="o">.</span><span class="n">glob</span><span class="p">(</span><span class="no">Rails</span><span class="o">.</span><span class="n">root</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot;app&quot;</span><span class="p">,</span> <span class="n">elem</span><span class="p">,</span> <span class="s2">&quot;concerns&quot;</span><span class="p">,</span> <span class="s2">&quot;*&quot;</span><span class="p">))</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">file</span><span class="o">|</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">file</span><span class="o">.</span><span class="n">file?</span>
</span><span class='line'>        <span class="n">file</span><span class="o">.</span><span class="n">basename</span><span class="o">.</span><span class="n">to_s</span><span class="o">.</span><span class="n">scan</span><span class="p">(</span><span class="sr">/(.*)(_auto_load_concern.rb)$/</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">class_name</span><span class="o">|</span>
</span><span class='line'>          <span class="k">if</span> <span class="n">class_name</span><span class="o">.</span><span class="n">present?</span>
</span><span class='line'>            <span class="n">model</span> <span class="o">=</span> <span class="n">class_name</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">classify</span><span class="o">.</span><span class="n">constantize</span>
</span><span class='line'>            <span class="n">model</span><span class="o">.</span><span class="n">class_eval</span> <span class="p">{</span>  <span class="kp">include</span> <span class="n">file</span><span class="o">.</span><span class="n">basename</span><span class="p">(</span><span class="s2">&quot;.rb&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">to_s</span><span class="o">.</span><span class="n">classify</span><span class="o">.</span><span class="n">constantize</span> <span class="p">}</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>でもこのプロジェクトにはmodelクラスを拡張するプログラムがlib下にあります。<br/>
それを読み込まない限りはmodelを参照するとエラーになるようになっています(上記class  _name[0].classify.constantizeでエラーとなる)</p>

<p>そこでlib以下のそのプログラム群を読み込んだ後に読み込むようにしたいと思います。</p>

<p>まず先ほどのコードを以下のようにActiveSupport.on  _loadで囲みます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">ActiveSupport</span><span class="o">.</span><span class="n">on_load</span><span class="p">(</span><span class="ss">:hoge</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>  <span class="sx">%w(models)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">elem</span><span class="o">|</span>
</span><span class='line'>    <span class="no">Pathname</span><span class="o">.</span><span class="n">glob</span><span class="p">(</span><span class="no">Rails</span><span class="o">.</span><span class="n">root</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot;app&quot;</span><span class="p">,</span> <span class="n">elem</span><span class="p">,</span> <span class="s2">&quot;concerns&quot;</span><span class="p">,</span> <span class="s2">&quot;*&quot;</span><span class="p">))</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">file</span><span class="o">|</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">file</span><span class="o">.</span><span class="n">file?</span>
</span><span class='line'>        <span class="n">file</span><span class="o">.</span><span class="n">basename</span><span class="o">.</span><span class="n">to_s</span><span class="o">.</span><span class="n">scan</span><span class="p">(</span><span class="sr">/(.*)(_auto_load_concern.rb)$/</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">class_name</span><span class="o">|</span>
</span><span class='line'>          <span class="k">if</span> <span class="n">class_name</span><span class="o">.</span><span class="n">present?</span>
</span><span class='line'>            <span class="n">model</span> <span class="o">=</span> <span class="n">class_name</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">classify</span><span class="o">.</span><span class="n">constantize</span>
</span><span class='line'>            <span class="n">model</span><span class="o">.</span><span class="n">class_eval</span> <span class="p">{</span>  <span class="kp">include</span> <span class="n">file</span><span class="o">.</span><span class="n">basename</span><span class="p">(</span><span class="s2">&quot;.rb&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">to_s</span><span class="o">.</span><span class="n">classify</span><span class="o">.</span><span class="n">constantize</span> <span class="p">}</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>lib下のプログラム群で処理が終わった後に以下を差し込みます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="no">ActiveSupport</span><span class="o">.</span><span class="n">run_load_hooks</span> <span class="ss">:hoge</span>
</span></code></pre></td></tr></table></div></figure>


<p>そうするとrun  <em>load  </em>hooksが呼ばれたタイミングでhogeがついていてるActiveSupport.on  _loadのブロック処理が開始されます。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[コンソールでローディングを表示]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2014/11/06/20141106202417/"/>
        <updated>2014-11-06T20:24:00+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2014/11/06/20141106202417</id>
        <content type="html"><![CDATA[<p>rubyXLで100以上シートのあるエクセルファイルを読み出すスクリプトを書いていて、<br/>
現在の処理中のシート/シートの総数でプログレスバーを表示することはしたけど、<br/>
ファイル読み込み中(5～7秒ぐらいかかる)はなんにもコンソールに表示されない状態が物足りなくて、<br/>
ファイルの読み込み中はローディングチックなのを出すようにした。</p>

<p>読み込みと別でThread生成して、そのThread内で1秒毎に  >と  >  >と  >  >  >を出している。<br/>
読み込みが完了したらThreadをkillしてる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">display_with_arrow</span><span class="p">(</span><span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>  <span class="n">loading_thread</span> <span class="o">=</span> <span class="no">Thread</span><span class="o">.</span><span class="n">start</span><span class="p">{</span>
</span><span class='line'>                              <span class="n">arrow_progress</span> <span class="o">=</span> <span class="sx">%w(&gt; &gt;&gt; &gt;&gt;&gt;)</span><span class="o">.</span><span class="n">cycle</span>
</span><span class='line'>                              <span class="kp">loop</span><span class="p">{</span>
</span><span class='line'>                                <span class="nb">print</span> <span class="s2">&quot;  r file reading </span><span class="si">#{</span><span class="nb">sprintf</span><span class="p">(</span><span class="s2">&quot;%-  s3s&quot;</span><span class="p">,</span><span class="n">arrow_progress</span><span class="o">.</span><span class="n">next</span><span class="p">)</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>                                <span class="nb">sleep</span> <span class="mi">1</span>
</span><span class='line'>                              <span class="p">}</span>
</span><span class='line'>                            <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">rtn</span> <span class="o">=</span> <span class="n">block</span><span class="o">.</span><span class="n">call</span>
</span><span class='line'>  <span class="no">Thread</span><span class="o">.</span><span class="n">kill</span><span class="p">(</span><span class="n">loading_thread</span><span class="p">)</span>
</span><span class='line'>  <span class="n">rtn</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 読み込み</span>
</span><span class='line'><span class="n">workbook</span> <span class="o">=</span> <span class="n">display_with_arrow</span> <span class="k">do</span>
</span><span class='line'>             <span class="no">RubyXL</span><span class="o">::</span><span class="no">Parser</span><span class="o">.</span><span class="n">parse</span><span class="p">(</span><span class="s2">&quot;エクセルファイルへのパス&quot;</span><span class="p">)</span>
</span><span class='line'>           <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>するとこうなる。<br/>
<a href="http://f.hatena.ne.jp/gogo_sakura/20141106201955"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/g/gogo_sakura/20141106/20141106201955.gif" title="f:id:gogo_sakura:20141106201955g:image" alt="f:id:gogo  _sakura:20141106201955g:image" /></a></p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[Axlsを使ってExcelでリスト（ドロップダウンするやつ）を作る]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2014/10/30/20141030155750/"/>
        <updated>2014-10-30T15:57:00+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2014/10/30/20141030155750</id>
        <content type="html"><![CDATA[<p>業務でエクセルを使うことになったので調べてました。</p>

<p>↓Qiitaの素晴らしいまとめ<br/>
RailsでExcelを扱うGemまとめ<br/>
<a href="http://qiita.com/Kta-M/items/02a2c41c5624f75498aa">http://qiita.com/Kta-M/items/02a2c41c5624f75498aa</a></p>

<p>↓情報はこの辺を見ました<br/>
<a href="http://stackoverflow.com/questions/17320645/axlsx-building-dynamic-columns">http://stackoverflow.com/questions/17320645/axlsx-building-dynamic-columns</a></p>

<p>あまりエクセルのリストを作成する情報がなかったので書いておきます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;axlsx&#39;</span>
</span><span class='line'><span class="n">package</span> <span class="o">=</span> <span class="no">Axlsx</span><span class="o">::</span><span class="no">Package</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">sheet</span> <span class="o">=</span> <span class="n">package</span><span class="o">.</span><span class="n">workbook</span><span class="o">.</span><span class="n">add_worksheet</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s1">&#39;lists&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">add_row</span><span class="p">(</span><span class="o">[</span><span class="s1">&#39;品名&#39;</span><span class="p">,</span> <span class="s1">&#39;単価&#39;</span><span class="p">,</span> <span class="s1">&#39;数量&#39;</span><span class="p">,</span> <span class="s1">&#39;計&#39;</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">add_row</span><span class="p">(</span><span class="o">[</span><span class="s1">&#39;にんじん&#39;</span><span class="p">,</span>    <span class="mi">80</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span>      <span class="s1">&#39;=B2*C2&#39;</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">add_row</span><span class="p">(</span><span class="o">[</span><span class="s1">&#39;たまねぎ&#39;</span><span class="p">,</span>    <span class="mi">50</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span>      <span class="s1">&#39;=B3*C3&#39;</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">add_row</span><span class="p">(</span><span class="o">[</span><span class="s1">&#39;じゃがいも&#39;</span><span class="p">,</span>  <span class="mi">40</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span>      <span class="s1">&#39;=B4*C4&#39;</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">add_row</span><span class="p">(</span><span class="o">[</span><span class="s1">&#39;牛肉&#39;</span><span class="p">,</span>       <span class="mi">200</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span>      <span class="s1">&#39;=B5*C5&#39;</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">add_row</span><span class="p">(</span><span class="o">[</span><span class="s1">&#39;カレー粉&#39;</span><span class="p">,</span>   <span class="mi">150</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span>      <span class="s1">&#39;=B6*C6&#39;</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">add_row</span><span class="p">(</span><span class="o">[</span><span class="s1">&#39;&#39;</span><span class="p">,</span>            <span class="s1">&#39;&#39;</span><span class="p">,</span> <span class="s1">&#39;総計&#39;</span><span class="p">,</span> <span class="s1">&#39;=SUM(D2:D6)&#39;</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">add_data_validation</span><span class="p">(</span><span class="s2">&quot;A10&quot;</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>  <span class="ss">:type</span> <span class="o">=&gt;</span> <span class="ss">:list</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:formula1</span> <span class="o">=&gt;</span> <span class="s1">&#39;A2:A6&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:showDropDown</span> <span class="o">=&gt;</span> <span class="kp">false</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:showErrorMessage</span> <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:errorTitle</span> <span class="o">=&gt;</span> <span class="s1">&#39;&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:error</span> <span class="o">=&gt;</span> <span class="s1">&#39;リストから選んで下さい&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:errorStyle</span> <span class="o">=&gt;</span> <span class="ss">:stop</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:showInputMessage</span> <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:promptTitle</span> <span class="o">=&gt;</span> <span class="s1">&#39;カレー具材&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:prompt</span> <span class="o">=&gt;</span> <span class="s1">&#39;カレーの具材を選んで下さい。&#39;</span><span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="n">package</span><span class="o">.</span><span class="n">serialize</span><span class="p">(</span><span class="s1">&#39;test.xlsx&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[Facebookとのアプリの連携を解除する]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2014/07/31/20140731131925/"/>
        <updated>2014-07-31T13:19:00+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2014/07/31/20140731131925</id>
        <content type="html"><![CDATA[<p>調べてみたら自分所のDBからFacebookの情報を消すだけのものが多くて、大元のFacebookのアプリ設定から削除するのがあんまり載ってなかったようなきがするので</p>

<p>以下の感じで、連携解除ができます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="vg">$facebook</span> <span class="o">=</span> <span class="kp">new</span> <span class="no">Facebook</span><span class="p">(</span><span class="n">array</span><span class="p">(</span>
</span><span class='line'><span class="s1">&#39;appId&#39;</span> <span class="o">=&gt;</span> <span class="err">アプリの</span><span class="n">app_id</span><span class="p">,</span>
</span><span class='line'><span class="s1">&#39;secret&#39;</span> <span class="o">=&gt;</span> <span class="err">アプリの</span><span class="n">app_secret</span>
</span><span class='line'><span class="p">));</span>
</span><span class='line'>
</span><span class='line'><span class="vg">$facebook</span><span class="o">-&gt;</span><span class="n">api</span><span class="p">(</span><span class="s2">&quot;/me/permissions&quot;</span><span class="p">,</span> <span class="s2">&quot;delete&quot;</span><span class="p">,</span> <span class="n">array</span><span class="p">(</span><span class="s1">&#39;access_token&#39;</span> <span class="o">=&gt;</span> <span class="err">ユーザーのアクセストークン</span><span class="p">));</span>
</span></code></pre></td></tr></table></div></figure>


<p>珍しくPHPでした。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[s3からcliでファイルをまとめて落としたり、正規表現で落とせたりするツール]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2014/05/27/20140527111143/"/>
        <updated>2014-05-27T11:11:00+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2014/05/27/20140527111143</id>
        <content type="html"><![CDATA[<p>s3  <em>getter.rbとか名前つけて保存して<br/>
ruby s3  </em>getter.rbとかで起動すると</p>

<p>最初にbucket選ぶ選択肢が出てきて選択すると、bucketのディレクトリかファイルか、ファイル全てダウンロードが選べ。<br/>
ディレクトリを選ぶと再帰的にまたディレクトリかファイルかファイル全てをダウンロードが選べます。</p>

<p>ファイルもしくは全てダウンロードを選ぶと、ダウンロードと同時に解答するか選べ(すいません。現状gzの解凍のみ)<br/>
また抽出するファイル名を正規表現で絞り込めるかを選べます。</p>

<p>動くの重視で片手間に作ったのでノー例外処理でございます。<br/>
gz圧縮以外にも対応したいとかあれば、ご自由に改変してお使いください。</p>

<p>Gist<br/>
<a href="https://gist.github.com/YoshitsuguFujii/349069b2e74c28153a17">https://gist.github.com/YoshitsuguFujii/349069b2e74c28153a17</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># coding: utf-8</span>
</span><span class='line'>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;aws-sdk&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="no">S3_SAVE_DIR</span> <span class="o">=</span> <span class="s2">&quot;s3/&quot;</span>
</span><span class='line'><span class="no">ALL_FILE_DOWNLOAD</span> <span class="o">=</span> <span class="s2">&quot;全てのファイルを落とす&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">s3</span> <span class="o">=</span> <span class="no">AWS</span><span class="o">::</span><span class="no">S3</span><span class="o">.</span><span class="n">new</span><span class="p">(</span>
</span><span class='line'>  <span class="ss">access_key_id</span><span class="p">:</span> <span class="s2">&quot;YOUR AWS ACCESS KEY&quot;</span>
</span><span class='line'>  <span class="ss">secret_access_key</span><span class="p">:</span> <span class="s2">&quot;YOUR AWS SECRET&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">show_item_with_pointer</span><span class="p">(</span><span class="n">iterator</span><span class="p">,</span> <span class="n">console_print</span> <span class="o">=</span> <span class="kp">true</span><span class="p">)</span>
</span><span class='line'>  <span class="n">rtn_hash</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class='line'>  <span class="n">iterator</span><span class="o">.</span><span class="n">each_with_index</span> <span class="k">do</span> <span class="o">|</span><span class="n">value</span><span class="p">,</span> <span class="n">idx</span><span class="o">|</span>
</span><span class='line'>    <span class="n">rtn_hash</span><span class="o">[</span><span class="n">idx</span><span class="o">.</span><span class="n">to_s</span><span class="o">]</span> <span class="o">=</span> <span class="n">value</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">console_print</span>
</span><span class='line'>      <span class="nb">p</span> <span class="s2">&quot;[&quot;</span> <span class="o">+</span> <span class="p">(</span><span class="n">idx</span><span class="p">)</span><span class="o">.</span><span class="n">to_s</span> <span class="o">+</span> <span class="s2">&quot;] &quot;</span> <span class="o">+</span> <span class="n">value</span><span class="o">.</span><span class="n">inspect</span><span class="o">.</span><span class="n">to_s</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">rtn_hash</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">ls</span><span class="p">(</span><span class="n">tree</span><span class="p">)</span>
</span><span class='line'>  <span class="n">ls</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'>  <span class="n">directories</span> <span class="o">=</span> <span class="n">tree</span><span class="o">.</span><span class="n">children</span><span class="o">.</span><span class="n">select</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:branch?</span><span class="p">)</span><span class="o">.</span><span class="n">collect</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:prefix</span><span class="p">)</span>
</span><span class='line'>  <span class="n">files</span> <span class="o">=</span> <span class="n">tree</span><span class="o">.</span><span class="n">children</span><span class="o">.</span><span class="n">select</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:leaf?</span><span class="p">)</span><span class="o">.</span><span class="n">collect</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:key</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">#all_select = files.length &gt; 1 ?  [ALL_FILE_DOWNLOAD] : []</span>
</span><span class='line'>  <span class="n">all_select</span> <span class="o">=</span> <span class="o">[</span><span class="no">ALL_FILE_DOWNLOAD</span><span class="o">]</span>
</span><span class='line'>  <span class="n">ls</span> <span class="o">=</span> <span class="n">all_select</span><span class="o">.</span><span class="n">concat</span><span class="p">(</span><span class="n">directories</span><span class="o">.</span><span class="n">concat</span><span class="p">(</span><span class="n">files</span><span class="p">))</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">get_or_into_directory_recursive</span><span class="p">(</span><span class="n">tree</span><span class="p">)</span>
</span><span class='line'>  <span class="n">file_and_directories</span> <span class="o">=</span> <span class="n">show_item_with_pointer</span><span class="p">(</span><span class="n">ls</span><span class="p">(</span><span class="n">tree</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">idx</span> <span class="o">=</span> <span class="n">gets_from_stdin</span><span class="p">(</span><span class="s2">&quot;fileまたはdirectoryを数値で選択&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">file_or_directory</span> <span class="o">=</span> <span class="n">file_and_directories</span><span class="o">[</span><span class="n">idx</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># select dir</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">file_or_directory</span><span class="o">.</span><span class="n">end_with?</span><span class="p">(</span><span class="s2">&quot;/&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">tree</span> <span class="o">=</span> <span class="vi">@bucket</span><span class="o">.</span><span class="n">as_tree</span><span class="p">({</span><span class="ss">prefix</span><span class="p">:</span> <span class="n">file_or_directory</span><span class="p">})</span>
</span><span class='line'>    <span class="n">objs</span> <span class="o">=</span> <span class="n">get_or_into_directory_recursive</span><span class="p">(</span><span class="n">tree</span><span class="p">)</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="n">objs</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'>    <span class="c1"># select all</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">file_or_directory</span> <span class="o">==</span> <span class="no">ALL_FILE_DOWNLOAD</span>
</span><span class='line'>      <span class="n">objs</span> <span class="o">=</span> <span class="n">get_objects</span><span class="p">(</span><span class="n">file_and_directories</span><span class="p">)</span>
</span><span class='line'>    <span class="c1"># select file</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="n">objs</span> <span class="o">&lt;&lt;</span> <span class="vi">@bucket</span><span class="o">.</span><span class="n">objects</span><span class="o">[</span><span class="n">file_or_directory</span><span class="o">]</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="n">objs</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># http://qiita.com/riocampos/items/cf71862bf975e13bdb4a</span>
</span><span class='line'><span class="k">def</span> <span class="nf">progress_bar</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">max</span> <span class="o">=</span> <span class="mi">100</span><span class="p">)</span>
</span><span class='line'>  <span class="n">i</span> <span class="o">=</span> <span class="n">i</span><span class="o">.</span><span class="n">to_f</span>
</span><span class='line'>  <span class="n">max</span> <span class="o">=</span> <span class="n">max</span><span class="o">.</span><span class="n">to_f</span>
</span><span class='line'>  <span class="n">i</span> <span class="o">=</span> <span class="n">max</span> <span class="k">if</span> <span class="n">i</span> <span class="o">&gt;</span> <span class="n">max</span>
</span><span class='line'>  <span class="n">percent</span> <span class="o">=</span> <span class="n">i</span> <span class="o">/</span> <span class="n">max</span> <span class="o">*</span> <span class="mi">100</span><span class="o">.</span><span class="mi">0</span>
</span><span class='line'>  <span class="n">rest_size</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">+</span> <span class="mi">5</span> <span class="o">+</span> <span class="mi">1</span> <span class="c1"># space + progress_num + %</span>
</span><span class='line'>  <span class="n">bar_size</span> <span class="o">=</span> <span class="mi">79</span> <span class="o">-</span> <span class="n">rest_size</span> <span class="c1"># (width - 1) - rest_size</span>
</span><span class='line'>  <span class="n">bar_str</span> <span class="o">=</span> <span class="s1">&#39;%-*s&#39;</span> <span class="o">%</span> <span class="o">[</span><span class="n">bar_size</span><span class="p">,</span> <span class="p">(</span><span class="s1">&#39;#&#39;</span> <span class="o">*</span> <span class="p">(</span><span class="n">percent</span> <span class="o">*</span> <span class="n">bar_size</span> <span class="o">/</span> <span class="mi">100</span><span class="p">)</span><span class="o">.</span><span class="n">to_i</span><span class="p">)</span><span class="o">]</span>
</span><span class='line'>  <span class="n">progress_num</span> <span class="o">=</span> <span class="s1">&#39;%3.1f&#39;</span> <span class="o">%</span> <span class="n">percent</span>
</span><span class='line'>  <span class="nb">print</span> <span class="s2">&quot;  r</span><span class="si">#{</span><span class="n">bar_str</span><span class="si">}</span><span class="s2"> </span><span class="si">#{</span><span class="s1">&#39;%5s&#39;</span> <span class="o">%</span> <span class="n">progress_num</span><span class="si">}</span><span class="s2">%&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">get_objects</span><span class="p">(</span><span class="n">file_and_directories</span><span class="p">)</span>
</span><span class='line'>  <span class="n">objs</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'>  <span class="n">file_and_directories</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">idx</span><span class="p">,</span> <span class="n">path</span><span class="o">|</span>
</span><span class='line'>    <span class="k">next</span> <span class="k">if</span> <span class="n">path</span> <span class="o">==</span> <span class="no">ALL_FILE_DOWNLOAD</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">path</span><span class="o">.</span><span class="n">end_with?</span><span class="p">(</span><span class="s2">&quot;/&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="n">tree</span> <span class="o">=</span> <span class="vi">@bucket</span><span class="o">.</span><span class="n">as_tree</span><span class="p">({</span><span class="ss">prefix</span><span class="p">:</span> <span class="n">path</span><span class="p">})</span>
</span><span class='line'>      <span class="n">recursive_file_and_directories</span> <span class="o">=</span> <span class="n">show_item_with_pointer</span><span class="p">(</span><span class="n">ls</span><span class="p">(</span><span class="n">tree</span><span class="p">),</span> <span class="kp">false</span><span class="p">)</span>
</span><span class='line'>      <span class="n">objs</span><span class="o">.</span><span class="n">concat</span><span class="p">(</span><span class="n">get_objects</span><span class="p">(</span><span class="n">recursive_file_and_directories</span><span class="p">))</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="n">objs</span> <span class="o">&lt;&lt;</span> <span class="vi">@bucket</span><span class="o">.</span><span class="n">objects</span><span class="o">[</span><span class="n">path</span><span class="o">]</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">objs</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">gets_from_stdin</span><span class="p">(</span><span class="n">message</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">print</span> <span class="n">message</span> <span class="k">unless</span> <span class="n">message</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>  <span class="n">str</span> <span class="o">=</span> <span class="no">STDIN</span><span class="o">.</span><span class="n">gets</span><span class="o">.</span><span class="n">chomp</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">get_y_or_n_from_stdin</span><span class="p">(</span><span class="n">message</span><span class="p">)</span>
</span><span class='line'>  <span class="n">bol</span> <span class="o">=</span> <span class="s2">&quot;&quot;</span>
</span><span class='line'>  <span class="k">while</span> <span class="o">!</span><span class="sx">%w(Y N)</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="n">bol</span><span class="o">.</span><span class="n">upcase</span><span class="p">)</span>
</span><span class='line'>    <span class="n">bol</span> <span class="o">=</span> <span class="n">gets_from_stdin</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">#{</span><span class="n">message</span><span class="si">}</span><span class="s2">(y/n)&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="n">bol</span><span class="o">.</span><span class="n">upcase</span> <span class="o">==</span> <span class="s2">&quot;Y&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">all_buckets</span> <span class="o">=</span> <span class="n">show_item_with_pointer</span><span class="p">(</span><span class="n">s3</span><span class="o">.</span><span class="n">buckets</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">idx</span> <span class="o">=</span> <span class="n">gets_from_stdin</span><span class="p">(</span><span class="s2">&quot;bucketを数値で選択&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="vi">@bucket</span> <span class="o">=</span> <span class="n">all_buckets</span><span class="o">[</span><span class="n">idx</span><span class="o">]</span>
</span><span class='line'><span class="n">tree</span> <span class="o">=</span> <span class="vi">@bucket</span><span class="o">.</span><span class="n">as_tree</span>
</span><span class='line'>
</span><span class='line'><span class="n">files</span> <span class="o">=</span> <span class="n">get_or_into_directory_recursive</span><span class="p">(</span><span class="n">tree</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">s3_dir</span> <span class="o">=</span> <span class="no">File</span><span class="o">.</span><span class="n">expand_path</span><span class="p">(</span><span class="no">S3_SAVE_DIR</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># gz圧縮なら解凍するか問う</span>
</span><span class='line'><span class="n">extract_bol</span> <span class="o">=</span> <span class="k">if</span> <span class="n">files</span><span class="o">.</span><span class="n">any?</span><span class="p">{</span><span class="o">|</span><span class="n">file</span><span class="o">|</span> <span class="n">file</span><span class="o">.</span><span class="n">key</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="s2">&quot;gz&quot;</span><span class="p">)}</span>
</span><span class='line'>                <span class="n">get_y_or_n_from_stdin</span><span class="p">(</span><span class="s2">&quot;解凍を同時に行いますか？&quot;</span><span class="p">)</span>
</span><span class='line'>              <span class="k">else</span>
</span><span class='line'>                <span class="kp">false</span>
</span><span class='line'>              <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 正規表現抜き出しを行うか問う</span>
</span><span class='line'><span class="n">regexp</span> <span class="o">=</span> <span class="kp">nil</span>
</span><span class='line'><span class="k">if</span> <span class="n">get_y_or_n_from_stdin</span><span class="p">(</span><span class="s2">&quot;正規表現によるファイル名絞り込みを行いますか？&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">regexp</span> <span class="o">=</span> <span class="no">Regexp</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">gets_from_stdin</span><span class="p">(</span><span class="s2">&quot;正規表現を入力してください&quot;</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">files</span> <span class="o">=</span> <span class="n">files</span><span class="o">.</span><span class="n">reject</span> <span class="k">do</span> <span class="o">|</span><span class="n">file</span><span class="o">|</span>
</span><span class='line'>    <span class="n">file_path</span> <span class="o">=</span> <span class="o">[</span><span class="n">s3_dir</span><span class="p">,</span><span class="n">file</span><span class="o">.</span><span class="n">key</span><span class="o">].</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot;/&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="no">File</span><span class="o">.</span><span class="n">basename</span><span class="p">(</span><span class="n">file_path</span><span class="p">)</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="n">regexp</span><span class="p">)</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 保存処理</span>
</span><span class='line'><span class="n">files</span><span class="o">.</span><span class="n">each</span><span class="o">.</span><span class="n">with_index</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">file</span><span class="p">,</span> <span class="n">idx</span><span class="o">|</span>
</span><span class='line'>  <span class="n">file_path</span> <span class="o">=</span> <span class="o">[</span><span class="n">s3_dir</span><span class="p">,</span><span class="n">file</span><span class="o">.</span><span class="n">key</span><span class="o">].</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot;/&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">dir</span> <span class="o">=</span> <span class="no">File</span><span class="o">.</span><span class="n">dirname</span><span class="p">(</span><span class="n">file_path</span><span class="p">)</span>
</span><span class='line'>  <span class="no">FileUtils</span><span class="o">.</span><span class="n">mkdir_p</span><span class="p">(</span><span class="n">dir</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="n">file_path</span><span class="p">,</span> <span class="s1">&#39;wb&#39;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span>
</span><span class='line'>    <span class="n">file</span><span class="o">.</span><span class="n">read</span> <span class="k">do</span> <span class="o">|</span><span class="n">chunk</span><span class="o">|</span>
</span><span class='line'>      <span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">chunk</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="n">extract_bol</span>
</span><span class='line'>    <span class="sb">`gunzip </span><span class="si">#{</span><span class="n">file_path</span><span class="si">}</span><span class="sb">`</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">progress_bar</span><span class="p">((</span><span class="n">idx</span><span class="o">.</span><span class="n">to_f</span> <span class="o">/</span> <span class="n">files</span><span class="o">.</span><span class="n">length</span><span class="p">)</span> <span class="o">*</span> <span class="mi">100</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
    </entry>
    
</feed>
