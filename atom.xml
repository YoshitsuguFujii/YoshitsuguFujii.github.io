<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

    <title><![CDATA[なんとなく日々徒然と]]></title>
    <link href="http://yoshitsugufujii.github.io/atom.xml" rel="self"/>
    <link href="http://yoshitsugufujii.github.io/"/>
    <updated>2015-03-24T14:58:47+09:00</updated>
    <id>http://yoshitsugufujii.github.io/</id>
    <author>
        <name><![CDATA[Yoshitsugu Fujii]]></name>
        
    </author>
    <generator uri="http://octopress.org/">Octopress</generator>

    
    <entry>
        <title type="html"><![CDATA[同一のselectボックスを複数設置した場合に、選択された項目を他のプルダウンから削除するjs]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/03/24/select-narrowing-down/"/>
        <updated>2015-03-24T14:39:06+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/03/24/select-narrowing-down</id>
        <content type="html"><![CDATA[<p>作成したのはだいぶ前ですが、先日昔お世話になった人からselect-narrowing-downを使いたいんだけどという有難い言葉をいただき、そういえば作ったなぁと思い見返してみました。</p>

<p>デモはこんな感じです。</p>

<!-- more -->




<script src="https://rawgit.com/YoshitsuguFujii/select-narrowing-down.js/master/src/jquery-1.8.3.min.js"></script>


<script src="https://rawgit.com/YoshitsuguFujii/select-narrowing-down.js/master/src/select-narrowing-down.js"></script>


<script type="text/javascript">
  $(function(){
      $("#narrowing_down").bind("selectNarrowingDown", function(){
      var selected_index = $('this').context.activeElement.selectedIndex;
      var selected_text = $('this').context.activeElement[selected_index].text;
      alert(selected_text + "が選択されました");
    })
  });
</script>


<p><strong>select-narrowing-down.jsのデモ</strong></p>

<p>結婚相手に求めるものを３つ選んでください</p>

<div id="narrowing_down">
  <select>
    <option value="">&#8211;</option>
    <option value="1">お金</option>
    <option value="2">年齢</option>
    <option value="3">容姿</option>
    <option value="4">相性</option>
    <option value="5">性格</option>
  </select>

  <select>
    <option value="">&#8211;</option>
    <option value="1">お金</option>
    <option value="2">年齢</option>
    <option value="3">容姿</option>
    <option value="4">相性</option>
    <option value="5">性格</option>
  </select>

  <select>
    <option value="">&#8211;</option>
    <option value="1">お金</option>
    <option value="2">年齢</option>
    <option value="3">容姿</option>
    <option value="4">相性</option>
    <option value="5">性格</option>
  </select>
</div>


<p><br>
<br></p>

<p>プルダウンを選択した時に処理を入れれるように第2引数にfunctionを設定できます。<br/>
便利ですね！デモでは選択した内容をalert表示しています</p>

<p>チェックボックスじゃなくてどうしてもプルダウンでやりたい人はよかったら使ってみてください。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[今日 嫁にホワイトデーのお返しをしたよ]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/03/21/mouse-pad/"/>
        <updated>2015-03-21T12:16:35+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/03/21/mouse-pad</id>
        <content type="html"><![CDATA[<p>嫁のホワイトデーのお返しがようやく届きました。</p>

<p>かわいいマウスパッドというリクエストでしたが、探したけどかわいいマウスパッドがあまりなくどうしたものかと思ってましたが、
商品を自由にカスタマイズできる <a href="http://www.zazzle.co.jp">Zazzle</a>というサービスがとても良さそうだったのでこれを利用しました。</p>

<p>オーダーが3月9日。銀行振込も同日に行いました。<br/>
振込確認したので作りますメールが12日にきて、13日に発送しますメールがきました。<br/>
アメリカからの発送なので少し日数がたった3月16日に家に届きました。<br/>
でも実際には仕事で受け取れず、受け取ったのは今日です(^^;)</p>

<p>こんな感じのマウスパッドが届きました！
素晴らしい出来！</p>

<p><img src="http://yoshitsugufujii.github.io/images/for_post/20150321_011205565_iOS.jpg"></p>

<p>何か記念品を贈りたくなったらまた利用しようと思います。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[重複している画像ファイルを削除(rubyで)]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/03/20/delete-duplicated-file/"/>
        <updated>2015-03-20T17:27:16+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/03/20/delete-duplicated-file</id>
        <content type="html"><![CDATA[<p>重複しているファイルを削除します。</p>

<figure class='code'><figcaption><span>delete_duplicate_file.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;digest/md5&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">file_hash</span> <span class="o">=</span> <span class="no">ARGV</span><span class="o">.</span><span class="n">inject</span><span class="p">(</span><span class="no">Hash</span><span class="o">.</span><span class="n">new</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="nb">hash</span><span class="p">,</span> <span class="n">file</span><span class="o">|</span>
</span><span class='line'>              <span class="nb">hash</span><span class="o">[</span><span class="n">file</span><span class="o">]</span> <span class="o">=</span> <span class="no">Digest</span><span class="o">::</span><span class="no">MD5</span><span class="o">.</span><span class="n">hexdigest</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="n">file</span><span class="p">,</span> <span class="s1">&#39;rb&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">)</span>
</span><span class='line'>              <span class="nb">hash</span>
</span><span class='line'>            <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">duplicated_md5</span> <span class="o">=</span> <span class="n">file_hash</span><span class="o">.</span><span class="n">values</span><span class="o">.</span><span class="n">sort</span><span class="o">.</span><span class="n">inject</span><span class="p">(</span><span class="no">Hash</span><span class="o">.</span><span class="n">new</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">file_count</span><span class="p">,</span> <span class="n">md5</span><span class="o">|</span>
</span><span class='line'>                   <span class="n">file_count</span><span class="o">[</span><span class="n">md5</span><span class="o">]</span> <span class="o">=</span> <span class="n">file_hash</span><span class="o">.</span><span class="n">values</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="n">md5</span><span class="p">)</span>
</span><span class='line'>                   <span class="n">file_count</span>
</span><span class='line'>                 <span class="k">end</span><span class="o">.</span><span class="n">select</span> <span class="k">do</span> <span class="o">|</span><span class="n">md5</span><span class="p">,</span> <span class="n">count</span><span class="o">|</span>
</span><span class='line'>                   <span class="n">count</span> <span class="o">&gt;</span> <span class="mi">1</span>
</span><span class='line'>                 <span class="k">end</span><span class="o">.</span><span class="n">keys</span>
</span><span class='line'>
</span><span class='line'><span class="n">duplicated_md5</span><span class="o">.</span><span class="n">map</span> <span class="k">do</span> <span class="o">|</span><span class="n">file_md5</span><span class="o">|</span>
</span><span class='line'>  <span class="c1"># 削除ではなく重複したファイルを他のディレクトリに退避したい場合などはここを変えてください。</span>
</span><span class='line'>  <span class="no">File</span><span class="o">.</span><span class="n">unlink</span> <span class="n">file_hash</span><span class="o">.</span><span class="n">invert</span><span class="o">[</span><span class="n">file_md5</span><span class="o">]</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<!-- more -->


<p>使い方</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ruby delete_duplicate_file.rb ./*
</span></code></pre></td></tr></table></div></figure>


<p>引数でブロブ渡したら勝手に展開されて渡されてきたので、そのままプログラム内で参照しちゃったけどひょっとしたらzshだけかも(?)<br/>
もっとうまく書けるような気もするけど体力不足の今日の私の脳みそではこれが限界。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[ファイル内の特定の行の数値をインクリメントする]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/03/18/increment-in-file/"/>
        <updated>2015-03-18T12:00:03+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/03/18/increment-in-file</id>
        <content type="html"><![CDATA[<p>yamlファイルの特定の数字をインクリメントしたくてスクリプトを書きました。
データとしてはこんな感じです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">data_one</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">col_num</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">1</span>
</span><span class='line'>  <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">hoge</span>
</span><span class='line'>  <span class="l-Scalar-Plain">options</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">fuga</span>
</span><span class='line'><span class="l-Scalar-Plain">data_two</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">col_num</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">1</span>
</span><span class='line'>  <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">foo</span>
</span><span class='line'>  <span class="l-Scalar-Plain">options</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">baa</span>
</span><span class='line'><span class="l-Scalar-Plain">data_three</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">col_num</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">1</span>
</span><span class='line'>  <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">foofoo</span>
</span><span class='line'>  <span class="l-Scalar-Plain">options</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">baabaa</span>
</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<p>これのcol_numをインクリメントします。
応用きくように正規表現でひっかかるようにしときましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">if</span> <span class="no">ARGV</span><span class="o">.</span><span class="n">size</span> <span class="o">!=</span> <span class="mi">2</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;</span><span class="se">\e</span><span class="s2">[31m</span><span class="si">#{</span><span class="s2">&quot;[!]引数が不正です。第一引数にはファイルパスを、第二引数には正規表現を指定してください&quot;</span><span class="si">}</span><span class="se">\e</span><span class="s2">[0m&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">file_name</span> <span class="o">=</span> <span class="no">ARGV</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'><span class="n">regexp</span>    <span class="o">=</span> <span class="no">Regexp</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="no">ARGV</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 念のためバックアップを取る</span>
</span><span class='line'><span class="sb">`cp </span><span class="si">#{</span><span class="n">file_name</span><span class="si">}</span><span class="sb"> </span><span class="si">#{</span><span class="n">file_name</span><span class="si">}</span><span class="sb">_bk`</span>
</span><span class='line'>
</span><span class='line'><span class="n">sequence</span> <span class="o">=</span> <span class="kp">nil</span>
</span><span class='line'><span class="n">replaced_file_body</span> <span class="o">=</span> <span class="s2">&quot;&quot;</span>
</span><span class='line'><span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="n">file_name</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">file</span><span class="o">|</span>
</span><span class='line'>  <span class="n">file</span><span class="o">.</span><span class="n">read</span><span class="o">.</span><span class="n">each_line</span> <span class="k">do</span> <span class="o">|</span><span class="n">line</span><span class="o">|</span>
</span><span class='line'>    <span class="n">replaced_file_body</span> <span class="o">&lt;&lt;</span> <span class="k">if</span> <span class="n">line</span> <span class="o">=~</span>  <span class="n">regexp</span>
</span><span class='line'>                            <span class="c1"># 初回のsequenceのはじまり取得</span>
</span><span class='line'>                            <span class="k">if</span> <span class="n">sequence</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>                              <span class="n">sequence</span> <span class="o">=</span> <span class="n">line</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/[^0-9]/</span><span class="p">,</span> <span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">to_i</span>
</span><span class='line'>                              <span class="n">line</span>
</span><span class='line'>                            <span class="k">else</span>
</span><span class='line'>                              <span class="c1"># sequenceをincrementしながら置換</span>
</span><span class='line'>                              <span class="n">line</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/\d.*/</span><span class="p">,</span> <span class="p">(</span><span class="n">sequence</span> <span class="o">+=</span> <span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">to_s</span><span class="p">)</span>
</span><span class='line'>                            <span class="k">end</span>
</span><span class='line'>                          <span class="k">else</span>
</span><span class='line'>                            <span class="n">line</span>
</span><span class='line'>                          <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 変換した内容で書き換え</span>
</span><span class='line'><span class="n">file</span> <span class="o">=</span> <span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="n">file_name</span><span class="p">,</span> <span class="s2">&quot;w&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">file</span> <span class="o">&lt;&lt;</span> <span class="n">replaced_file_body</span>
</span><span class='line'><span class="n">file</span><span class="o">.</span><span class="n">close</span>
</span></code></pre></td></tr></table></div></figure>


<p>使い方はこんな感じです</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ruby increment_number_in_file.rb official_document_archive.yml col_num
</span></code></pre></td></tr></table></div></figure>


<p>すると結果こうなります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">data_one</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">col_num</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">1</span>
</span><span class='line'>  <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">hoge</span>
</span><span class='line'>  <span class="l-Scalar-Plain">options</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">fuga</span>
</span><span class='line'><span class="l-Scalar-Plain">data_two</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">col_num</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">2</span>
</span><span class='line'>  <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">foo</span>
</span><span class='line'>  <span class="l-Scalar-Plain">options</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">baa</span>
</span><span class='line'><span class="l-Scalar-Plain">data_three</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">col_num</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">3</span>
</span><span class='line'>  <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">foofoo</span>
</span><span class='line'>  <span class="l-Scalar-Plain">options</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">baabaa</span>
</span></code></pre></td></tr></table></div></figure>


<p>状況に応じて書き換えながらになると思いますが、よかったら使ってみてください。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[はじめて医療費控除を申告してみたよ]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/03/16/iryohi-koujo/"/>
        <updated>2015-03-16T21:07:30+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/03/16/iryohi-koujo</id>
        <content type="html"><![CDATA[<p>医療費控除。</p>

<p>薄々は知っていたけどそんなに病院にお金を使うこともなく、領収書と取っといたりするのも面倒なのであまり意識したことはなかったのですが、<br/>
去年はエクストルージョンという歯の処置を保険適用外(15万弱しました)でやったりとかなりお金を使ったので今回は医療費控除を請求してみることにしました。</p>

<p>郵送で申し込みます。</p>

<!-- more -->


<p></p>

<p><a href="https://www.keisan.nta.go.jp/h26/ta_top.htm#bsctrl">国税局</a>のシステムから入力していくと最終的にPDFができあがるのでこちらを印刷して郵送します。<br/>
医療費控除は特に難しいことはなく、ページを順次入力していったらすんなりできました。</p>

<p>ちなみに私は住宅減税で所得税は全額還付されており、住民税に充当される分が軽減されるとかよくわらかなかったので妻で申請することにしました。<br/>
個人個人ではなく同じ家に住む人をまとめて対象とできるので私のを合算した金額を妻が請求するといったことが可能なんですね。</p>

<p>ちなみに国税局のHP金額をうちこんでいくと最後に実際に還付される金額が画面上で表示されます。<br/>
去年は病院に172000円使いました。還付で6080円ほど戻ってくるようです。</p>

<p>入力大変でしたけど、ちょっとした小遣いと思えば大きいですね。<br/>
いったいいくら帰ってくるの？とか夫と妻どちらで申請したらいいの？<br/>
と悩んでいる方がいらっしゃったら実際にWEBから入力してみて、最後に表示される金額を見て決めてみたらいいんではないでしょうか？</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[関連先が存在していたら論理削除、関連先が存在していなかったら物理削除]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/03/13/real-delete-discreetly/"/>
        <updated>2015-03-13T22:21:31+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/03/13/real-delete-discreetly</id>
        <content type="html"><![CDATA[<p>という内容のものが業務で必要になり、処理を書きましたが勘違いでそんな仕様はどこにもなくお蔵入りになってしまって悔しいので
ここでさらします。</p>

<p>Gistではここに置いてあります。<br/>
<a href="https://gist.github.com/YoshitsuguFujii/e86d1f208a594ae4effa">real_delete_discreetly</a></p>

<!-- more -->


<p></p>

<p>本体です</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">RealDeleteDiscreetly</span>
</span><span class='line'>  <span class="kp">extend</span> <span class="no">ActiveSupport</span><span class="o">::</span><span class="no">Concern</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">delete_discreetly</span>
</span><span class='line'>    <span class="n">relation_exist</span> <span class="o">=</span> <span class="kp">false</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">confirm_relations</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">confirm_relation</span><span class="o">|</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">destroyed_by_association</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">destroyed_by_association</span><span class="o">.</span><span class="n">active_record</span> <span class="o">==</span> <span class="n">confirm_relation</span><span class="o">.</span><span class="n">to_s</span><span class="o">.</span><span class="n">classify</span><span class="o">.</span><span class="n">constantize</span>
</span><span class='line'>          <span class="n">relation_exist</span> <span class="o">=</span> <span class="kp">false</span>
</span><span class='line'>          <span class="k">break</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">reflection</span> <span class="o">=</span> <span class="nb">self</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">reflections</span><span class="o">[</span><span class="n">confirm_relation</span><span class="o">].</span><span class="n">presence</span>
</span><span class='line'>          <span class="n">send_method</span> <span class="o">=</span> <span class="k">case</span> <span class="n">reflection</span><span class="o">.</span><span class="n">macro</span>
</span><span class='line'>                    <span class="k">when</span> <span class="ss">:has_many</span>
</span><span class='line'>                      <span class="ss">:exists?</span>
</span><span class='line'>                    <span class="k">else</span>
</span><span class='line'>                      <span class="ss">:present?</span>
</span><span class='line'>                    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>          <span class="k">if</span> <span class="nb">send</span><span class="p">(</span><span class="n">confirm_relation</span><span class="p">)</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="n">send_method</span><span class="p">)</span>
</span><span class='line'>            <span class="n">relation_exist</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'>            <span class="k">break</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'>          <span class="k">raise</span> <span class="no">ArgumentError</span><span class="p">,</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">confirm_relation</span><span class="si">}</span><span class="s2"> is not Reflection&quot;</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">unless</span> <span class="n">relation_exist</span>
</span><span class='line'>      <span class="nb">self</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">delete_all!</span><span class="p">(</span><span class="nb">self</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">primary_key</span><span class="o">.</span><span class="n">to_sym</span> <span class="o">=&gt;</span> <span class="nb">id</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">module</span> <span class="nn">ClassMethods</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">real_delete_discreetly</span><span class="p">(</span><span class="n">options</span> <span class="o">=</span> <span class="p">{})</span>
</span><span class='line'>      <span class="n">class_attribute</span> <span class="ss">:confirm_relations</span>
</span><span class='line'>      <span class="nb">self</span><span class="o">.</span><span class="n">confirm_relations</span> <span class="o">=</span> <span class="n">options</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="ss">:confirm_relations</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">acts_as_paranoid</span> <span class="n">options</span>
</span><span class='line'>      <span class="n">after_destroy</span> <span class="ss">:delete_discreetly</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>論理削除部分はact_as_paranoidに依存しています。<br/>
このソースはlibなどのオートロードの対象となるディレクトリに置く想定です。</p>

<p>該当のモデルでreal_delete_discreetlyすると<br/>
関連先が存在していたら論理削除、関連先が存在していなかったら物理削除<br/>
という動きをするようになるはずです。</p>

<p>こんな書き方になります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">UserProfile</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:user</span>
</span><span class='line'>  <span class="n">real_delete_discreetly</span> <span class="ss">column</span><span class="p">:</span> <span class="ss">:del_flg</span><span class="p">,</span> <span class="ss">column_type</span><span class="p">:</span> <span class="s1">&#39;boolean&#39;</span><span class="p">,</span> <span class="ss">confirm_relations</span><span class="p">:</span> <span class="o">[</span><span class="ss">:user</span><span class="o">]</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>こうするとuserが存在する場合は論理削除。<br/>
userレコードが存在しない場合は物理削除になります。<br/>
confirm_relations以外の値はacts_as_paranoidで渡すものと同じものが指定できます。<br/>
今回の例では論理削除のカラムをデフォルトのdeleted_atじゃなくてdelete_flagで見ている例ですね。</p>

<p>rspecも書くつもりだったので各モデルで使えるshared_exampleもあります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">shared_examples_for</span> <span class="s1">&#39;real delete discreetly&#39;</span> <span class="k">do</span> <span class="o">|</span><span class="n">opts</span><span class="o">|</span>
</span><span class='line'>  <span class="n">let</span><span class="p">(</span><span class="ss">:base_instance</span><span class="p">)</span> <span class="p">{</span> <span class="n">opts</span><span class="o">[</span><span class="ss">:base_instance</span><span class="o">]</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">let</span><span class="p">(</span><span class="ss">:confirm_relations</span><span class="p">)</span> <span class="p">{</span> <span class="n">opts</span><span class="o">[</span><span class="ss">:confirm_relations</span><span class="o">]</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">let</span><span class="p">(</span><span class="ss">:paranoid_column</span><span class="p">)</span> <span class="p">{</span> <span class="n">opts</span><span class="o">[</span><span class="ss">:paranoid_column</span><span class="o">]</span> <span class="o">||</span> <span class="ss">:delete_flag</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">let</span><span class="p">(</span><span class="ss">:paranoid_column_type</span><span class="p">)</span> <span class="p">{</span> <span class="n">opts</span><span class="o">[</span><span class="ss">:paranoid_column_type</span><span class="o">]</span> <span class="o">||</span> <span class="ss">:boolean</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">before</span> <span class="k">do</span>
</span><span class='line'>    <span class="vi">@model</span> <span class="o">=</span> <span class="n">base_instance</span><span class="o">.</span><span class="n">dup</span>
</span><span class='line'>    <span class="vi">@model</span><span class="o">.</span><span class="n">save</span>
</span><span class='line'>    <span class="k">case</span> <span class="n">paranoid_column_type</span><span class="o">.</span><span class="n">to_sym</span>
</span><span class='line'>    <span class="k">when</span> <span class="ss">:boolean</span>
</span><span class='line'>      <span class="vi">@from</span> <span class="o">=</span> <span class="kp">false</span>
</span><span class='line'>      <span class="vi">@to</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="n">time</span> <span class="o">=</span> <span class="no">Time</span><span class="o">.</span><span class="n">now</span>
</span><span class='line'>      <span class="no">Time</span><span class="o">.</span><span class="n">stub</span><span class="p">(</span><span class="ss">:now</span><span class="p">)</span><span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="n">time</span><span class="p">)</span>
</span><span class='line'>      <span class="vi">@from</span> <span class="o">=</span> <span class="kp">nil</span>
</span><span class='line'>      <span class="vi">@to</span> <span class="o">=</span> <span class="n">time</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">context</span> <span class="s1">&#39;relation exists&#39;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">before</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">confirm_relation</span> <span class="o">=</span> <span class="n">confirm_relations</span><span class="o">.</span><span class="n">first</span>
</span><span class='line'>      <span class="k">case</span> <span class="vi">@model</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">reflections</span><span class="o">[</span><span class="n">confirm_relation</span><span class="o">].</span><span class="n">macro</span>
</span><span class='line'>      <span class="k">when</span> <span class="ss">:has_many</span>
</span><span class='line'>        <span class="vi">@model</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="n">confirm_relation</span><span class="p">)</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="ss">:build</span><span class="p">)</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>        <span class="vi">@model</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="s2">&quot;build_</span><span class="si">#{</span><span class="n">confirm_relation</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">it</span> <span class="s1">&#39;soft deleted&#39;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">expect</span> <span class="p">{</span> <span class="vi">@model</span><span class="o">.</span><span class="n">destroy</span> <span class="p">}</span><span class="o">.</span><span class="n">to</span> <span class="n">change</span> <span class="p">{</span> <span class="vi">@model</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="n">paranoid_column</span><span class="p">)</span> <span class="p">}</span><span class="o">.</span><span class="n">from</span><span class="p">(</span><span class="vi">@from</span><span class="p">)</span><span class="o">.</span><span class="n">to</span><span class="p">(</span><span class="vi">@to</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">it</span> <span class="s1">&#39;not real deleted&#39;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">expect</span> <span class="p">{</span> <span class="vi">@model</span><span class="o">.</span><span class="n">destroy</span> <span class="p">}</span><span class="o">.</span><span class="n">to</span> <span class="n">change</span><span class="p">(</span><span class="vi">@model</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">unscoped</span><span class="p">,</span> <span class="ss">:count</span><span class="p">)</span><span class="o">.</span><span class="n">by</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">context</span> <span class="s1">&#39;when relation not exists&#39;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">it</span> <span class="s1">&#39;real deleted&#39;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">expect</span> <span class="p">{</span> <span class="vi">@model</span><span class="o">.</span><span class="n">destroy</span> <span class="p">}</span><span class="o">.</span><span class="n">to</span> <span class="n">change</span><span class="p">(</span><span class="vi">@model</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">unscoped</span><span class="p">,</span> <span class="ss">:count</span><span class="p">)</span><span class="o">.</span><span class="n">by</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>これをspec_helperなどからrequireするなり読み込めるようにしてもらって<br/>
対象のモデルで</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;rails_helper&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="no">RSpec</span><span class="o">.</span><span class="n">describe</span> <span class="no">UserProfile</span><span class="p">,</span> <span class="ss">type</span><span class="p">:</span> <span class="ss">:model</span> <span class="k">do</span>
</span><span class='line'> <span class="n">include_examples</span> <span class="s1">&#39;real delete discreetly&#39;</span><span class="p">,</span>
</span><span class='line'> <span class="ss">base_instance</span><span class="p">:</span> <span class="no">UserProfile</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">user_id</span><span class="p">:</span> <span class="n">nil_or_exist_id</span><span class="p">),</span>
</span><span class='line'> <span class="ss">confirm_relations</span><span class="p">:</span> <span class="o">[</span><span class="ss">:user</span><span class="o">]</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>とかやると論理削除と物理削除のテストが走ります。<br/>
ただ冒頭でも述べた通りお蔵入りしたのでちゃんと動くかどうか細かい所までは見きれていないです。
何かの参考になれば幸いです。</p>

<p>親のレコードが消された時に連動してdependent: :destroyとかの指定で消える場合は、親のレコードってdestroyed_by_associationに格納されるんですね。<br/>
今回のコードを書いてて初めて知りました。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[開発環境(development)で問題なかったのにdeployしようとしたらprecompileでこける。]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/03/12/invalid-css-after/"/>
        <updated>2015-03-12T23:58:19+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/03/12/invalid-css-after</id>
        <content type="html"><![CDATA[<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake aborted!
</span><span class='line'>Sass::SyntaxError: Invalid CSS after "...idth: Infinity%": expected expression (e.g. 1px, bold), was "; }"
</span><span class='line'>  (in /var/www/hogehoge/app/assets/stylesheets/fuga/fuga.css.scss)
</span><span class='line'>(sass):12</span></code></pre></td></tr></table></div></figure>


<p>見た目にも問題なさそうだし、念のため<a href="https://github.com/causes/scss-lint">scss-lint</a>とかも通してみたけど問題なさそう。</p>

<!-- more -->


<p></p>

<p>原因究明のためちょっとずつソースを削ってはコンパイルを繰り返したところ、
compile errorになっていた原因はここにありました。
わかりますか？</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='scss'><span class='line'><span class="nv">$colNums</span><span class="o">:</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">6</span><span class="o">,</span> <span class="mi">7</span><span class="o">,</span> <span class="mi">8</span><span class="o">,</span> <span class="mi">9</span><span class="o">,</span> <span class="mi">10</span><span class="p">;</span>
</span><span class='line'><span class="k">@each</span> <span class="err">$</span><span class="nt">colNum</span> <span class="nt">in</span> <span class="err">$</span><span class="nt">colNums</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">&amp;</span><span class="nc">.col-</span><span class="si">#{</span><span class="nv">$colNum</span><span class="si">}</span><span class="p">{</span>
</span><span class='line'>    <span class="na">width</span><span class="o">:</span> <span class="mi">100</span><span class="kt">%</span> <span class="o">/</span> <span class="nv">$colNum</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>エラー文言がsyntax error的なので構文エラーな箇所を必死に探していました。
結局0で割ってるからというどうしようもないミスでした。
結果こうなりました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='scss'><span class='line'><span class="nv">$colNums</span><span class="o">:</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">6</span><span class="o">,</span> <span class="mi">7</span><span class="o">,</span> <span class="mi">8</span><span class="o">,</span> <span class="mi">9</span><span class="o">,</span> <span class="mi">10</span><span class="p">;</span>
</span><span class='line'><span class="k">@each</span> <span class="err">$</span><span class="nt">colNum</span> <span class="nt">in</span> <span class="err">$</span><span class="nt">colNums</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">&amp;</span><span class="nc">.col-</span><span class="si">#{</span><span class="nv">$colNum</span><span class="si">}</span><span class="p">{</span>
</span><span class='line'>    <span class="k">@if</span> <span class="nv">$colNum</span> <span class="o">==</span> <span class="mi">0</span><span class="p">{</span>
</span><span class='line'>      <span class="na">width</span><span class="o">:</span> <span class="mi">100</span><span class="kt">%</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span><span class="k">@else</span><span class="p">{</span>
</span><span class='line'>      <span class="na">width</span><span class="o">:</span> <span class="p">(</span><span class="mi">100</span><span class="kt">%</span> <span class="o">/</span> <span class="nv">$colNum</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[GithubPageに移行しました]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/03/10/githubpageniyi-xing-simasita/"/>
        <updated>2015-03-10T20:56:12+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/03/10/githubpageniyi-xing-simasita</id>
        <content type="html"><![CDATA[<p>移行してみました。<br/>
とりあえずそれだけです。</p>

<p>あらためてこちらでもよろしくお願いします。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[Axlsxでエクセルのセルを折り返して全体を表示]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/02/24/20150224142535/"/>
        <updated>2015-02-24T14:25:12+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/02/24/20150224142535</id>
        <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;axlsx&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">package</span> <span class="o">=</span> <span class="no">Axlsx</span><span class="o">::</span><span class="no">Package</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">sheet</span> <span class="o">=</span> <span class="n">package</span><span class="o">.</span><span class="n">workbook</span><span class="o">.</span><span class="n">add_worksheet</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s1">&#39;lists&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">wrap_text</span> <span class="o">=</span> <span class="n">sheet</span><span class="o">.</span><span class="n">styles</span><span class="o">.</span><span class="n">add_style</span><span class="p">(</span>
</span><span class='line'>                              <span class="p">{</span>
</span><span class='line'>                               <span class="ss">:fg_color</span><span class="o">=&gt;</span> <span class="s2">&quot;FFFFFF&quot;</span><span class="p">,</span>                           <span class="c1"># 文字色</span>
</span><span class='line'>                               <span class="ss">:b</span> <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">,</span>                                     <span class="c1"># 太字</span>
</span><span class='line'>                               <span class="ss">:bg_color</span> <span class="o">=&gt;</span> <span class="s2">&quot;004586&quot;</span><span class="p">,</span>                          <span class="c1"># 背景色</span>
</span><span class='line'>                               <span class="ss">:sz</span> <span class="o">=&gt;</span> <span class="mi">12</span><span class="p">,</span>                                      <span class="c1"># フォントサイズ</span>
</span><span class='line'>                               <span class="ss">:border</span> <span class="o">=&gt;</span> <span class="p">{</span> <span class="ss">:style</span> <span class="o">=&gt;</span> <span class="ss">:thin</span><span class="p">,</span> <span class="ss">:color</span> <span class="o">=&gt;</span> <span class="s2">&quot;00&quot;</span> <span class="p">},</span> <span class="c1"># 罫線</span>
</span><span class='line'>                               <span class="ss">:alignment</span> <span class="o">=&gt;</span> <span class="p">{</span> <span class="ss">:horizontal</span> <span class="o">=&gt;</span> <span class="ss">:center</span><span class="p">,</span>         <span class="c1"># 配置</span>
</span><span class='line'>                                               <span class="ss">:vertical</span> <span class="o">=&gt;</span> <span class="ss">:center</span> <span class="p">,</span>
</span><span class='line'>                                               <span class="ss">:wrap_text</span> <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">}</span>
</span><span class='line'>                              <span class="p">}</span>
</span><span class='line'>                            <span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">add_row</span><span class="p">(</span><span class="o">[</span><span class="s1">&#39;とっても長いテキスト&#39;</span><span class="p">,</span> <span class="s1">&#39;短いテキスト&#39;</span><span class="o">]</span><span class="p">,</span> <span class="ss">style</span><span class="p">:</span> <span class="n">wrap_text</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">column_info</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">width</span> <span class="o">=</span> <span class="mi">5</span>
</span><span class='line'><span class="n">package</span><span class="o">.</span><span class="n">serialize</span><span class="p">(</span><span class="s1">&#39;test.xlsx&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[Axlsxでウィンドウ枠の固定]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/02/23/20150223110642/"/>
        <updated>2015-02-23T11:06:00+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/02/23/20150223110642</id>
        <content type="html"><![CDATA[<p>エクセルのウィンドウ枠の固定をAxlsxで行う方法</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;axlsx&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">package</span> <span class="o">=</span> <span class="no">Axlsx</span><span class="o">::</span><span class="no">Package</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">sheet</span> <span class="o">=</span> <span class="n">package</span><span class="o">.</span><span class="n">workbook</span><span class="o">.</span><span class="n">add_worksheet</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s1">&#39;lists&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">add_row</span><span class="p">(</span><span class="o">[</span><span class="s1">&#39;品名&#39;</span><span class="p">,</span> <span class="s1">&#39;単価&#39;</span><span class="p">,</span> <span class="s1">&#39;数量&#39;</span><span class="p">,</span> <span class="s1">&#39;計&#39;</span><span class="o">]</span> <span class="p">)</span>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">add_row</span><span class="p">(</span><span class="o">[</span><span class="s1">&#39;にんじん&#39;</span><span class="p">,</span>    <span class="mi">80</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span>      <span class="s1">&#39;=B2*C2&#39;</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">sheet_view</span><span class="o">.</span><span class="n">pane</span> <span class="k">do</span> <span class="o">|</span><span class="n">pane</span><span class="o">|</span>
</span><span class='line'>  <span class="n">pane</span><span class="o">.</span><span class="n">top_left_cell</span> <span class="o">=</span> <span class="s2">&quot;B2&quot;</span>
</span><span class='line'>  <span class="n">pane</span><span class="o">.</span><span class="n">state</span> <span class="o">=</span> <span class="ss">:frozen_split</span>
</span><span class='line'>  <span class="n">pane</span><span class="o">.</span><span class="n">y_split</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'>  <span class="n">pane</span><span class="o">.</span><span class="n">x_split</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'>  <span class="n">pane</span><span class="o">.</span><span class="n">active_pane</span> <span class="o">=</span> <span class="ss">:bottom_right</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">package</span><span class="o">.</span><span class="n">serialize</span><span class="p">(</span><span class="s1">&#39;test.xlsx&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[Axlsxでエクセルファイル作成時に注意する点とかはまりどころとか]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/02/21/20150221171638/"/>
        <updated>2015-02-21T17:16:00+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/02/21/20150221171638</id>
        <content type="html"><![CDATA[<p>最近Railsを使う会社が増えてきて、2年前にRailsを扱う会社をエージェントに探してもらった時はなかなか見つからなかったんですが、今は楽に見つかりそうですね。
そもそも登録した転職サイトがダメだったのかもしれないと思いますが。
千葉でRuby、Railsメインでやってる会社ないかな。</p>

<p>さてさて、ここのところずっと触っているAxlsxです。</p>

<h3>型に気をつける</h3>

<p>エクセルのセルが数値か文字列かで挙動が変わったりします。
文字列型のカラムに&#8221;1000&#8221;とか入っていた場合、エクセルでは数値として認識されてしまってvloolupなどの関数が反応しないことがあります。
その場合は明示的にtypeを指定しましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">add_row</span><span class="p">(</span>
</span><span class='line'>  <span class="o">[</span>
</span><span class='line'>    <span class="s2">&quot;1000&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="mi">1000</span><span class="p">,</span>
</span><span class='line'>  <span class="o">]</span><span class="p">,</span> <span class="ss">types</span><span class="p">:</span> <span class="o">[</span><span class="ss">:string</span><span class="p">,</span> <span class="ss">:float</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># もしくは</span>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">rows</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">cells</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">type</span> <span class="o">=</span> <span class="o">[</span><span class="ss">:string</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>typesに設定できるシンボル
<a href="http://www.rubydoc.info/github/randym/axlsx/master/Axlsx/Cell:type">Method: Axlsx::Cell  #type — Documentation for randym/axlsx
(master)</a>
[:date, :time, :float, :integer, :string, :boolean]</p>

<h3>エクセルの関数を設定してダウンロード</h3>

<p>そのままアップロードすると関数による値の設定が行われません。
おそらく数式はエクセルを開いた時にエクセル側で計算されるので、エクセルを一回も開かずにアップロードすると値が設定されていないことになるのかと思います
fomula  _valueを設定しましょう</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">add_row</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="s1">&#39;=A1+B1&#39;</span><span class="o">]</span><span class="p">,</span> <span class="ss">:formula_values</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="kp">nil</span><span class="p">,</span> <span class="kp">nil</span><span class="p">,</span> <span class="mi">3</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#_もしくは</span>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">rows</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">cells</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">value</span>         <span class="o">=</span> <span class="s2">&quot;=A1+B1&quot;</span>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">rows</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">cells</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">formula_value</span> <span class="o">=</span> <span class="s2">&quot;3&quot;</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[trueとfalseにrefinmentsを使ってメソッド追加]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/02/17/20150217112514/"/>
        <updated>2015-02-17T11:25:00+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/02/17/20150217112514</id>
        <content type="html"><![CDATA[<p>Rubyでモデルの値がtrueの場合は○。falseの場合は空文字を表示するメソッドが欲しかったのでrefimentsを使って実装したかったけどなかなかうまくいかない。<br/>
trueはインスタンスだと思うんだけど何か普通のインスタンスと違うのだろうか。</p>

<p>試行錯誤は省いて結論としてはこうしたらできました.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">BooleanEx</span>
</span><span class='line'>  <span class="n">refine</span> <span class="no">TrueClass</span> <span class="k">do</span>
</span><span class='line'>    <span class="k">def</span> <span class="nc">true</span><span class="o">.</span><span class="nf">to_circle</span>
</span><span class='line'>      <span class="s2">&quot;○&quot;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">refine</span> <span class="no">FalseClass</span> <span class="k">do</span>
</span><span class='line'>    <span class="k">def</span> <span class="nc">false</span><span class="o">.</span><span class="nf">to_circle</span>
</span><span class='line'>      <span class="s2">&quot;&quot;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">using</span> <span class="no">BooleanEx</span>
</span><span class='line'>
</span><span class='line'><span class="kp">true</span><span class="o">.</span><span class="n">to_circle</span> <span class="c1"># =&gt; &quot;○&quot;</span>
</span><span class='line'><span class="kp">false</span><span class="o">.</span><span class="n">to_circle</span> <span class="c1"># =&gt; &quot;&quot;</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[cacheのキーを削除]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2015/01/08/20150108182843/"/>
        <updated>2015-01-08T18:28:00+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2015/01/08/20150108182843</id>
        <content type="html"><![CDATA[<p>例えばmodelへの問い合わせ結果をキャッシュに保存していて、after  _saveなどで消したい場合などは<br/>
Rails.cache.delete(&lsquo;キー名&rsquo;)でできる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">users</span> <span class="o">=</span> <span class="no">Rails</span><span class="o">.</span><span class="n">cache</span><span class="o">.</span><span class="n">fetch</span><span class="p">(</span><span class="s2">&quot;users&quot;</span><span class="p">,</span> <span class="ss">expires_in</span><span class="p">:</span> <span class="mi">30</span><span class="o">.</span><span class="n">seconds</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>  <span class="no">User</span><span class="o">.</span><span class="n">all</span><span class="o">.</span><span class="n">to_a</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 消す</span>
</span><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">cache</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="s1">&#39;users&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[関連を保存時に削除する]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2014/12/26/20141226142144/"/>
        <updated>2014-12-26T14:21:00+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2014/12/26/20141226142144</id>
        <content type="html"><![CDATA[<p>saveした時に削除したいときは対象のレコードに対して</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">accepts_nested_attributes_for</span> <span class="p">:</span><span class="err">対象のアソシエーション</span><span class="p">,</span> <span class="ss">allow_destroy</span><span class="p">:</span> <span class="kp">true</span>
</span></code></pre></td></tr></table></div></figure>


<p>で宣言してから、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">parent</span><span class="o">.</span><span class="n">childs</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">mark_for_destruction</span> <span class="c1"># 削除したいレコードに削除のマークをつける</span>
</span><span class='line'><span class="n">parent</span><span class="o">.</span><span class="n">childs</span><span class="o">.</span><span class="n">save</span> <span class="c1"># =&gt; childsのfirstのものか削除される。</span>
</span></code></pre></td></tr></table></div></figure>


<p>で削除される。<br/>
ちなみにsave時にこれを削除してねってマークしたかは</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">parent</span><span class="o">.</span><span class="n">childs</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">marked_for_destruction?</span> <span class="c1"># =&gt; true</span>
</span></code></pre></td></tr></table></div></figure>


<p>で確認できる。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[カリー化のお話]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2014/12/19/20141219102458/"/>
        <updated>2014-12-19T10:24:00+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2014/12/19/20141219102458</id>
        <content type="html"><![CDATA[<p><a href="http://qiita.com/lnznt/items/0b20440cecd6f4e348b9">Ruby のカリー化を日本語で説明してみる -
Qiita</a><br/>
という記事を見たので自分も食べられない方のカリーを使ったものをなんか書いてみました。</p>

<p>irbで実行できます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">meeting</span> <span class="o">=</span> <span class="no">Proc</span><span class="o">.</span><span class="n">new</span> <span class="k">do</span> <span class="o">|</span><span class="n">teacher</span><span class="p">,</span> <span class="n">student</span><span class="o">|</span>
</span><span class='line'> <span class="nb">p</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">teacher</span><span class="si">}</span><span class="s2">は</span><span class="si">#{</span><span class="n">student</span><span class="si">}</span><span class="s2">くんとカレーについて話す&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">fujii_meeting</span> <span class="o">=</span> <span class="n">meeting</span><span class="o">.</span><span class="n">curry</span><span class="o">.</span><span class="p">(</span><span class="s2">&quot;藤井先生&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="sx">%w(田中 佐藤 斉藤 加藤)</span><span class="o">.</span><span class="n">each</span><span class="p">(</span><span class="o">&amp;</span><span class="n">fujii_meeting</span><span class="p">)</span>
</span><span class='line'><span class="c1"># =&gt; &quot;藤井先生は田中くんとカレーについて話す&quot;</span>
</span><span class='line'><span class="c1"># =&gt; &quot;藤井先生は佐藤くんとカレーについて話す&quot;</span>
</span><span class='line'><span class="c1"># =&gt; &quot;藤井先生は斉藤くんとカレーについて話す&quot;</span>
</span><span class='line'><span class="c1"># =&gt; &quot;藤井先生は加藤くんとカレーについて話す&quot;</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[Axlxsを使って新規ファイルを作って、RubyXLで読み出す話]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2014/12/18/20141218200736/"/>
        <updated>2014-12-18T20:07:00+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2014/12/18/20141218200736</id>
        <content type="html"><![CDATA[<p>どんどんtipsがニッチになっていきますね。</p>

<p>Axlxsで作ったファイルがRubyXLで読み取れませんでした。<br/>
一度エクセルで開いて保存すると読み取れるようになる。</p>

<p>RubyXLでAxlxsで作成したファイルを読み込むと数値とかは辛うじて所々取れていたので文字コードかと思って色々やってみましたが、このページで解決</p>

<p><a href="https://github.com/randym/axlsx/issues/349">Strings outputted not seen by rubyXL ? Issue   #349 ? randym/axlsx ?
GitHub</a></p>

<p>pkg = Package.create<br/>
したら<br/>
pkg.use  <em>shared  </em>strings = true<br/>
する必要があるみたいでした。</p>

<p>これで無事に読みだすことができました。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[AxlsxでExcelファイルをcell単位でprotectionをした話]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2014/12/17/20141217122846/"/>
        <updated>2014-12-17T12:28:00+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2014/12/17/20141217122846</id>
        <content type="html"><![CDATA[<p>Axlsxでエクセルと戯れる日々です。<br/>
2シート目とかにマスタデータを保持しておいて、1シート目でプルダウンでマスタデータを選ばせたりしています。<br/>
変更できないように2シート目はシート全体を保護しております。</p>

<p>今日はAxlsxでセルの保護をしたお話です。</p>

<p>これググっても全然出てきませんでした。</p>

<p>結論から言うとこれでできます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;axlsx&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;securerandom&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">package</span> <span class="o">=</span> <span class="no">Axlsx</span><span class="o">::</span><span class="no">Package</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">sheet</span> <span class="o">=</span> <span class="n">package</span><span class="o">.</span><span class="n">workbook</span><span class="o">.</span><span class="n">add_worksheet</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s1">&#39;lists&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">sheet_protection</span><span class="o">.</span><span class="n">password</span> <span class="o">=</span> <span class="no">SecureRandom</span><span class="o">.</span><span class="n">uuid</span>
</span><span class='line'><span class="n">locked</span> <span class="o">=</span> <span class="n">package</span><span class="o">.</span><span class="n">workbook</span><span class="o">.</span><span class="n">styles</span><span class="o">.</span><span class="n">add_style</span> <span class="ss">:locked</span> <span class="o">=&gt;</span> <span class="kp">true</span>
</span><span class='line'><span class="n">unlocked</span> <span class="o">=</span> <span class="n">package</span><span class="o">.</span><span class="n">workbook</span><span class="o">.</span><span class="n">styles</span><span class="o">.</span><span class="n">add_style</span> <span class="ss">:locked</span> <span class="o">=&gt;</span> <span class="kp">false</span>
</span><span class='line'>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">add_row</span><span class="p">(</span><span class="o">[</span><span class="s1">&#39;品名&#39;</span><span class="p">,</span> <span class="s1">&#39;単価&#39;</span><span class="p">,</span> <span class="s1">&#39;数量&#39;</span><span class="p">,</span> <span class="s1">&#39;計&#39;</span><span class="o">]</span><span class="p">,</span> <span class="ss">style</span><span class="p">:</span> <span class="n">unlocked</span> <span class="p">)</span>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">add_row</span><span class="p">(</span><span class="o">[</span><span class="s1">&#39;にんじん&#39;</span><span class="p">,</span>    <span class="mi">80</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span>      <span class="s1">&#39;=B2*C2&#39;</span><span class="o">]</span><span class="p">,</span> <span class="ss">style</span><span class="p">:</span> <span class="n">unlocked</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">rows</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">cells</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">style</span> <span class="o">=</span> <span class="n">locked</span> <span class="c1"># A1をロック(lock cell =&gt; A1)</span>
</span><span class='line'>
</span><span class='line'><span class="n">package</span><span class="o">.</span><span class="n">serialize</span><span class="p">(</span><span class="s1">&#39;test.xlsx&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>この答えの出し方が最終的にRubyのことはRubyに聞くという方式で解決したのですが、<br/>
この解決の仕方がRubyエンジニアっぽいなと思ったのでどうやってこの結論に辿り着いたかダラダラ書こうかと思います。</p>

<p>まずセルの保護をしたいという要件がありました。<br/>
コピペエンジニアの端くれとしてまずはググります。</p>

<p>行単位のロックのお話は見つけましたが、セルの保護ではいい結果がありません。<br/>
<a href="http://stackoverflow.com/questions/19051049/how-do-i-protect-header-rows-but-allow-to-enter-new-rows-using-axlsx">ruby on rails 3 - How do I protect header rows but allow to enter new
rows using AXLSX? - Stack
Overflow</a></p>

<p>テストは下手なドキュメントよりも役にたつと誰かが言っていたので(実際の使い方のサンプルが見れるので)Axlsxのテストを見てみます。<br/>
bundle open axlsxでaxlsxのインストールされたディレクトリを開いて、grep
protectとかやってみます。<br/>
いくつかヒットしたのでソースを見てみますがなんのこっちゃわかりません感じです。</p>

<p>とりあえずgrepでひっかかった<br/>
Axlsx::CellProtection.new<br/>
をキーワードにグーグルで検索してみますが有用な情報は皆無です。</p>

<p>一旦途方にくれます。コーヒーとか飲みます。</p>

<p>おもむろに再度irbを立ち上げます。<br/>
とりあえず怪しいものがないかコンソールから確認していってみることにします</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;axlsx&#39;</span>
</span><span class='line'><span class="n">package</span> <span class="o">=</span> <span class="no">Axlsx</span><span class="o">::</span><span class="no">Package</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">sheet</span> <span class="o">=</span> <span class="n">package</span><span class="o">.</span><span class="n">workbook</span><span class="o">.</span><span class="n">add_worksheet</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s1">&#39;lists&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">sheet</span><span class="o">.</span><span class="n">add_row</span><span class="p">(</span><span class="o">[</span><span class="s1">&#39;品名&#39;</span><span class="p">,</span> <span class="s1">&#39;単価&#39;</span><span class="p">,</span> <span class="s1">&#39;数量&#39;</span><span class="p">,</span> <span class="s1">&#39;計&#39;</span><span class="o">]</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>と打ちます。</p>

<p>cellに保護をかけたいのだからcellオブジェクトにプロパティがあるんじゃないかとあたりをつけます。</p>

<p>sheet.cellとうちます。そんなんねーよと返ってきます。<br/>
sheet.cells と打ちます。なんかコンソールに文字がたくさんでます。</p>

<p>A1のセルを取得してみます。<br/>
sheet.cells[0,0]とうちます。空の配列が返ってきます。<br/>
sheet.cells[0]とうちます。なんか一杯でてきます。<br/>
sheet.cells[0].classとうちます。   # =  > Axlsx::Cell<br/>
お、なんかいいの返ってきました。<br/>
sheet.cells[0].methods.grep(/protect/)とかうってみます。
[:protected  _methods]しか返ってきません。<br/>
一回煮詰まります。
sheet.cells[0].valueとかここで色々他のことをやってみますが、なかなかうまくいきません。</p>

<p>そもそもセル単位で値とか設定できるんかと思いつきます。<br/>
ググります。見つけます。</p>

<p><a href="http://stackoverflow.com/questions/18178196/modify-specific-cell-value-using-axlsx-gem-given-the-column-number-and-row-numer">ruby on rails - Modify specific cell value using Axlsx gem given the
column number and row numer - Stack
Overflow</a></p>

<p>特定のセルを取得するのは以下の方法でした。<br/>
sheet.rows[0].cells[0]</p>

<p>sheet.rows[0].cells[0].methodsでメソッド一回全部のメソッドを出してみます。</p>

<p>sheet.rows[0].cells[0].pos   # =  > [0,0]<br/>
とか<br/>
sheet.rows[0].cells[0].reference   # =  >   $A  $1<br/>
とか面白そうなメソッドがあります。</p>

<p>その中にstyle=というメソッドを見つけました。<br/>
これってひょっとして行単位のロックであったロックの書式を設定できるのではないかと推測します。</p>

<p>そして出きたのが冒頭のコードです。</p>

<p>sheet.rows[0].cells[0].style = locked<br/>
だけでは不十分で<br/>
sheet.sheet  _protection.password<br/>
でパスワードを設定しないといけないとか、保護をかけて必要な所をlockしたりunlockしたりしないといけないとか色々とはまりながらもなんとか答えを出せました。<br/>
今回は運も味方してくれたかなぁという気もします。</p>

<p>困ったときはインタラクティブにどんなメソッドがあるかどんな値が設定されているか確認しながら<br/>
試しながらやることで問題が解決できるというのは素晴らしいと思いました。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[特定のキーを除いたhashを返す]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2014/12/09/20141209150940/"/>
        <updated>2014-12-09T15:09:00+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2014/12/09/20141209150940</id>
        <content type="html"><![CDATA[<p>今までdeleteでチクチク消したり、rejectで該当キーをひっかけてhash作り直しリしてました。</p>

<p>exceptなんてあったんですね。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">{</span><span class="nb">name</span><span class="p">:</span> <span class="s2">&quot;藤井&quot;</span><span class="p">,</span> <span class="ss">age</span><span class="p">:</span> <span class="mi">34</span><span class="p">,</span> <span class="ss">job</span><span class="p">:</span> <span class="s2">&quot;developer&quot;</span><span class="p">}</span><span class="o">.</span><span class="n">except</span><span class="p">(</span><span class="ss">:age</span><span class="p">)</span> <span class="c1"># =&gt; { :name =&gt; &quot;藤井&quot;, :job =&gt; &quot;developer&quot; }</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[論理削除指定のモデルをhas_manyで参照し、かつnested_attributes_forにallow_destroyを指定するも物理削除になる。]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2014/12/07/20141207173028/"/>
        <updated>2014-12-07T17:30:00+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2014/12/07/20141207173028</id>
        <content type="html"><![CDATA[<p>環境はこちら<br/>
activerecord(4.1.6)<br/>
rails4  <em>acts  </em>as  _paranoid (0.1.4)</p>

<p>has  <em>manyのリレーション先でacts  </em>as  <em>paranoid指定しているのですが、<br/>
nested  </em>attributes  <em>for リレーション先, allow  </em>destroy : true<br/>
で何故か物理削除になっていまったので調べてみました。</p>

<p>結論としては</p>

<p>lib/active  <em>record/associations/has  </em>many  <em>association.rb<br/>
の112行目で<br/>
records.each(&amp;:destroy!)<br/>
とdestroy!で消していて、acts  </em>as  _paranoidのdestroy!は物理削除になるためでした。</p>

<p>何故destroyに!がついているのか
上記が定義されているdelete  <em>recordsメソッドを遡ってみます。<br/>
delete  </em>recordsメソッドはlib/active  <em>record/associations/collection  </em>association.rb<br/>
のremove  _recordsの中で呼ばれています(ソースでは492行目)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="c1"># lib/active_record/associations/collection_association.rb</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">remove_records</span><span class="p">(</span><span class="n">existing_records</span><span class="p">,</span> <span class="n">records</span><span class="p">,</span> <span class="nb">method</span><span class="p">)</span>
</span><span class='line'>    <span class="n">records</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">record</span><span class="o">|</span> <span class="n">callback</span><span class="p">(</span><span class="ss">:before_remove</span><span class="p">,</span> <span class="n">record</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">delete_records</span><span class="p">(</span><span class="n">existing_records</span><span class="p">,</span> <span class="nb">method</span><span class="p">)</span> <span class="k">if</span> <span class="n">existing_records</span><span class="o">.</span><span class="n">any?</span>
</span><span class='line'>    <span class="n">records</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">record</span><span class="o">|</span> <span class="n">target</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="n">record</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">records</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">record</span><span class="o">|</span> <span class="n">callback</span><span class="p">(</span><span class="ss">:after_remove</span><span class="p">,</span> <span class="n">record</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>んでこれはどこで呼ばれるかというとここで呼ばれています(ソースでは485行目)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="c1"># lib/active_record/associations/collection_association.rb</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">delete_or_destroy</span><span class="p">(</span><span class="n">records</span><span class="p">,</span> <span class="nb">method</span><span class="p">)</span>
</span><span class='line'>    <span class="n">records</span> <span class="o">=</span> <span class="n">records</span><span class="o">.</span><span class="n">flatten</span>
</span><span class='line'>    <span class="n">records</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">record</span><span class="o">|</span> <span class="n">raise_on_type_mismatch!</span><span class="p">(</span><span class="n">record</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>    <span class="n">existing_records</span> <span class="o">=</span> <span class="n">records</span><span class="o">.</span><span class="n">reject</span> <span class="p">{</span> <span class="o">|</span><span class="n">r</span><span class="o">|</span> <span class="n">r</span><span class="o">.</span><span class="n">new_record?</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="n">existing_records</span><span class="o">.</span><span class="n">empty?</span>
</span><span class='line'>      <span class="n">remove_records</span><span class="p">(</span><span class="n">existing_records</span><span class="p">,</span> <span class="n">records</span><span class="p">,</span> <span class="nb">method</span><span class="p">)</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="n">transaction</span> <span class="p">{</span> <span class="n">remove_records</span><span class="p">(</span><span class="n">existing_records</span><span class="p">,</span> <span class="n">records</span><span class="p">,</span> <span class="nb">method</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>transactionで囲まれています。<br/>
ということでdestroyに失敗した時にロールバックするために!をつけているようです。</p>

<p>なのでparanoidのdestroy!をalias  <em>method  </em>chainで物理削除にしてしまうか。<br/>
上記のrecords.each(&amp;:destroy!)をなんとか書き換えてあげると治りそうですね。</p>

<p>今回はこうやって直しました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">ActiveRecord</span>
</span><span class='line'>  <span class="k">module</span> <span class="nn">Associations</span>
</span><span class='line'>    <span class="k">module</span> <span class="nn">HasManyAssociationPatch</span>
</span><span class='line'>      <span class="k">def</span> <span class="nf">delete_records</span><span class="p">(</span><span class="n">records</span><span class="p">,</span> <span class="nb">method</span><span class="p">)</span>
</span><span class='line'>        <span class="k">if</span> <span class="nb">method</span> <span class="o">==</span> <span class="ss">:destroy</span>
</span><span class='line'>          <span class="n">records</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">record</span><span class="o">|</span>
</span><span class='line'>            <span class="k">raise</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">ActiveRecordError</span> <span class="k">unless</span> <span class="n">record</span><span class="o">.</span><span class="n">destroy</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>          <span class="n">update_counter</span><span class="p">(</span><span class="o">-</span><span class="n">records</span><span class="o">.</span><span class="n">length</span><span class="p">)</span> <span class="k">unless</span> <span class="n">inverse_updates_counter_cache?</span>
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'>          <span class="k">super</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Associations</span><span class="o">::</span><span class="no">HasManyAssociation</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="ss">:prepend</span><span class="p">,</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Associations</span><span class="o">::</span><span class="no">HasManyAssociationPatch</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>今回ソース読んでいて知ったんですけど、has  <em>manyって削除する時に<br/>
before  </em>remove<br/>
after  _remove<br/>
ってコールバックが発生するんですね。知らなかった。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[Nokogiriを使って部分的にhtmlを編集する]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2014/12/05/20141205115627/"/>
        <updated>2014-12-05T11:56:00+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2014/12/05/20141205115627</id>
        <content type="html"><![CDATA[<p>Nokogiriを使ってhelperメソッドで特定のinputに属性(クラス名)を追加したくなったのでやってみました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">html</span> <span class="o">=</span> <span class="o">&lt;&lt;</span><span class="no">HTML</span>
</span><span class='line'><span class="sh">&lt;div&gt;</span>
</span><span class='line'><span class="sh">  &lt;input id=&quot;hoge&quot; class=&quot;field&quot;&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="no">HTML</span>
</span><span class='line'>
</span><span class='line'><span class="n">doc</span> <span class="o">=</span> <span class="no">Nokogiri</span><span class="o">::</span><span class="no">HTML</span><span class="o">.</span><span class="n">parse</span><span class="p">(</span><span class="n">html</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">doc</span><span class="o">.</span><span class="n">css</span><span class="p">(</span><span class="s2">&quot;input#hoge&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">input</span><span class="o">|</span>
</span><span class='line'>  <span class="n">input</span><span class="o">[</span><span class="s1">&#39;class&#39;</span><span class="o">]</span> <span class="o">+=</span> <span class="s2">&quot; has_error&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">doc</span><span class="o">.</span><span class="n">to_html</span> <span class="c1"># =&gt; &quot;&lt;!DOCTYPE html PUBLIC   &quot;-//W3C//DTD HTML 4.0 Transitional//EN  &quot;   &quot;http://www.w3.org/TR/REC-html40/loose.dtd  &quot;&gt;  n&lt;html&gt;&lt;body&gt;  n&lt;div&gt;  n  &lt;input class=  &quot;field  &quot;&gt;  n  n&lt;/body&gt;&lt;/html&gt;  n&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Nokogiri::HTML.parseだとDOCTYPEとか  <html  >とか余計なものがついてくる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">html</span> <span class="o">=</span> <span class="o">&lt;&lt;</span><span class="no">HTML</span>
</span><span class='line'><span class="sh">&lt;div&gt;</span>
</span><span class='line'><span class="sh">  &lt;input id=&quot;hoge&quot; class=&quot;field&quot;&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="no">HTML</span>
</span><span class='line'>
</span><span class='line'><span class="n">doc</span> <span class="o">=</span> <span class="no">Nokogiri</span><span class="o">::</span><span class="no">HTML</span><span class="o">::</span><span class="no">DocumentFragment</span><span class="o">.</span><span class="n">parse</span><span class="p">(</span><span class="n">html</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">doc</span><span class="o">.</span><span class="n">css</span><span class="p">(</span><span class="s2">&quot;input#hoge&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">input</span><span class="o">|</span>
</span><span class='line'>  <span class="n">input</span><span class="o">[</span><span class="s1">&#39;class&#39;</span><span class="o">]</span> <span class="o">+=</span> <span class="s2">&quot; has_error&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">doc</span><span class="o">.</span><span class="n">to_html</span> <span class="c1"># =&gt; &quot;&lt;div&gt;  n  &lt;input id=  &quot;hoge  &quot; class=  &quot;field has_error  &quot;&gt;  n  n&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>そういう場合はDocumentFragmentを使うと部分的にhtmlを使える。</p>
]]></content>
    </entry>
    
</feed>
