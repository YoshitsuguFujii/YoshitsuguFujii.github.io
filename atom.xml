<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

    <title><![CDATA[なんとなく日々徒然と]]></title>
    <link href="http://yoshitsugufujii.github.io/atom.xml" rel="self"/>
    <link href="http://yoshitsugufujii.github.io/"/>
    <updated>2018-05-21T16:40:22+09:00</updated>
    <id>http://yoshitsugufujii.github.io/</id>
    <author>
        <name><![CDATA[Yoshitsugu Fujii]]></name>
        
    </author>
    <generator uri="http://octopress.org/">Octopress</generator>

    
    <entry>
        <title type="html"><![CDATA[花見川 テナガエビ]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2018/05/21/20180521-hanamigawa-tenagaebi/"/>
        <updated>2018-05-21T14:10:28+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2018/05/21/20180521-hanamigawa-tenagaebi</id>
        <content type="html"><![CDATA[<p>釣行日 2018年5月19日(土)<br/>
天気 晴<br/>
場所 花見川<br/>
釣行時間: 15:00 〜 18:00</p>

<p>娘をじいちゃん家に預けて、サーフィンに行こうかと思ったらサイズがモモとかだったので急遽釣りに切り替えました。<br/>
上州屋稲毛店に行って情報収集。</p>

<p>イワシはまだ回ってなくて、検見川浜突堤もポートタワーもセイゴ、フッコですかねぇ？<br/>
と言われ、テナガエビを聞いて見ると江戸川で釣りはじめたのでそろそろですかねぇ？<br/>
みたいな反応。</p>

<p>ということで赤虫買って人生初の本格テナガエビ釣りです。</p>

<!-- more -->


<p></p>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>
<ins class="adsbygoogle"
     style="display:block; text-align:center;"
     data-ad-layout="in-article"
     data-ad-format="fluid"
     data-ad-client="ca-pub-7039502723411845"
     data-ad-slot="8206045005"></ins></p>

<script>  
     (adsbygoogle = window.adsbygoogle || []).push({});  
</script>


<p></p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20180521/IMG_4838.JPG" data-lightbox="hanamigawa" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20180521/IMG_4838.JPG"><br/>
</a></p>

<p>赤虫餌。</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20180521/IMG_4839.JPG" data-lightbox="hanamigawa" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20180521/IMG_4839.JPG"><br/>
</a></p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20180521/IMG_4840.JPG" data-lightbox="hanamigawa" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20180521/IMG_4840.JPG"><br/>
</a></p>

<p>テトラうまってるし障害物のあるところにいるって聞いたからこのあたりかなぁ。<br/>
でも人いないなぁとウロウロしていると釣り人発見。</p>

<p>聞いてみると、テトラ周りは実績がないからどうなんですかねぇとのこと。<br/>
ついでに釣果を聞いてみると10匹ちょいぐらい釣ったとのこと。<br/>
見せてもらうと中々の良型でした。</p>

<p>あとは橋の下になるようですが、橋の下は人がいっぱいいたので小心者の自分は実績のないテトラで竿出してみます。</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20180521/IMG_4841.JPG" data-lightbox="hanamigawa" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20180521/IMG_4841.JPG"><br/>
</a></p>

<p>さっそくかわいいハゼが釣れました。</p>

<p>が、そのあと続かず。</p>

<p>そのうち潮がひきすぎて何も釣れる気がしません。<br/>
そして仕掛けがからみどうしようもなくなったので、川沿いに生えている桑の実を取りました。</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20180521/IMG_4844.JPG" data-lightbox="hanamigawa" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20180521/IMG_4844.JPG"><br/>
</a></p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20180521/IMG_4845.JPG" data-lightbox="hanamigawa" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20180521/IMG_4845.JPG"><br/>
</a></p>

<p>甘さ酸っぱさちょうど良くてうまいです。</p>

<p>仕掛け作り直して、潮が満ちてきた16時ごろ橋の方に移動して釣り再開です。</p>

<p>いい感じに誰もいません。</p>

<p>投入１発目でゲット</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20180521/IMG_4846.JPG" data-lightbox="hanamigawa" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20180521/IMG_4846.JPG"><br/>
</a></p>

<p>ピンセット探してまごついていたら再び仕掛けからまりました。<br/>
ハリス留めつけてたんですがどうもここに風であおられた道糸が絡んでしまう様子。</p>

<p>ハリス留めやめて八の字結びで仕掛けと結びます。<br/>
そしたら絡みなくなりました。<br/>
ハリス留めない方がいいですね。</p>

<p>その後あたり続くも、慣れていないためあげるのが早く何回かバラし。</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20180521/IMG_4848.JPG" data-lightbox="hanamigawa" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20180521/IMG_4848.JPG"><br/>
</a></p>

<p>途中ハゼが釣れたり。</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20180521/IMG_4849.JPG" data-lightbox="hanamigawa" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20180521/IMG_4849.JPG"><br/>
</a></p>

<p>ハゼが釣れたり。</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20180521/IMG_4852.JPG" data-lightbox="hanamigawa" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20180521/IMG_4852.JPG"><br/>
</a></p>

<p>カニがいたり。</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20180521/IMG_4857.JPG" data-lightbox="hanamigawa" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20180521/IMG_4857.JPG"><br/>
</a></p>

<p>過去一番小さいハゼが釣れたり。</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20180521/IMG_4860.JPG" data-lightbox="hanamigawa" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20180521/IMG_4860.JPG"><br/>
</a></p>

<p>日が暮れたり。</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20180521/IMG_4861.JPG" data-lightbox="hanamigawa" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20180521/IMG_4861.JPG"><br/>
</a></p>

<p>ドラクエの川を見るおじさんみたいになってみたりして終了です。</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20180521/IMG_4863.JPG" data-lightbox="hanamigawa" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20180521/IMG_4863.JPG"><br/>
</a></p>

<p>なれなさすぎて４匹でした。</p>

<p>赤虫を通し刺しでつけるコツがわかったのでまた挑戦したいな。<br/>
※体液がでるよりも早くさっと刺すのがいい感じ。</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20180521/IMG_4867.JPG" data-lightbox="hanamigawa" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20180521/IMG_4867.JPG"><br/>
</a></p>

<p>帰りの駐車場。近づいても何も反応しないじっと目をつぶっているネズミがいました。どうしたんだろう。</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20180521/IMG_4868.JPG" data-lightbox="hanamigawa" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20180521/IMG_4868.JPG"><br/>
</a></p>

<p>採取した桑の実は晩御飯の食卓に。<br/>
釣ったテナガエビは食べるほど釣れなかったので家の水槽で飼います。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[梅雨用に防水の釣りシューズを買ったよ]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2018/05/09/shimano-radial-shoes/"/>
        <updated>2018-05-09T14:17:30+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2018/05/09/shimano-radial-shoes</id>
        <content type="html"><![CDATA[<p>これから梅雨だし釣りでも使いそうだからとシマノ ドライシールド・デッキラジアルシューズを買おうとしてまちがえてスパイクの方買っちゃいました。</p>

<!-- more -->




<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"
     style="display:block; text-align:center;"
     data-ad-layout="in-article"
     data-ad-format="fluid"
     data-ad-client="ca-pub-7039502723411845"
     data-ad-slot="8206045005"></ins></p>

<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<p><a href="http://yoshitsugufujii.github.io/images/blog/20180509/IMG_4737.JPG" data-lightbox="imaiganpeki" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20180509/IMG_4737.JPG"><br/>
</a></p>

<p>道を歩くとちゃりちゃりうるさいし足の裏の突起が若干歩きづらいですね。<br/>
失敗したorz</p>

<p>色味が想像とちょっと違うなぁ。</p>

<table  border="0" cellpadding="5" style="border:none"><tr><td style="border:none;text-align:left"><a href="https://www.amazon.co.jp/exec/obidos/ASIN/B0742R8FNY/gogosakura-22/" target="_blank" >シマノ ドライシールド・デッキラジアルシューズ(ハイカットタイプ) FS-061Q キャメルアイボリー 26.0</a></td></tr><tr><td style="border:none"><table  border="0" cellpadding="0" style="border:none"><tr><td valign="top" style="border:none"><a href="https://www.amazon.co.jp/exec/obidos/ASIN/B0742R8FNY/gogosakura-22/" target="_blank" ><img src="https://images-fe.ssl-images-amazon.com/images/I/41A7KcRvG-L._SL160_.jpg" border="0" style="margin-right:10px" /></a></td><td valign="top" style="border:none;text-align:left"><div class="kaerebalink-detail" style="margin-bottom:5px;"> シマノ(SHIMANO) </div><div class="kaerebalink-salesranking" style="margin-bottom:5px">売り上げランキング : 83897</div><table style="border:none;margin-top:10px"><tr><td style="border:none;text-align:left;"><div class="shoplinkamazon" style="margin-right:5px"><a href="https://www.amazon.co.jp/gp/search?keywords=FS-061Q&__mk_ja_JP=%E3%82%AB%E3%82%BF%E3%82%AB%E3%83%8A&tag=gogosakura-22" target="_blank" >Amazon</a></div><div class="shoplinkrakuten" style="margin-right:5px"><a href="https://hb.afl.rakuten.co.jp/hgc/16102ad8.0804351d.16102ad9.09702e1c/?pc=https%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FFS-061Q%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0%26scid%3Daf_ich_link_urltxt%26m%3Dhttp%3A%2F%2Fm.rakuten.co.jp%2F" target="_blank" >楽天市場</a></div></td><td style="vertical-align:bottom;padding-left:10px;font-size:x-small;border:none">by <a href="http://kaereba.com" rel="nofollow" target="_blank">カエレバ</a></td></tr></table></font></td></tr></table></td></tr></table>

]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[Deviseちょっとしたtips２つ]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2018/05/08/devise-kowaza/"/>
        <updated>2018-05-08T10:38:56+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2018/05/08/devise-kowaza</id>
        <content type="html"><![CDATA[<p><a href="https://github.com/plataformatec/devise">Devise</a>の小技２つです。</p>

<!-- more -->




<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"
     style="display:block; text-align:center;"
     data-ad-layout="in-article"
     data-ad-format="fluid"
     data-ad-client="ca-pub-7039502723411845"
     data-ad-slot="8206045005"></ins></p>

<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<p>１. deviseでログインに失敗した際にアクセスされたページを元に任意のページへ飛ばす。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># config/initializers/devise.rb</span>
</span><span class='line'><span class="no">Devise</span><span class="o">.</span><span class="n">setup</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">warden</span> <span class="k">do</span> <span class="o">|</span><span class="n">manager</span><span class="o">|</span>
</span><span class='line'>    <span class="n">manager</span><span class="o">.</span><span class="n">failure_app</span> <span class="o">=</span> <span class="no">CustomAuthenticationFailure</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># lib/custom_authentication_failure.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">CustomAuthenticationFailure</span> <span class="o">&lt;</span> <span class="no">Devise</span><span class="o">::</span><span class="no">FailureApp</span>
</span><span class='line'>  <span class="kp">protected</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">redirect_url</span>
</span><span class='line'>    <span class="n">uri</span> <span class="o">=</span> <span class="no">URI</span><span class="o">.</span><span class="n">parse</span><span class="p">(</span><span class="n">warden_options</span><span class="o">[</span><span class="ss">:attempted_path</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">uri</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">start_with?</span><span class="p">(</span><span class="s1">&#39;/admin&#39;</span><span class="p">)</span>
</span><span class='line'>      <span class="n">hogehoge_url</span> <span class="c1"># adminではじまる場合に飛ばしたいurl</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="k">super</span> <span class="c1"># それ以外の場合は通常のdeviseの処理へ流す</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>warden_options[:attempted_path]でアクセスしようとしたパスが参照できます</p>

<p>２. ログインエリアのurlにアクセスした時に保存するurlを操作</p>

<p>deviseはデフォルトでログインエリアにアクセスした際に未ログイン状態だとそのアクセスしたパスをsessionに保存してくれ、<br/>
ログイン後にそのurlにリダイレクトしてくれる機能があります。</p>

<p>特定のurlを覚えさせたくなかったのでパッチをあてました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># config/initializers/devise.rb</span>
</span><span class='line'><span class="k">module</span> <span class="nn">StoreLocationPatch</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">store_location_for</span><span class="p">(</span><span class="n">resource_or_scope</span><span class="p">,</span> <span class="n">location</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">if</span> <span class="no">URI</span><span class="o">.</span><span class="n">parse</span><span class="p">(</span><span class="n">location</span><span class="p">)</span><span class="o">.</span><span class="n">path</span> <span class="o">==</span> <span class="s1">&#39;/&#39;</span> <span class="c1"># rootへのアクセスは記憶させない</span>
</span><span class='line'>    <span class="k">super</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">module</span> <span class="nn">Devise</span>
</span><span class='line'>  <span class="k">module</span> <span class="nn">Controllers</span>
</span><span class='line'>    <span class="k">module</span> <span class="nn">StoreLocation</span>
</span><span class='line'>      <span class="n">prepend</span> <span class="no">StoreLocationPatch</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[平塚新港 稚鮎 小サバ フグ]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2018/05/07/hiratsuka-20180506/"/>
        <updated>2018-05-07T11:22:07+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2018/05/07/hiratsuka-20180506</id>
        <content type="html"><![CDATA[<p>GW初日は何気に夜釣りしてました。</p>

<p>釣行日 2018年4月28日(日)<br/>
天気 晴れ<br/>
場所 今井岸壁<br/>
釣行時間: 0:00 〜 6:00</p>

<p>釣行日 2018年5月6日(日)<br/>
天気 晴れ(爆風)<br/>
場所 平塚新港<br/>
釣行時間: 12:00 〜 18:00</p>

<!-- more -->




<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"
     style="display:block; text-align:center;"
     data-ad-layout="in-article"
     data-ad-format="fluid"
     data-ad-client="ca-pub-7039502723411845"
     data-ad-slot="8206045005"></ins></p>

<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<p>まずは今井岸壁。</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20180507/IMG_4442.jpg" data-lightbox="imaiganpeki" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20180507/IMG_4442.jpg"><br/>
</a></p>

<p>新しめの墨跡一箇所ありましたが数人いるエギンガーもダメっぽかったです。<br/>
人はまばらですね。全体で10名ほどでしょうか。</p>

<p>深夜ってアナゴ釣れないんですかね？<br/>
この間買ったアナゴ天秤投げてみたくて投げ込んでみます。</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20180507/IMG_4440.jpg" data-lightbox="imaiganpeki" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20180507/IMG_4440.jpg"><br/>
</a></p>

<table  border="0" cellpadding="5" style="border:none"><tr><td style="border:none;text-align:left"><a href="https://www.amazon.co.jp/exec/obidos/ASIN/B00M8UTRFO/gogosakura-22/" target="_blank" >景山 アナゴ天秤 夜光G 25号</a></td></tr><tr><td style="border:none"><table  border="0" cellpadding="0" style="border:none"><tr><td valign="top" style="border:none"><a href="https://www.amazon.co.jp/exec/obidos/ASIN/B00M8UTRFO/gogosakura-22/" target="_blank" ><img src="https://images-fe.ssl-images-amazon.com/images/I/31DVKobdl4L._SL160_.jpg" border="0" style="margin-right:10px" /></a></td><td valign="top" style="border:none;text-align:left"><div class="kaerebalink-detail" style="margin-bottom:5px;"> 景山 </div><div class="kaerebalink-salesranking" style="margin-bottom:5px">売り上げランキング : 201376</div><table style="border:none;margin-top:10px"><tr><td style="border:none;text-align:left;"><div class="shoplinkamazon" style="margin-right:5px"><a href="https://www.amazon.co.jp/gp/search?keywords=%E3%82%A2%E3%83%8A%E3%82%B4%E5%A4%A9%E7%A7%A4&__mk_ja_JP=%E3%82%AB%E3%82%BF%E3%82%AB%E3%83%8A&tag=gogosakura-22" target="_blank" >Amazon</a></div><div class="shoplinkrakuten" style="margin-right:5px"><a href="https://hb.afl.rakuten.co.jp/hgc/16102ad8.0804351d.16102ad9.09702e1c/?pc=https%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2F%25E3%2582%25A2%25E3%2583%258A%25E3%2582%25B4%25E5%25A4%25A9%25E7%25A7%25A4%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0%26scid%3Daf_ich_link_urltxt%26m%3Dhttp%3A%2F%2Fm.rakuten.co.jp%2F" target="_blank" >楽天市場</a></div></td><td style="vertical-align:bottom;padding-left:10px;font-size:x-small;border:none">by <a href="http://kaereba.com" rel="nofollow" target="_blank">カエレバ</a></td></tr></table></font></td></tr></table></td></tr></table>


<p></p>

<p>釣れないのでラーメン食いました。寒かったのでうまかったです。</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20180507/IMG_4445.jpg" data-lightbox="imaiganpeki" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20180507/IMG_4445.jpg"><br/>
</a></p>

<p>ただ海で食べるとスープ捨てるわけにもいかないので飲み干さなきゃいけないのが辛いです。<br/>
あとはコーヒーも。</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20180507/IMG_4446.jpg" data-lightbox="imaiganpeki" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20180507/IMG_4446.jpg"><br/>
</a></p>

<p>完全坊主でした。<br/>
他の人もほぼ釣れてないようでした。</p>

<p>あ、朝方に来た隣の人が投げサビキでイナっ子釣ってました。</p>

<p>そして平塚新港。<br/>
おばあちゃんに娘を預けて自転車釣行です。</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20180507/IMG_4710.jpg" data-lightbox="hiratsuka" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20180507/IMG_4710.jpg"><br/>
</a></p>

<p>写真ではわからないかもしれませんが爆風です。<br/>
港内なのにうねりがたまにしぶきをあげて顔にかかります。</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20180507/IMG_4719.jpg" data-lightbox="hiratsuka" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20180507/IMG_4719.jpg"><br/>
</a></p>

<p>しかし暖かくなって来たからか普段からなのか。<br/>
入れ替わり立ち替わり人多いですね。<br/>
だいたい来る人はサビキですがみなさん釣れてません。</p>

<p>トリック２本出しましたが風がつよくて竿が動いてしまうので1本でやります。</p>

<p>地元っぽいおじさんたちはやわらかそうな延べ竿に小さいサビキつけて上下にあおってます。<br/>
そして3センチぐらいの魚をたまーにポツリポツリあげてます。</p>

<p>なんでしょう。</p>

<p>それを見て手持ちの一番小さいサイズのトリック2.5号につけかえてみます。</p>

<p>と、手持ちの竿にガッときたのでグッと合わせると</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20180507/IMG_4716.jpg" data-lightbox="hiratsuka" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20180507/IMG_4716.jpg"><br/>
</a></p>

<p>スレがかりフグ。</p>

<p>それ以外全然かかりません。</p>

<p>ひょっとして竿があってない？</p>

<p>私のは2号の竿。</p>

<p>ポツポツあげてるおじさんたちの竿に比べると固いです。</p>

<p>自転車できたので竿はあんまり持って来てないのですが、時間があったらやってみようと思っていた落とし込み用の竿がありました。<br/>
途中からこちらに変更。</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20180507/IMG_4722.jpg" data-lightbox="hiratsuka" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20180507/IMG_4722.jpg"><br/>
</a></p>

<p>1.5ヒロぐらいのところに沈めてると。</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20180507/IMG_4723.jpg" data-lightbox="hiratsuka" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20180507/IMG_4723.jpg"><br/>
</a></p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20180507/IMG_4726.jpg" data-lightbox="hiratsuka" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20180507/IMG_4726.jpg"><br/>
</a></p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20180507/IMG_4728.jpg" data-lightbox="hiratsuka" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20180507/IMG_4728.jpg"><br/>
</a></p>

<p>稚鮎っぽいです。<br/>
匂いもちゃんときゅうりのにおい。</p>

<p>神奈川では海も含めて稚鮎を釣ることは禁止されてます。</p>

<p><a href="http://www.pref.kanagawa.jp/cnt/f160583/">アユには禁漁期間があります</a></p>

<p>捕まっちゃいますので注意ですね。</p>

<p>夕方まで粘って見ましたが他には5センチぐらいの小さい鯖が釣れました。<br/>
ダメですね。夕方になるとますます風が強くなって色々と吹き飛び始めたので納竿しました。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[HHKB２種類を１年間使ってみて]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2018/04/26/hhkb/"/>
        <updated>2018-04-26T11:27:23+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2018/04/26/hhkb</id>
        <content type="html"><![CDATA[<p>デスクワークをやっている方は同じだと思いますが、<br/>
私はエンジニアなので最低でも一日8時間。<br/>
月20日で160時間。<br/>
年12ヶ月で1920時間。<br/>
キーボードを毎日うってます。</p>

<p>フリーランスになったということで経費を使えるようになり思い切って昨年職場用と自宅用に<br/>
<a href="https://www.pfu.fujitsu.com/direct/hhkb/detail_hhkb-pro2-types.html">HHKB Professional2 Type-S 白（英語配列）</a><br/>
<a href="https://www.pfu.fujitsu.com/hhkeyboard/hhkbpro/black.html">HHKB Professional 墨（英語配列）</a></p>

<p>を購入しました。</p>

<p>一年使っていての感想です。</p>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>
<ins class="adsbygoogle"
     style="display:block; text-align:center;" 
     data-ad-layout="in-article"
     data-ad-format="fluid"
     data-ad-client="ca-pub-7039502723411845"
     data-ad-slot="8206045005"></ins></p>

<script>  
     (adsbygoogle = window.adsbygoogle || []).push({});  
</script>


<p></p>

<p>Type-sはネット品を購入し週4常駐している職場に、<br/>
墨はフリマアプリで購入して自宅に置いてます。</p>

<p>打鍵感はType-sの方が圧倒的に優れていてスコスコとうっていて気持ちいいです。<br/>
墨も悪くないですが、Type-sに比べるとちょっと劣りますかね。</p>

<p>そんな打鍵感が最高のType-sですが<br/>
<a href="https://www.pfu.fujitsu.com/hhkeyboard/leaflet/keyspec.html">シリンドリカルステップ構造</a>により</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20180426/hhkbpro_side_line.jpg" data-lightbox="hhkb" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20180426/hhkbpro_side_line.jpg"><br/>
</a></p>

<p>親指が痛いです。<br/>
画像の通り湾曲している一番手前のボタンの手前側のエッジがたっているので親指に食い込みます。<br/>
すこしであればいいのですが、Mac使っているのでCommandボタンをよく押すのでつらいです。</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20180426/IMG_4431.JPG" data-lightbox="hhkb" data-title=""/>  <br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20180426/IMG_4431.JPG">  <br/>
</a></p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20180426/IMG_4432.JPG" data-lightbox="hhkb" data-title=""/>  <br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20180426/IMG_4432.JPG">  <br/>
</a></p>

<p>結局いろいろと触って見たけどType-sが一番コスパいいみたいな話しを聞きますがみなさん親指痛くなったりしないんですかね。</p>

<p>ただこのコンパクト差と打鍵感は手放し難いですね。<br/>
持ち運び楽チンだし。Realforceはでかさがありますからね..<br/>
FilocoのManilaはちょっと気になってます。</p>

<p>買うときは高いと思いますが、毎日使うもので10年は使えると思うので事務仕事の人は思いっきていいキーボードの購入をおすすめします。</p>

<p>それとHHKBは基本的には安くならないんですが楽天で買うとポイントがついてお得です。</p>

<table  border="0" cellpadding="5" style="border:none"><tr><td style="border:none;text-align:left"><a href="https://hb.afl.rakuten.co.jp/hgc/g00rgzi6.4dryw590.g00rgzi6.4dryx040/kaereba_2018042611530804?pc=https%3A%2F%2Fitem.rakuten.co.jp%2Fpfudirect%2F10000832%2F&m=http%3A%2F%2Fm.rakuten.co.jp%2Fpfudirect%2Fi%2F10000344%2F" target="_blank" >【送料無料】PFU製Happy Hacking KeyboardProfessional JP Type-S日本語配列／白PD-KB420WS</a></td></tr><tr><td style="border:none"><table  border="0" cellpadding="0" style="border:none"><tr><td valign="top" style="border:none"><a href="https://hb.afl.rakuten.co.jp/hgc/g00rgzi6.4dryw590.g00rgzi6.4dryx040/kaereba_2018042611530804?pc=https%3A%2F%2Fitem.rakuten.co.jp%2Fpfudirect%2F10000832%2F&m=http%3A%2F%2Fm.rakuten.co.jp%2Fpfudirect%2Fi%2F10000344%2F" target="_blank" ><img src="https://thumbnail.image.rakuten.co.jp/@0_mall/pfudirect/cabinet/kb/hhkb/item_typ-s_projp.jpg?_ex=128x128" border="0" style="margin-right:10px" /></a></td><td valign="top" style="border:none;text-align:left"><div class="kaerebalink-detail" style="margin-bottom:5px;"></div><table style="border:none;margin-top:10px"><tr><td style="border:none;text-align:left;"><div class="shoplinkrakuten" style="margin-right:5px"><a href="https://hb.afl.rakuten.co.jp/hgc/16102ad8.0804351d.16102ad9.09702e1c/kaereba_2018042611530804?pc=https%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FHappy%2520Hacking%2520Keyboard%2520Professional%2520JP%2520Type-S%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0%26scid%3Daf_ich_link_urltxt%26m%3Dhttp%3A%2F%2Fm.rakuten.co.jp%2F" target="_blank" >楽天市場</a></div><div class="shoplinkamazon" style="margin-right:5px"><a href="https://www.amazon.co.jp/gp/search?keywords=Happy%20Hacking%20Keyboard%20Professional%20JP%20Type-S&__mk_ja_JP=%E3%82%AB%E3%82%BF%E3%82%AB%E3%83%8A&tag=gogosakura-22" target="_blank" >Amazon</a></div></td><td style="vertical-align:bottom;padding-left:10px;font-size:x-small;border:none">by <a href="http://kaereba.com" rel="nofollow" target="_blank">カエレバ</a></td></tr></table></font></td></tr></table></td></tr></table>


<p></p>

<table  border="0" cellpadding="5" style="border:none"><tr><td style="border:none;text-align:left"><a href="https://hb.afl.rakuten.co.jp/hgc/g00rgzi6.4dryw590.g00rgzi6.4dryx040/kaereba_201804261156262336?pc=https%3A%2F%2Fitem.rakuten.co.jp%2Fpfudirect%2F10000819%2F&m=http%3A%2F%2Fm.rakuten.co.jp%2Fpfudirect%2Fi%2F10000342%2F" target="_blank" >【送料無料】PFU製Happy Hacking KeyboardProfessional2 Type-S英語配列／白PD-KB400WS</a></td></tr><tr><td style="border:none"><table  border="0" cellpadding="0" style="border:none"><tr><td valign="top" style="border:none"><a href="https://hb.afl.rakuten.co.jp/hgc/g00rgzi6.4dryw590.g00rgzi6.4dryx040/kaereba_201804261156262336?pc=https%3A%2F%2Fitem.rakuten.co.jp%2Fpfudirect%2F10000819%2F&m=http%3A%2F%2Fm.rakuten.co.jp%2Fpfudirect%2Fi%2F10000342%2F" target="_blank" ><img src="https://thumbnail.image.rakuten.co.jp/@0_mall/pfudirect/cabinet/kb/hhkb/item_typ-s_pro2.jpg?_ex=128x128" border="0" style="margin-right:10px" /></a></td><td valign="top" style="border:none;text-align:left"><div class="kaerebalink-detail" style="margin-bottom:5px;"></div><table style="border:none;margin-top:10px"><tr><td style="border:none;text-align:left;"><div class="shoplinkrakuten" style="margin-right:5px"><a href="https://hb.afl.rakuten.co.jp/hgc/16102ad8.0804351d.16102ad9.09702e1c/kaereba_201804261156262336?pc=https%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FHappy%2520Hacking%2520Keyboard%2520Professional%2520Type-S%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0%26scid%3Daf_ich_link_urltxt%26m%3Dhttp%3A%2F%2Fm.rakuten.co.jp%2F" target="_blank" >楽天市場</a></div><div class="shoplinkamazon" style="margin-right:5px"><a href="https://www.amazon.co.jp/gp/search?keywords=Happy%20Hacking%20Keyboard%20Professional%20Type-S&__mk_ja_JP=%E3%82%AB%E3%82%BF%E3%82%AB%E3%83%8A&tag=gogosakura-22" target="_blank" >Amazon</a></div></td><td style="vertical-align:bottom;padding-left:10px;font-size:x-small;border:none">by <a href="http://kaereba.com" rel="nofollow" target="_blank">カエレバ</a></td></tr></table></font></td></tr></table></td></tr></table>


<p></p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[Grapeでskip_before_action]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2018/04/24/grape-skip-filter/"/>
        <updated>2018-04-24T14:10:09+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2018/04/24/grape-skip-filter</id>
        <content type="html"><![CDATA[<p>Deviseとか使っていて、ApplicationControllerに認証の仕組みを設ける時。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">ApplicationController</span> <span class="o">&lt;</span> <span class="no">ActionController</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">before_action</span> <span class="ss">:authenticate_user!</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>こう書きますね。<br/>
ログイン前のページではログイン判定は不要なのでskip_before_actionでskipさせるのが定石だと思います</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">HogeController</span> <span class="o">&lt;</span>  <span class="no">ActionController</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">skip_before_action</span> <span class="ss">:authenticate_user!</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Grapeではどうやんのよっていう話し。</p>

<!-- more -->


<p></p>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>  <br/>
<ins class="adsbygoogle"  
     style="display:block; text-align:center;"  
     data-ad-layout="in-article"  
     data-ad-format="fluid"  
     data-ad-client="ca-pub-7039502723411845"  
     data-ad-slot="8206045005"></ins></p>

<script>    
     (adsbygoogle = window.adsbygoogle || []).push({});    
</script>


<p></p>

<p>route.settingsを使うといいです</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">API::V1</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">Root</span> <span class="o">&lt;</span> <span class="no">Grape</span><span class="o">::</span><span class="no">API</span>
</span><span class='line'>    <span class="n">before</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">user_authenticate!</span> <span class="k">unless</span> <span class="n">route</span><span class="o">.</span><span class="n">settings</span><span class="o">[</span><span class="ss">:skip_user_authenticate</span><span class="o">]</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">mount</span> <span class="no">Users</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">API::V1</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">Users</span> <span class="o">&lt;</span> <span class="no">Grape</span><span class="o">::</span><span class="no">API</span>
</span><span class='line'>    <span class="n">resource</span> <span class="s1">&#39;users&#39;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">route_setting</span> <span class="ss">:skip_user_authenticate</span><span class="p">,</span> <span class="kp">true</span>
</span><span class='line'>      <span class="n">get</span> <span class="k">do</span>
</span><span class='line'>        <span class="c1"># do something</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[潮干狩り 江戸川放水路]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2018/04/23/shiohigari/"/>
        <updated>2018-04-23T12:14:59+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2018/04/23/shiohigari</id>
        <content type="html"><![CDATA[<p>午前中は市川コルトンプラザの住宅展示場でプリキュアの握手会があったので大ファンの娘をつれて行ってきました。<br/>
そして午後からは<a href="http://www.sambanze.jp/facility/park/shell_gathering2018/">ふなばし 三番瀬海浜公園</a>の潮干狩り始まったようなので、<br/>
うちも潮干狩りするかってことで江戸川放水路に行きました。</p>

<!-- more -->


<p></p>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>    <br/>
<ins class="adsbygoogle"    
     style="display:block; text-align:center;"    
     data-ad-layout="in-article"    
     data-ad-format="fluid"    
     data-ad-client="ca-pub-7039502723411845"    
     data-ad-slot="8206045005"></ins></p>

<script>      
     (adsbygoogle = window.adsbygoogle || []).push({});      
</script>


<p></p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20180423/IMG_4418.JPG" data-lightbox="edogawa" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20180423/IMG_4418.JPG"><br/>
</a></p>

<p>無料で潮干狩りができるとはいえ、江戸川の河口。<br/>
水質とか衛生的とはいえない部分もあるので完全自己責任の世界ですね。</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20180423/IMG_4420.jpg" data-lightbox="edogawa" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20180423/IMG_4420.jpg"><br/>
</a></p>

<p>毎年妙典側ではマテ貝やアナジャコを取っている人がいますが市川よりはどうなんだろう。<br/>
あんまりやってる人いないような。</p>

<p>対岸の妙典は人いっぱいです。</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20180423/IMG_4421.jpg" data-lightbox="edogawa" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20180423/IMG_4421.jpg"><br/>
</a></p>

<p><span style='text-align: center;'><br/>
  根掛かりしまくる牡蠣殼の塊。蹴っても動きません。<br/>
</span></p>

<p>1時間半ぐらい遊んでホンビノス4つです。<br/>
左のネットの中身はシオフキ・・・・</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20180423/IMG_4422.jpg" data-lightbox="edogawa" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20180423/IMG_4422.jpg"><br/>
</a></p>

<p>砂抜きができれば意外とおいしいです。<br/>
うちはもっぱら佃煮にします。</p>

<p>急に気温があがったせいが泥がだいぶヘドロっつぽいにおいしてました。<br/>
次はお金出して三番瀬かな&hellip;</p>

<p>夕方になって市長選いってきました。</p>

<p>反自民ならなんでもいいというばかりに政策理論も違う社民、共産、自由など野党5党が支持した<a href="http://news.livedoor.com/article/detail/14617263/">村越氏が当選</a>されたようですね。<br/>
メディアの総力をあげての自民党、安倍叩きで票が流れたんですかね。</p>

<p>みずほたんも喜んでます。</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">千葉県市川市長選の再選挙は２２日、無所属新人で「５野党共闘」の元衆院議員村越ひろたみさんが当選！良かった。</p>&mdash; 福島みずほ (@mizuhofukushima) <a href="https://twitter.com/mizuhofukushima/status/988070898866548737?ref_src=twsrc%5Etfw">2018年4月22日</a></blockquote>


<p></p>

<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>


<p></p>

<p>うーん。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[高須海浜公園 サヨリ]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2018/04/18/takasu-sayori/"/>
        <updated>2018-04-18T11:12:33+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2018/04/18/takasu-sayori</id>
        <content type="html"><![CDATA[<p>釣行日 2018年04月15日(日)<br/>
天気 曇<br/>
場所 高須海浜公園<br/>
釣行時間: 16:00 〜 17:00</p>

<p>春の嵐ですが、午後から雨と風が和らぐというニュースを見て、急遽ちらほらと釣果情報が聞こえてくる春サヨリを釣りにいきます。<br/>
家族も引き連れてなので釣り場は高須海浜公園に決定。</p>

<!-- more -->


<p></p>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>  <br/>
<ins class="adsbygoogle"  
     style="display:block; text-align:center;"  
     data-ad-layout="in-article"  
     data-ad-format="fluid"  
     data-ad-client="ca-pub-7039502723411845"  
     data-ad-slot="8206045005"></ins></p>

<script>    
     (adsbygoogle = window.adsbygoogle || []).push({});    
</script>


<p></p>

<p>この時期のサヨリは産卵のために接岸しGWすぎぐらいまでは釣れるのだそう。</p>

<p>釣り場につくとチラホラといますね。</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20180418/IMG_4347.jpg" data-lightbox="takasukaihinkouen" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20180418/IMG_4347.jpg"><br/>
</a></p>

<p>海をのぞくと春の嵐の影響で底荒れして濁り、海藻もたくさん浮いています。</p>

<p>早速一投。</p>

<p>海藻が釣れました (^^;</p>

<p>その後も海藻が何度かかかり一気に気力が萎えます。<br/>
他の方々も中々釣れてませんね。</p>

<p>もっぱら近くにすむというおじさんと30分ぐらい投げずに話してました。<br/>
おじさんはおととい40センチのサヨリをここであげたそう。</p>

<p>おじさんと話していると風がオンショアになり、オンショアだと釣れないからとおじさんは帰宅。</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20180418/IMG_4349.jpg" data-lightbox="takasukaihinkouen" data-title=""/><br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20180418/IMG_4349.jpg"><br/>
</a></p>

<p>16:30ぐらいに隣の人がサヨリ釣り上げたのを見てあわてて投げます。<br/>
が釣れず。一回あたりはありましたがのらず。結果坊主。<br/>
隣の人は他にも２回ぐらい釣れてました。</p>

<p>おじさんに秋田狐で釣るといいよと教えてもらったので帰ってきてAMAZONでポチりました。<br/>
シーズンになると近くの釣具屋では品切れになってしまうのだそうな。</p>

<div class="kaerebalink-box" style="text-align:left;padding-bottom:20px;font-size:small;/zoom: 1;overflow: hidden;"><div class="kaerebalink-image" style="float:left;margin:0 15px 10px 0;"><a href="https://www.amazon.co.jp/exec/obidos/ASIN/B015K82CUM/gogosakura-22/" target="_blank" ><img src="https://images-fe.ssl-images-amazon.com/images/I/4106I5rEZJL._SL160_.jpg" style="border: none;" /></a></div><div class="kaerebalink-info" style="line-height:120%;/zoom: 1;overflow: hidden;"><div class="kaerebalink-name" style="margin-bottom:10px;line-height:120%"><a href="https://www.amazon.co.jp/exec/obidos/ASIN/B015K82CUM/gogosakura-22/" target="_blank" >がまかつ(Gamakatsu) 糸付 秋田狐 フック 茶 6号-ハリス0.6 釣り針</a><div class="kaerebalink-powered-date" style="font-size:8pt;margin-top:5px;font-family:verdana;line-height:120%">posted with <a href="http://kaereba.com" rel="nofollow" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail" style="margin-bottom:5px;"> がまかつ(Gamakatsu)     </div><div class="kaerebalink-link1" style="margin-top:10px;"><div class="shoplinkamazon" style="display:inline;margin-right:5px"><a href="https://www.amazon.co.jp/gp/search?keywords=%E7%A7%8B%E7%94%B0%E7%8B%90%206%E5%8F%B7&__mk_ja_JP=%E3%82%AB%E3%82%BF%E3%82%AB%E3%83%8A&tag=gogosakura-22" target="_blank" >Amazon</a></div><div class="shoplinkrakuten" style="display:inline;margin-right:5px"><a href="https://hb.afl.rakuten.co.jp/hgc/16102ad8.0804351d.16102ad9.09702e1c/?pc=https%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2F%25E7%25A7%258B%25E7%2594%25B0%25E7%258B%2590%25206%25E5%258F%25B7%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0%26scid%3Daf_ich_link_urltxt%26m%3Dhttp%3A%2F%2Fm.rakuten.co.jp%2F" target="_blank" >楽天市場</a></div></div></div><div class="booklink-footer" style="clear: left"></div></div>


<p>来週はこれで再チャレンジするぞ!</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[中国ではGoogle reCAPTCHAを使えません]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2018/04/12/china-recaptcha/"/>
        <updated>2018-04-12T14:34:20+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2018/04/12/china-recaptcha</id>
        <content type="html"><![CDATA[<!-- more -->


<p></p>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>
<ins class="adsbygoogle"
     style="display:block; text-align:center;"
     data-ad-layout="in-article"
     data-ad-format="fluid"
     data-ad-client="ca-pub-7039502723411845"
     data-ad-slot="8206045005"></ins></p>

<script>  
     (adsbygoogle = window.adsbygoogle || []).push({});  
</script>


<p></p>

<p>気をつけなはれや！</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[サーフィンを始める方に]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2018/04/11/surfin/"/>
        <updated>2018-04-11T12:42:29+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2018/04/11/surfin</id>
        <content type="html"><![CDATA[<p>先週の土日、連日九十九里の海岸でサーファーがなくなられたようで。<br/>
日曜日は海に入ってましたが、ほど近い場所で死亡事故が発生していたのはびっくりです。<br/>
流されたとしたら、暖かくなってきたとはいえ、今は水も冷たく想像を絶する恐怖だったと思います。<br/>
ご冥福をお祈りします。</p>

<p><a href="http://www3.nhk.or.jp/lnews/chiba/20180407/1080001978.html">東浪見</a><br/>
<a href="https://www.sankei.com/affairs/news/180408/afr1804080001-n1.html">本須賀</a></p>

<!-- more -->


<p></p>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>
<ins class="adsbygoogle"
     style="display:block; text-align:center;"
     data-ad-layout="in-article"
     data-ad-format="fluid"
     data-ad-client="ca-pub-7039502723411845"
     data-ad-slot="8206045005"></ins></p>

<script>  
     (adsbygoogle = window.adsbygoogle || []).push({});  
</script>


<p></p>

<p>私がサーフィンやった時は、転んでも下は水だから怪我しない。<br/>
海で遊んだり、プールで泳いだりするのは楽しいしサーフィンやりたい！という気持ちだけで始めました。</p>

<p>何回も流されそうになりながらやった経験としてはサーフィンはとても危険なスポーツだと思います。</p>

<p>子供ができたら子供にもやらせたいとか昔は考えてましたが、今は危なくってやらせたくないという気持ちに変わっています。</p>

<p>何が怖いかというと離岸流が一番怖いです。</p>

<p>流れるプールを逆に泳いだことがある人ならわかると思いますが、<br/>
それと同じか場合によってはそれよりも強い流れで沖にもって行かれます。</p>

<p>なので離岸流から抜けるためには真横にパドリングしなければいけないのですが<br/>
これが初心者には難しいです。</p>

<p>そもそもどこまで横にいけば離岸流から逃れられるのかわからないということ。<br/>
横にパドリングしても抜けれなければ体力だけを消耗してさらに流されるんじゃないかという恐怖。<br/>
横ってどっち？右？左？(カレントによっては右か左に流れたあと沖に流れるカレントになっていることがあるため)<br/>
このくらいなら流れに逆らってパドルすれば岸に到着できるんじゃないかと思いやってみたら体力だけ消耗して進んでいない。</p>

<p>体力がなくなってくると余裕もなくなります。<br/>
焦りが高まり、戻れないのではという絶望感に変わります。<br/>
そうなるとパニックになり呼吸も浅くなって辛くなり、死がどんどん近づいてくるような気がします。</p>

<p>こんなことが岸から25メートル以内でおこったりします。</p>

<p>そしてそんな状況でも他のサーファーは助けれません。<br/>
誰かにパドリングしてもらうことはできません。<br/>
自力でパドリングして帰るしかないのです。</p>

<p>この恐怖を知ってしまってやめてしまうサーフィン初心者も多いようです。</p>

<p>無事に帰れればいいですが、取り返しのつかないことにならないように<br/>
初心者の方は以下に気をつけましょう。</p>

<ul>
<li>初心者は経験者と行く。</li>
<li>はじめは他のサーファーのいない足のつくところで練習する</li>
<li>波のサイズが大きい時は入らない</li>
</ul>


<p>と書きましたが私自身、サーフィンはくっそ下手です。</p>

<p>今年はサーフィンと釣り、頑張ろう。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[サーフィン 一宮]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2018/04/09/surfin/"/>
        <updated>2018-04-09T16:09:15+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2018/04/09/surfin</id>
        <content type="html"><![CDATA[<p>稲毛の上州屋に行ったらファミリーが多くて賑わってました。<br/>
暖かくなってきたのでみなさん釣りをやられるようです。<br/>
セット物の竿とかみています。</p>

<p>店員さんに「ポートタワーで何が今釣れますか？何買えばいいですか？」<br/>
って聞いているお父さんがいたので思わず聞き耳たててしまいました。</p>

<p>今は「フッコかセイゴ狙いになりますね。」</p>

<p>ですよねー。<br/>
と心の中でつぶやきます。<br/>
サビキでしか釣果をあげられない自分としてはサビキをたらせる日々が待ち遠しいです。</p>

<p>先週8ヶ月ぶりぐらいにサーフィンしたらヨボヨボのじいさん並みに体力落ちていたので、<br/>
昨日も一宮でサーフィンをしてきました。</p>

<!-- more -->


<p></p>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>
<ins class="adsbygoogle"
     style="display:block; text-align:center;"
     data-ad-layout="in-article"
     data-ad-format="fluid"
     data-ad-client="ca-pub-7039502723411845"
     data-ad-slot="8206045005"></ins></p>

<script>  
     (adsbygoogle = window.adsbygoogle || []).push({});  
</script>


<p></p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20180409/IMG_4279.JPG" data-lightbox="surfin" data-title=""/>  <br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20180409/IMG_4279.JPG">  <br/>
</a></p>

<p>14時ぐらいから波なくなる。</p>

<p>今年は落とし込みにも挑戦したいと思っているところ。<br/>
そういえば以前テトラにびっしりとカニがいたことあったなと調査。</p>

<p>カニは丹念に探して1匹2匹。<br/>
もうちょい後なのかな？</p>

<p>イガイはいっぱいありました。<br/>
ウェットきていることをいいことにジャブジャブはいって削ってみました。</p>

<p><a href="http://yoshitsugufujii.github.io/images/blog/20180409/IMG_4283.JPG" data-lightbox="surfin" data-title=""/>  <br/>
  <img src="http://yoshitsugufujii.github.io/images/blog/20180409/IMG_4283.JPG">  <br/>
</a></p>

<p>そんあことやってたら足の親指をすっぱり切ってました。</p>

<p>気をつけましょう。</p>

<p>帰りに太東港みてみましたが昼間だからもあったのか渋そうでした。<br/>
小さい3〜5センチぐらいのイワシか何かが泳いでました。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[Heroku小ネタ]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2018/04/03/rack-attack/"/>
        <updated>2018-04-03T11:43:22+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2018/04/03/rack-attack</id>
        <content type="html"><![CDATA[<p>HerokuでRailsアプリ動かすときは<br/>
<a href="https://github.com/kickstarter/rack-attack">rack-attack</a><br/>
入れといたほうが良さそう。</p>

<p><a href="https://help.heroku.com/HCCDCDYY/does-heroku-offer-ddos-denial-of-service-mitigation">https://help.heroku.com/HCCDCDYY/does-heroku-offer-ddos-denial-of-service-mitigation</a></p>

<!-- more -->


<p></p>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>  <br/>
<ins class="adsbygoogle"  
     style="display:block; text-align:center;"  
     data-ad-layout="in-article"  
     data-ad-format="fluid"  
     data-ad-client="ca-pub-7039502723411845"  
     data-ad-slot="8206045005"></ins></p>

<script>    
     (adsbygoogle = window.adsbygoogle || []).push({});    
</script>


<p></p>

<p>ちなみにthrottleの機能を使ってみたんですが、cacheを使って試行回数を判定するのでcache storeをnull_storeとかにしちゃうといつまでもローカルではテストできません。</p>

<p>最近釣りに行き始めてますが連続坊主中。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[最後にサインアウトした時間が欲しい]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2018/03/12/current-sign-out-at/"/>
        <updated>2018-03-12T12:51:13+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2018/03/12/current-sign-out-at</id>
        <content type="html"><![CDATA[<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>  <br/>
<ins class="adsbygoogle"  
     style="display:block; text-align:center;"  
     data-ad-layout="in-article"  
     data-ad-format="fluid"  
     data-ad-client="ca-pub-7039502723411845"  
     data-ad-slot="8206045005"></ins></p>

<script>    
     (adsbygoogle = window.adsbygoogle || []).push({});    
</script>


<p></p>

<p>before_logoutというwardenのフックメソッドがあるのでそこに追加<br/>
自分はconfig/initializers/devise.rbに追加しちゃいました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Warden</span><span class="o">::</span><span class="no">Manager</span><span class="o">.</span><span class="n">before_logout</span> <span class="k">do</span> <span class="o">|</span><span class="n">user</span><span class="p">,</span><span class="n">auth</span><span class="p">,</span><span class="n">opts</span><span class="o">|</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">user</span><span class="o">.</span><span class="n">is_a?</span><span class="p">(</span><span class="no">User</span><span class="p">)</span>
</span><span class='line'>    <span class="n">user</span><span class="o">.</span><span class="n">update_column</span><span class="p">(</span><span class="ss">:current_sign_out_at</span><span class="p">,</span> <span class="no">Time</span><span class="o">.</span><span class="n">current</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[Railsでredirect_toが呼ばれたか判定]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2018/03/05/rails-redirect-called/"/>
        <updated>2018-03-05T11:34:15+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2018/03/05/rails-redirect-called</id>
        <content type="html"><![CDATA[<p>アクションメソッドから呼び出したメソッドで呼ばれているかどうか</p>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>  <br/>
<ins class="adsbygoogle"  
     style="display:block; text-align:center;"  
     data-ad-layout="in-article"  
     data-ad-format="fluid"  
     data-ad-client="ca-pub-7039502723411845"  
     data-ad-slot="8206045005"></ins></p>

<script>    
     (adsbygoogle = window.adsbygoogle || []).push({});    
</script>


<p></p>

<p><a href="http://www.rubydoc.info/gems/rack/Rack/Response/Helpers#redirect%2F-instance_method">#redirect?</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">response</span><span class="o">.</span><span class="n">redirect?</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[GrapeでCSRF対策]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2018/02/26/csrf-with-grape/"/>
        <updated>2018-02-26T17:38:51+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2018/02/26/csrf-with-grape</id>
        <content type="html"><![CDATA[<p>セキュリティ試験を受けたらapiでpostしている箇所がcsrf違反でレポートが上がってきました。<br/>
apiでcsrfって必要なの？<br/>
って感じでしたが実際にレポートあがってきてしまっているしよくよく考えたら必要じゃんってなったので実装します。</p>

<p>ググってみると情報が少ないですね。<br/>
みなさんgrapeでcsrfどうしているんでしょう。</p>

<!-- more -->


<p></p>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>  <br/>
<ins class="adsbygoogle"  
     style="display:block; text-align:center;"  
     data-ad-layout="in-article"  
     data-ad-format="fluid"  
     data-ad-client="ca-pub-7039502723411845"  
     data-ad-slot="8206045005"></ins></p>

<script>    
     (adsbygoogle = window.adsbygoogle || []).push({});    
</script>


<p></p>

<p>gistでサンプル見つけましたが、<br/>
<a href="https://gist.github.com/jandudulski/f3799ca67b7b08ded0c6">jandudulski/auth.rb</a><br/>
Rails5.1.4では動きません。</p>

<p><a href="https://github.com/rails/rails/blob/master/actionpack/lib/action_controller/metal/request_forgery_protection.rb">actionpackのcsrfの実装</a><br/>
をみながら実装してみます。</p>

<p>結果としてはこんな感じになりました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">V1</span>
</span><span class='line'>  <span class="k">module</span> <span class="nn">RequestForgeryProtectionHelper</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">session</span>
</span><span class='line'>      <span class="n">env</span><span class="o">[</span><span class="s1">&#39;rack.session&#39;</span><span class="o">]</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">protect_against_forgery</span>
</span><span class='line'>      <span class="k">unless</span> <span class="n">verified_request?</span>
</span><span class='line'>        <span class="no">Rails</span><span class="o">.</span><span class="n">logger</span><span class="o">.</span><span class="n">error</span><span class="p">(</span><span class="s2">&quot;[API] Can&#39;t verify CSRF token authenticity.&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="n">error!</span><span class="p">(</span>
</span><span class='line'>          <span class="p">{</span>
</span><span class='line'>            <span class="ss">result</span><span class="p">:</span> <span class="mi">401</span><span class="p">,</span>
</span><span class='line'>            <span class="ss">status</span><span class="p">:</span> <span class="s1">&#39;error&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="ss">type</span><span class="p">:</span> <span class="s1">&#39;csrf_error&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="ss">message</span><span class="p">:</span> <span class="s2">&quot;Can&#39;t verify CSRF token authenticity.&quot;</span>
</span><span class='line'>          <span class="p">},</span> <span class="mi">401</span>
</span><span class='line'>        <span class="p">)</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">verified_request?</span>
</span><span class='line'>      <span class="o">!</span><span class="n">protect_against_forgery?</span> <span class="o">||</span> <span class="n">request</span><span class="o">.</span><span class="n">get?</span> <span class="o">||</span> <span class="n">request</span><span class="o">.</span><span class="n">head?</span> <span class="o">||</span>
</span><span class='line'>        <span class="n">authenticity_token_valid?</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">authenticity_token_valid?</span>
</span><span class='line'>      <span class="n">encoded_masked_token</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">headers</span><span class="o">[</span><span class="s1">&#39;X-CSRF-Token&#39;</span><span class="o">]</span> <span class="o">||</span> <span class="n">request</span><span class="o">.</span><span class="n">headers</span><span class="o">[</span><span class="s1">&#39;X-Csrf-Token&#39;</span><span class="o">]</span>
</span><span class='line'>      <span class="k">return</span> <span class="kp">false</span> <span class="k">if</span> <span class="n">encoded_masked_token</span><span class="o">.</span><span class="n">blank?</span>
</span><span class='line'>      <span class="n">masked_token</span> <span class="o">=</span> <span class="no">Base64</span><span class="o">.</span><span class="n">strict_decode64</span><span class="p">(</span><span class="n">encoded_masked_token</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">anonymous_controller</span> <span class="o">=</span> <span class="no">ApplicationController</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">masked_token</span><span class="o">.</span><span class="n">length</span> <span class="o">==</span> <span class="no">ActionController</span><span class="o">::</span><span class="no">RequestForgeryProtection</span><span class="o">::</span><span class="no">AUTHENTICITY_TOKEN_LENGTH</span>
</span><span class='line'>        <span class="n">anonymous_controller</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="ss">:compare_with_real_token</span><span class="p">,</span> <span class="n">masked_token</span><span class="p">,</span> <span class="n">session</span><span class="p">)</span>
</span><span class='line'>      <span class="k">elsif</span> <span class="n">masked_token</span><span class="o">.</span><span class="n">length</span> <span class="o">==</span> <span class="no">ActionController</span><span class="o">::</span><span class="no">RequestForgeryProtection</span><span class="o">::</span><span class="no">AUTHENTICITY_TOKEN_LENGTH</span> <span class="o">*</span> <span class="mi">2</span>
</span><span class='line'>        <span class="n">csrf_token</span> <span class="o">=</span> <span class="n">anonymous_controller</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="ss">:unmask_token</span><span class="p">,</span> <span class="n">masked_token</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">anonymous_controller</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="ss">:compare_with_real_token</span><span class="p">,</span> <span class="n">csrf_token</span><span class="p">,</span> <span class="n">session</span><span class="p">)</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>        <span class="kp">false</span> <span class="c1"># Token is malformed.</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">protect_against_forgery?</span>
</span><span class='line'>      <span class="n">allow_forgery_protection</span> <span class="o">=</span> <span class="no">Rails</span><span class="o">.</span><span class="n">configuration</span><span class="o">.</span><span class="n">action_controller</span><span class="o">.</span><span class="n">allow_forgery_protection</span>
</span><span class='line'>      <span class="n">allow_forgery_protection</span><span class="o">.</span><span class="n">nil?</span> <span class="o">||</span> <span class="n">allow_forgery_protection</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">V1</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">Root</span> <span class="o">&lt;</span> <span class="no">Grape</span><span class="o">::</span><span class="no">API</span>
</span><span class='line'>    <span class="n">helpers</span> <span class="no">RequestForgeryProtectionHelper</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">before</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">protect_against_forgery</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>クライアント側</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">token</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span> <span class="s1">&#39;meta[name=&quot;csrf-token&quot;]&#39;</span> <span class="p">).</span><span class="nx">attr</span><span class="p">(</span> <span class="s1">&#39;content&#39;</span> <span class="p">);</span>
</span><span class='line'><span class="nx">$</span><span class="p">.</span><span class="nx">ajaxSetup</span><span class="p">({</span>
</span><span class='line'>  <span class="nx">beforeSend</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span> <span class="nx">xhr</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">xhr</span><span class="p">.</span><span class="nx">setRequestHeader</span><span class="p">(</span> <span class="s1">&#39;X-CSRF-Token&#39;</span><span class="p">,</span> <span class="nx">token</span> <span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[Doorkeeperの認証で使われるtokenを取得]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2018/02/15/get-doorkeeper-token/"/>
        <updated>2018-02-15T11:46:00+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2018/02/15/get-doorkeeper-token</id>
        <content type="html"><![CDATA[<p>doorkeeprの処理のなかで削除済のユーザのステータスが取りたくて、tokenを取得できるかやってみました。</p>

<p>イレギュラーアクセス -> tokenが取れない。<br/>
通常のアクセス -> tokenが取れる。ユーザがひける。<br/>
削除済または退会済みユーザへのアクセス -> tokenが取れる。ユーザがひけない。</p>

<p>って感じでしょうか？</p>

<!-- more -->


<p></p>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>  <br/>
<ins class="adsbygoogle"  
     style="display:block; text-align:center;"  
     data-ad-layout="in-article"  
     data-ad-format="fluid"  
     data-ad-client="ca-pub-7039502723411845"  
     data-ad-slot="8206045005"></ins></p>

<script>    
     (adsbygoogle = window.adsbygoogle || []).push({});    
</script>


<p></p>

<p>下記のようにしたら取れました。<br/>
あとはこれをうまくつかってerrorとかで削除済のレスポンスを返す感じですね。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># frozen_string_literal: true</span>
</span><span class='line'>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;doorkeeper/grape/helpers&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">module</span> <span class="nn">V1</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">Root</span> <span class="o">&lt;</span> <span class="no">Grape</span><span class="o">::</span><span class="no">API</span>
</span><span class='line'>    <span class="n">helpers</span> <span class="no">Doorkeeper</span><span class="o">::</span><span class="no">Grape</span><span class="o">::</span><span class="no">Helpers</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">before</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">authorization_request</span> <span class="o">=</span> <span class="no">Doorkeeper</span><span class="o">::</span><span class="no">Grape</span><span class="o">::</span><span class="no">AuthorizationDecorator</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">request</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># これでrequestからtokenが取れる</span>
</span><span class='line'>      <span class="n">token</span> <span class="o">=</span> <span class="no">Doorkeeper</span><span class="o">::</span><span class="no">OAuth</span><span class="o">::</span><span class="no">Token</span><span class="o">.</span><span class="n">from_request</span><span class="p">(</span><span class="n">authorization_request</span><span class="p">,</span> <span class="o">*</span><span class="no">Doorkeeper</span><span class="o">.</span><span class="n">configuration</span><span class="o">.</span><span class="n">access_token_methods</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># そのトークンを使ってユーザのトークンが取れる。</span>
</span><span class='line'>      <span class="n">access_token</span> <span class="o">=</span> <span class="no">Doorkeeper</span><span class="o">::</span><span class="no">AccessToken</span><span class="o">.</span><span class="n">by_token</span><span class="p">(</span><span class="n">token</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">doorkeeper_authorize!</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">mount</span> <span class="no">Users</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[S3に直接にファイルアップロード]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2018/02/14/direct-upload-to-s3-with-rails-and-carrierwave/"/>
        <updated>2018-02-14T18:35:13+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2018/02/14/direct-upload-to-s3-with-rails-and-carrierwave</id>
        <content type="html"><![CDATA[<p>Herokuでの大きいファイルアップロードはリクエストタイムアウトが30秒に設定されているのでやっかいです。</p>

<p>Herokuの公式でも4MBを超えるファイルをあげる場合はS3に直接あげてねって書いてあります。<br/>
<a href="https://devcenter.heroku.com/articles/s3#direct-upload">https://devcenter.heroku.com/articles/s3#direct-upload</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>This is the preferred approach if you’re working with file uploads bigger than 4MB. The idea is to skip the hop to your dyno, making a direct connection from the end user browser to S3. While this reduces the processing required by your application it is a more complex implementation and limits the ability to modify (transform, filter, resize etc…) the file before storing in S3.</span></code></pre></td></tr></table></div></figure>


<p>carriwaveを使っているのでcarriwave_directいいなと思いましたが、<br/>
<a href="https://github.com/dwilkie/carrierwave_direct">carrierwave_direct</a></p>

<p>最終更新日が結構前でメンテされていないのかな？ってのとgemを使いすぎるとわけわかめになるので自力でやることにしました。</p>

<!-- more -->


<p></p>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>  <br/>
<ins class="adsbygoogle"  
     style="display:block; text-align:center;"  
     data-ad-layout="in-article"  
     data-ad-format="fluid"  
     data-ad-client="ca-pub-7039502723411845"  
     data-ad-slot="8206045005"></ins></p>

<script>    
     (adsbygoogle = window.adsbygoogle || []).push({});    
</script>


<p></p>

<p>署名付きアップロード用のリンクを生成してjsに渡しjsでそのurlにアップロードする流れです。</p>

<p>Awsコンソールにログインしてs3からBucketを作成します。<br/>
作成したBucketを選択してアクセス権限タブからCORSの設定を開きます。<br/>
以下のように設定します。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
</span><span class='line'>&lt;CORSConfiguration xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;
</span><span class='line'>&lt;CORSRule&gt;
</span><span class='line'>    &lt;AllowedOrigin&gt;*&lt;/AllowedOrigin&gt;
</span><span class='line'>    &lt;AllowedMethod&gt;GET&lt;/AllowedMethod&gt;
</span><span class='line'>    &lt;AllowedMethod&gt;PUT&lt;/AllowedMethod&gt;
</span><span class='line'>    &lt;MaxAgeSeconds&gt;3000&lt;/MaxAgeSeconds&gt;
</span><span class='line'>    &lt;AllowedHeader&gt;*&lt;/AllowedHeader&gt;
</span><span class='line'>&lt;/CORSRule&gt;
</span><span class='line'>&lt;/CORSConfiguration&gt;</span></code></pre></td></tr></table></div></figure>


<p>次にGemfileに追記してbundle install</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Gemfile</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;aws-sdk&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>S3_BUCKETを操作できるようにします。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># config/initializers/aws.rb</span>
</span><span class='line'><span class="n">credentials</span> <span class="o">=</span> <span class="no">Aws</span><span class="o">::</span><span class="no">Credentials</span><span class="o">.</span><span class="n">new</span><span class="p">(</span>
</span><span class='line'>  <span class="no">ENV</span><span class="o">[</span><span class="ss">:aws_access_key</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>  <span class="no">ENV</span><span class="o">[</span><span class="ss">:aws_secret</span><span class="o">]</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">s3_resource</span> <span class="o">=</span> <span class="no">Aws</span><span class="o">::</span><span class="no">S3</span><span class="o">::</span><span class="no">Resource</span><span class="o">::</span><span class="kp">new</span><span class="p">(</span><span class="ss">region</span><span class="p">:</span> <span class="s1">&#39;bucketのregion&#39;</span><span class="p">,</span> <span class="ss">credentials</span><span class="p">:</span> <span class="n">credentials</span><span class="p">)</span>
</span><span class='line'><span class="no">S3_BUCKET</span> <span class="o">=</span> <span class="n">s3_resource</span><span class="o">.</span><span class="n">bucket</span><span class="p">(</span><span class="s1">&#39;bucket名&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>URL生成のメソッドはCarrierwaveのuploaderクラスにメソッド生やしました。<br/>
取得はそのままCarrierwaveを使うイメージです。<br/>
今のプロジェクトでは基底クラスを作ってそれを継承させてます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">ApplicationUploader</span> <span class="o">&lt;</span> <span class="no">CarrierWave</span><span class="o">::</span><span class="no">Uploader</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">store_dir</span>
</span><span class='line'>    <span class="s2">&quot;uploads/</span><span class="si">#{</span><span class="n">model</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">to_s</span><span class="o">.</span><span class="n">underscore</span><span class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="n">mounted_as</span><span class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="n">model</span><span class="o">.</span><span class="n">id</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">presigned_url</span><span class="p">(</span><span class="n">file_name</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">)</span>
</span><span class='line'>    <span class="n">file_name</span> <span class="o">||=</span> <span class="nb">self</span><span class="o">.</span><span class="n">model</span><span class="o">.</span><span class="n">attributes</span><span class="o">[</span><span class="n">mounted_as</span><span class="o">.</span><span class="n">to_s</span><span class="o">]</span>
</span><span class='line'>    <span class="n">object</span> <span class="o">=</span> <span class="no">S3_BUCKET</span><span class="o">.</span><span class="n">object</span><span class="p">(</span><span class="o">[</span><span class="n">store_dir</span><span class="p">,</span> <span class="n">file_name</span><span class="o">].</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39;/&#39;</span><span class="p">))</span>
</span><span class='line'>    <span class="n">object</span><span class="o">.</span><span class="n">presigned_url</span><span class="p">(</span><span class="ss">:put</span><span class="p">,</span> <span class="ss">expires_in</span><span class="p">:</span> <span class="mi">1</span><span class="o">.</span><span class="n">minutes</span><span class="o">.</span><span class="n">to_i</span><span class="p">,</span> <span class="ss">acl</span><span class="p">:</span> <span class="s1">&#39;private&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">ImageUploader</span> <span class="o">&lt;</span> <span class="no">ApplicationUploader</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>これで以下のように署名付きリンクを生成できます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="n">user</span><span class="o">.</span><span class="n">image</span><span class="o">.</span><span class="n">presigned_url</span> <span class="c1"># =&gt; 署名付きのs3直アップロードurl</span>
</span></code></pre></td></tr></table></div></figure>


<p>署名付きリンクはデフォルトで900秒（15分）で失効します(上記uploaderでは1分にしている)<br/>
そのためcontrollerに生成してhiddenとかgonで渡すのはやめたほうがいい気がします。</p>

<p>jsで署名付きリンク生成リクエストをもらってurlを返し、そのurlでs3にアップロードするようにします。</p>

<p>Grapeでapiを作ります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">params</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">requires</span> <span class="ss">:file_name</span><span class="p">,</span> <span class="ss">type</span><span class="p">:</span> <span class="nb">String</span><span class="p">,</span> <span class="ss">desc</span><span class="p">:</span> <span class="s1">&#39;ファイル名&#39;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="n">post</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">create</span>
</span><span class='line'>  <span class="n">user</span><span class="o">.</span><span class="n">update_column</span><span class="p">(</span><span class="s1">&#39;image&#39;</span><span class="p">,</span> <span class="n">params</span><span class="o">[</span><span class="ss">:file_name</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span><span class="nb">id</span><span class="p">:</span> <span class="n">user</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="ss">filename</span><span class="p">:</span> <span class="n">params</span><span class="o">[</span><span class="ss">:file_name</span><span class="o">]</span><span class="p">,</span> <span class="ss">url</span><span class="p">:</span> <span class="n">user</span><span class="o">.</span><span class="n">image</span><span class="o">.</span><span class="n">presigned_url</span><span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>carriwaveで処理させたいのですがstore先にidが必要なため保存しています。</p>

<p>以下リンク取得からアップロードまでのサンプルです。<br/>
ちょっと適当な部分があるので動かなかったらすいません。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">let</span> <span class="nx">fd</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">FormData</span><span class="p">();</span>
</span><span class='line'><span class="nx">fd</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s1">&#39;file&#39;</span><span class="p">,</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;.file&#39;</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'><span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span>
</span><span class='line'>  <span class="nx">url</span> <span class="o">:</span> <span class="s1">&#39;grapeのurl&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">data</span> <span class="o">:</span> <span class="p">{</span><span class="nx">file_name</span><span class="o">:</span> <span class="nx">fileData</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;file&#39;</span><span class="p">).</span><span class="nx">name</span><span class="p">},</span>
</span><span class='line'>  <span class="nx">type</span> <span class="o">:</span> <span class="s1">&#39;post&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">dataType</span> <span class="o">:</span> <span class="s1">&#39;json&#39;</span>
</span><span class='line'><span class="p">}).</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span>
</span><span class='line'>    <span class="nx">url</span> <span class="o">:</span> <span class="nx">data</span><span class="p">.</span><span class="nx">url</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">data</span> <span class="o">:</span> <span class="nx">fileData</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;file&#39;</span><span class="p">),</span>
</span><span class='line'>    <span class="nx">type</span> <span class="o">:</span> <span class="s1">&#39;put&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">dataType</span> <span class="o">:</span> <span class="s1">&#39;xml&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">processData</span> <span class="o">:</span> <span class="kc">false</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">contentType</span> <span class="o">:</span> <span class="kc">false</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">success</span> <span class="o">:</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;成功したよー&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nx">error</span> <span class="o">:</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;失敗。無念&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>carrierwave-attachmentscannerを使っていたんですが、これは直アップロードだと使えないので、保存と同時にafter_saveでsidekiqのキューに押し込んであとでウィルスチェックしています。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[carrierwaveのリンクの有効期間を個別に設定]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2018/02/09/carrierwave-expire-setting/"/>
        <updated>2018-02-09T19:27:03+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2018/02/09/carrierwave-expire-setting</id>
        <content type="html"><![CDATA[<p>全体でかける場合はこうですかね。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># config/initializers/carrierwave.rb</span>
</span><span class='line'><span class="no">CarrierWave</span><span class="o">::</span><span class="no">SanitizedFile</span><span class="o">.</span><span class="n">sanitize_regexp</span> <span class="o">=</span> <span class="sr">/[^[:word:]\.\-\+]/</span> <span class="c1"># for Japanese</span>
</span><span class='line'><span class="no">CarrierWave</span><span class="o">.</span><span class="n">configure</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">fog_credentials</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>    <span class="ss">provider</span><span class="p">:</span>              <span class="s1">&#39;AWS&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">aws_access_key_id</span><span class="p">:</span>     <span class="no">ENV</span><span class="o">[</span><span class="ss">:access_key</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">aws_secret_access_key</span><span class="p">:</span> <span class="no">ENV</span><span class="o">[</span><span class="ss">:secret</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">region</span><span class="p">:</span>                <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;s3_region&#39;</span><span class="o">]</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">fog_public</span> <span class="o">=</span> <span class="kp">false</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">fog_directory</span> <span class="o">=</span> <span class="no">Settings</span><span class="o">.</span><span class="n">aws</span><span class="o">[</span><span class="s1">&#39;s3_bucket&#39;</span><span class="o">]</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">cache_storage</span> <span class="o">=</span> <span class="ss">:fog</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">fog_authenticated_url_expiration</span> <span class="o">=</span> <span class="mi">1</span><span class="o">.</span><span class="n">minutes</span><span class="o">.</span><span class="n">to_i</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<p></p>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>  <br/>
<ins class="adsbygoogle"  
     style="display:block; text-align:center;"  
     data-ad-layout="in-article"  
     data-ad-format="fluid"  
     data-ad-client="ca-pub-7039502723411845"  
     data-ad-slot="8206045005"></ins></p>

<script>    
     (adsbygoogle = window.adsbygoogle || []).push({});    
</script>


<p></p>

<p>個々のアップローダークラスでかける場合</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">ImageUploader</span> <span class="o">&lt;</span> <span class="no">CarrierWave</span><span class="o">::</span><span class="no">Uploader</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">fog_authenticated_url_expiration</span>
</span><span class='line'>    <span class="mi">1</span><span class="o">.</span><span class="n">minutes</span><span class="o">.</span><span class="n">to_i</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>
uploader内ではmodelでモデル側のインスタンスを参照できるのでmodel側の条件で動的に有効期限を変えるとかもできそうですね。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[ruby2.5にあげたら例外発生時にstacktraceが吐き出されなくなった]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2018/01/31/no-backtrace/"/>
        <updated>2018-01-31T11:51:51+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2018/01/31/no-backtrace</id>
        <content type="html"><![CDATA[<p>Railsである日を境に例外発生時にスタックトレースがでなくなっちゃいました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>F, [2018-01-31T11:41:40.388898 #5662] FATAL -- : 
</span><span class='line'>NoMethodError - undefined method `company_users' for nil:NilClass:</span></code></pre></td></tr></table></div></figure>


<p>railsのlogにはこれしかでない。</p>

<!-- more -->


<p></p>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>  <br/>
<ins class="adsbygoogle"  
     style="display:block; text-align:center;"  
     data-ad-layout="in-article"  
     data-ad-format="fluid"  
     data-ad-client="ca-pub-7039502723411845"  
     data-ad-slot="8206045005"></ins></p>

<script>    
     (adsbygoogle = window.adsbygoogle || []).push({});    
</script>


<p></p>

<p>検索すると発見。</p>

<p><a href="https://stackoverflow.com/questions/48327987/why-does-ruby-2-5-0-not-show-a-stacktrace-in-rails-5-1-4">Why does Ruby 2.5.0 not show a stacktrace in Rails 5.1.4?</a></p>

<p>なるほどrubyを2.5にあげたからか。</p>

<p>手元の環境を見ると</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ruby (2.5)  
</span><span class='line'>rails (5.1.4)  
</span><span class='line'>binding_of_caller (0.7.2)</span></code></pre></td></tr></table></div></figure>


<p>0.8.0にbinding_of_callerにあげて解決です。</p>
]]></content>
    </entry>
    
    <entry>
        <title type="html"><![CDATA[国際化対応(お金関連)]]></title>
        <link href="http://yoshitsugufujii.github.io/blog/2018/01/30/money-localization/"/>
        <updated>2018-01-30T10:27:12+09:00</updated>
        <id>http://yoshitsugufujii.github.io/blog/2018/01/30/money-localization</id>
        <content type="html"><![CDATA[<p>国際化対応。<br/>
DBの日時はutcで保存して表示する時にユーザによって該当のタイムゾーンで表示とか色々な知見はあるかと思いますが。<br/>
お金の区切りもあるんですね。</p>

<!-- more -->


<p></p>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p>  <br/>
<ins class="adsbygoogle"  
     style="display:block; text-align:center;"  
     data-ad-layout="in-article"  
     data-ad-format="fluid"  
     data-ad-client="ca-pub-7039502723411845"  
     data-ad-slot="8206045005"></ins></p>

<script>    
     (adsbygoogle = window.adsbygoogle || []).push({});    
</script>


<p></p>

<p>お金ってカンマ区切りだけかと思い込んでましたがそうじゃないらしいです。</p>

<p><a href="http://coliss.com/articles/build-websites/operation/writing/53.html">世界各国での数字の区切り方</a></p>

<p>数値がペリオドで送られてくる国やスペースで送ってくる国があるので注意が必要です。<br/>
カンマ一括で消して処理していたらバリデーションで特定の国入力エラーになっていた。</p>

<p>jsのtoLocaleStringとか使うとドイツのブラウザではカンマではなくペリオド入るらしいので気をつけるべし</p>
]]></content>
    </entry>
    
</feed>
